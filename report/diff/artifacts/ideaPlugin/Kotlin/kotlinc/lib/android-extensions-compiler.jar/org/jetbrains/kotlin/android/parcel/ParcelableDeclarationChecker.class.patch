--- jar:file:///Users/olegstotsky/Desktop/Code/JBSpring2020/dist-compare/compare/dist_gradle/artifacts/ideaPlugin/Kotlin/kotlinc/lib/android-extensions-compiler.jar!/org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.class
+++ jar:file:///Users/olegstotsky/Desktop/Code/JBSpring2020/dist-compare/compare/dist_jps/artifacts/ideaPlugin/Kotlin/kotlinc/lib/android-extensions-compiler.jar!/org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.class
@@ -126,509 +126,513 @@
   #120 = Utf8               ()Lcom/intellij/psi/PsiElement;
   #121 = NameAndType        #119:#120     // getNameIdentifier:()Lcom/intellij/psi/PsiElement;
   #122 = InterfaceMethodref #58.#121      // org/jetbrains/kotlin/psi/KtFunction.getNameIdentifier:()Lcom/intellij/psi/PsiElement;
   #123 = Utf8               com/intellij/psi/PsiElement
   #124 = Class              #123          // com/intellij/psi/PsiElement
-  #125 = Utf8               org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid
-  #126 = Class              #125          // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid
-  #127 = Utf8               OVERRIDING_WRITE_TO_PARCEL_IS_NOT_ALLOWED
-  #128 = Utf8               Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #129 = NameAndType        #127:#128     // OVERRIDING_WRITE_TO_PARCEL_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #130 = Fieldref           #126.#129     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.OVERRIDING_WRITE_TO_PARCEL_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #131 = Utf8               org/jetbrains/kotlin/diagnostics/DiagnosticFactory0
-  #132 = Class              #131          // org/jetbrains/kotlin/diagnostics/DiagnosticFactory0
-  #133 = Utf8               on
-  #134 = Utf8               (Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/SimpleDiagnostic;
-  #135 = NameAndType        #133:#134     // on:(Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/SimpleDiagnostic;
-  #136 = Methodref          #132.#135     // org/jetbrains/kotlin/diagnostics/DiagnosticFactory0.on:(Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/SimpleDiagnostic;
-  #137 = Utf8               org/jetbrains/kotlin/diagnostics/Diagnostic
-  #138 = Class              #137          // org/jetbrains/kotlin/diagnostics/Diagnostic
-  #139 = Utf8               report
-  #140 = Utf8               (Lorg/jetbrains/kotlin/diagnostics/Diagnostic;)V
-  #141 = NameAndType        #139:#140     // report:(Lorg/jetbrains/kotlin/diagnostics/Diagnostic;)V
-  #142 = InterfaceMethodref #31.#141      // org/jetbrains/kotlin/diagnostics/DiagnosticSink.report:(Lorg/jetbrains/kotlin/diagnostics/Diagnostic;)V
-  #143 = Utf8               reportElement
-  #144 = Utf8               Lcom/intellij/psi/PsiElement;
-  #145 = Utf8               method
-  #146 = Utf8               Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
-  #147 = Utf8               diagnosticHolder
-  #148 = Utf8               Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;
-  #149 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1
-  #150 = Class              #149          // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1
-  #151 = Utf8               <init>
-  #152 = Utf8               (Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)V
-  #153 = NameAndType        #151:#152     // "<init>":(Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)V
-  #154 = Methodref          #150.#153     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1."<init>":(Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)V
-  #155 = Utf8               hasDelegate
-  #156 = Utf8               ()Z
-  #157 = NameAndType        #155:#156     // hasDelegate:()Z
-  #158 = Methodref          #67.#157      // org/jetbrains/kotlin/psi/KtProperty.hasDelegate:()Z
-  #159 = Utf8               org/jetbrains/kotlin/resolve/BindingContext
-  #160 = Class              #159          // org/jetbrains/kotlin/resolve/BindingContext
-  #161 = Utf8               BACKING_FIELD_REQUIRED
-  #162 = Utf8               Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
-  #163 = NameAndType        #161:#162     // BACKING_FIELD_REQUIRED:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
-  #164 = Fieldref           #160.#163     // org/jetbrains/kotlin/resolve/BindingContext.BACKING_FIELD_REQUIRED:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
-  #165 = Utf8               org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice
-  #166 = Class              #165          // org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice
-  #167 = Utf8               get
-  #168 = Utf8               (Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;
-  #169 = NameAndType        #167:#168     // get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;
-  #170 = InterfaceMethodref #160.#169     // org/jetbrains/kotlin/resolve/BindingContext.get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;
-  #171 = Utf8               java/lang/Boolean
-  #172 = Class              #171          // java/lang/Boolean
-  #173 = Utf8               valueOf
-  #174 = Utf8               (Z)Ljava/lang/Boolean;
-  #175 = NameAndType        #173:#174     // valueOf:(Z)Ljava/lang/Boolean;
-  #176 = Methodref          #172.#175     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
-  #177 = Utf8               areEqual
-  #178 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
-  #179 = NameAndType        #177:#178     // areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
-  #180 = Methodref          #13.#179      // kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
-  #181 = Utf8               invoke
-  #182 = NameAndType        #181:#156     // invoke:()Z
-  #183 = Methodref          #150.#182     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1.invoke:()Z
-  #184 = Methodref          #67.#121      // org/jetbrains/kotlin/psi/KtProperty.getNameIdentifier:()Lcom/intellij/psi/PsiElement;
-  #185 = Utf8               declaration.nameIdentifier ?: declaration
-  #186 = String             #185          // declaration.nameIdentifier ?: declaration
-  #187 = Utf8               PROPERTY_WONT_BE_SERIALIZED
-  #188 = NameAndType        #187:#128     // PROPERTY_WONT_BE_SERIALIZED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #189 = Fieldref           #126.#188     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PROPERTY_WONT_BE_SERIALIZED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #190 = Utf8               getName
-  #191 = Utf8               ()Lorg/jetbrains/kotlin/name/Name;
-  #192 = NameAndType        #190:#191     // getName:()Lorg/jetbrains/kotlin/name/Name;
-  #193 = InterfaceMethodref #64.#192      // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getName:()Lorg/jetbrains/kotlin/name/Name;
-  #194 = Utf8               org/jetbrains/kotlin/name/Name
-  #195 = Class              #194          // org/jetbrains/kotlin/name/Name
-  #196 = Utf8               asString
-  #197 = Utf8               ()Ljava/lang/String;
-  #198 = NameAndType        #196:#197     // asString:()Ljava/lang/String;
-  #199 = Methodref          #195.#198     // org/jetbrains/kotlin/name/Name.asString:()Ljava/lang/String;
-  #200 = Utf8               CREATOR
-  #201 = String             #200          // CREATOR
-  #202 = Utf8               org/jetbrains/kotlin/resolve/jvm/annotations/JvmAnnotationUtilKt
-  #203 = Class              #202          // org/jetbrains/kotlin/resolve/jvm/annotations/JvmAnnotationUtilKt
-  #204 = Utf8               findJvmFieldAnnotation
-  #205 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;
-  #206 = NameAndType        #204:#205     // findJvmFieldAnnotation:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;
-  #207 = Methodref          #203.#206     // org/jetbrains/kotlin/resolve/jvm/annotations/JvmAnnotationUtilKt.findJvmFieldAnnotation:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;
-  #208 = Utf8               isCompanionObject
-  #209 = NameAndType        #208:#156     // isCompanionObject:()Z
-  #210 = InterfaceMethodref #29.#209      // org/jetbrains/kotlin/descriptors/ClassDescriptor.isCompanionObject:()Z
-  #211 = InterfaceMethodref #29.#55       // org/jetbrains/kotlin/descriptors/ClassDescriptor.getContainingDeclaration:()Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;
-  #212 = Utf8               CREATOR_DEFINITION_IS_NOT_ALLOWED
-  #213 = NameAndType        #212:#128     // CREATOR_DEFINITION_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #214 = Fieldref           #126.#213     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.CREATOR_DEFINITION_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #215 = Utf8               outerClass
-  #216 = Utf8               $fun$hasIgnoredOnParcel$1
-  #217 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1;
-  #218 = Utf8               property
-  #219 = Utf8               Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;
-  #220 = Utf8               bindingContext
-  #221 = Utf8               Lorg/jetbrains/kotlin/resolve/BindingContext;
-  #222 = Utf8               org/jetbrains/kotlin/psi/KtClassOrObject
-  #223 = Class              #222          // org/jetbrains/kotlin/psi/KtClassOrObject
-  #224 = Utf8               PARCELABLE_SHOULD_BE_CLASS
-  #225 = NameAndType        #224:#128     // PARCELABLE_SHOULD_BE_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #226 = Fieldref           #126.#225     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_SHOULD_BE_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #227 = Utf8               org/jetbrains/kotlin/psi/KtClass
-  #228 = Class              #227          // org/jetbrains/kotlin/psi/KtClass
-  #229 = Utf8               isAnnotation
-  #230 = NameAndType        #229:#156     // isAnnotation:()Z
-  #231 = Methodref          #223.#230     // org/jetbrains/kotlin/psi/KtClassOrObject.isAnnotation:()Z
-  #232 = Utf8               isInterface
-  #233 = NameAndType        #232:#156     // isInterface:()Z
-  #234 = Methodref          #228.#233     // org/jetbrains/kotlin/psi/KtClass.isInterface:()Z
-  #235 = Methodref          #228.#121     // org/jetbrains/kotlin/psi/KtClass.getNameIdentifier:()Lcom/intellij/psi/PsiElement;
-  #236 = Utf8               getCompanionObjects
-  #237 = Utf8               ()Ljava/util/List;
-  #238 = NameAndType        #236:#237     // getCompanionObjects:()Ljava/util/List;
-  #239 = Methodref          #223.#238     // org/jetbrains/kotlin/psi/KtClassOrObject.getCompanionObjects:()Ljava/util/List;
-  #240 = Utf8               java/util/List
-  #241 = Class              #240          // java/util/List
-  #242 = Utf8               iterator
-  #243 = Utf8               ()Ljava/util/Iterator;
-  #244 = NameAndType        #242:#243     // iterator:()Ljava/util/Iterator;
-  #245 = InterfaceMethodref #241.#244     // java/util/List.iterator:()Ljava/util/Iterator;
-  #246 = Utf8               java/util/Iterator
-  #247 = Class              #246          // java/util/Iterator
-  #248 = Utf8               hasNext
-  #249 = NameAndType        #248:#156     // hasNext:()Z
-  #250 = InterfaceMethodref #247.#249     // java/util/Iterator.hasNext:()Z
-  #251 = Utf8               next
-  #252 = Utf8               ()Ljava/lang/Object;
-  #253 = NameAndType        #251:#252     // next:()Ljava/lang/Object;
-  #254 = InterfaceMethodref #247.#253     // java/util/Iterator.next:()Ljava/lang/Object;
-  #255 = Utf8               org/jetbrains/kotlin/psi/KtObjectDeclaration
-  #256 = Class              #255          // org/jetbrains/kotlin/psi/KtObjectDeclaration
-  #257 = Utf8               companion
-  #258 = String             #257          // companion
-  #259 = NameAndType        #190:#197     // getName:()Ljava/lang/String;
-  #260 = Methodref          #256.#259     // org/jetbrains/kotlin/psi/KtObjectDeclaration.getName:()Ljava/lang/String;
-  #261 = Methodref          #256.#121     // org/jetbrains/kotlin/psi/KtObjectDeclaration.getNameIdentifier:()Lcom/intellij/psi/PsiElement;
-  #262 = Methodref          #223.#111     // org/jetbrains/kotlin/psi/KtClassOrObject.getModifierList:()Lorg/jetbrains/kotlin/psi/KtModifierList;
-  #263 = Utf8               ABSTRACT_KEYWORD
-  #264 = NameAndType        #263:#102     // ABSTRACT_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
-  #265 = Fieldref           #100.#264     // org/jetbrains/kotlin/lexer/KtTokens.ABSTRACT_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
-  #266 = Utf8               SEALED_KEYWORD
-  #267 = NameAndType        #266:#102     // SEALED_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
-  #268 = Fieldref           #100.#267     // org/jetbrains/kotlin/lexer/KtTokens.SEALED_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
-  #269 = Utf8               PARCELABLE_SHOULD_BE_INSTANTIABLE
-  #270 = NameAndType        #269:#128     // PARCELABLE_SHOULD_BE_INSTANTIABLE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #271 = Fieldref           #126.#270     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_SHOULD_BE_INSTANTIABLE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #272 = Utf8               isInner
-  #273 = NameAndType        #272:#156     // isInner:()Z
-  #274 = Methodref          #228.#273     // org/jetbrains/kotlin/psi/KtClass.isInner:()Z
-  #275 = Methodref          #228.#111     // org/jetbrains/kotlin/psi/KtClass.getModifierList:()Lorg/jetbrains/kotlin/psi/KtModifierList;
-  #276 = Utf8               INNER_KEYWORD
-  #277 = NameAndType        #276:#102     // INNER_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
-  #278 = Fieldref           #100.#277     // org/jetbrains/kotlin/lexer/KtTokens.INNER_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
-  #279 = Utf8               PARCELABLE_CANT_BE_INNER_CLASS
-  #280 = NameAndType        #279:#128     // PARCELABLE_CANT_BE_INNER_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #281 = Fieldref           #126.#280     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_CANT_BE_INNER_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #282 = Utf8               isLocal
-  #283 = NameAndType        #282:#156     // isLocal:()Z
-  #284 = Methodref          #223.#283     // org/jetbrains/kotlin/psi/KtClassOrObject.isLocal:()Z
-  #285 = Methodref          #223.#121     // org/jetbrains/kotlin/psi/KtClassOrObject.getNameIdentifier:()Lcom/intellij/psi/PsiElement;
-  #286 = Utf8               PARCELABLE_CANT_BE_LOCAL_CLASS
-  #287 = NameAndType        #286:#128     // PARCELABLE_CANT_BE_LOCAL_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #288 = Fieldref           #126.#287     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_CANT_BE_LOCAL_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #289 = Utf8               getDefaultType
-  #290 = Utf8               ()Lorg/jetbrains/kotlin/types/SimpleType;
-  #291 = NameAndType        #289:#290     // getDefaultType:()Lorg/jetbrains/kotlin/types/SimpleType;
-  #292 = InterfaceMethodref #29.#291      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getDefaultType:()Lorg/jetbrains/kotlin/types/SimpleType;
-  #293 = Utf8               org/jetbrains/kotlin/types/KotlinType
-  #294 = Class              #293          // org/jetbrains/kotlin/types/KotlinType
-  #295 = Utf8               org/jetbrains/kotlin/types/TypeUtils
-  #296 = Class              #295          // org/jetbrains/kotlin/types/TypeUtils
-  #297 = Utf8               getAllSupertypes
-  #298 = Utf8               (Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;
-  #299 = NameAndType        #297:#298     // getAllSupertypes:(Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;
-  #300 = Methodref          #296.#299     // org/jetbrains/kotlin/types/TypeUtils.getAllSupertypes:(Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;
-  #301 = Utf8               TypeUtils.getAllSupertypes(descriptor.defaultType)
-  #302 = String             #301          // TypeUtils.getAllSupertypes(descriptor.defaultType)
-  #303 = Utf8               java/lang/Iterable
-  #304 = Class              #303          // java/lang/Iterable
-  #305 = Utf8               java/util/Collection
-  #306 = Class              #305          // java/util/Collection
-  #307 = Utf8               isEmpty
-  #308 = NameAndType        #307:#156     // isEmpty:()Z
-  #309 = InterfaceMethodref #306.#308     // java/util/Collection.isEmpty:()Z
-  #310 = InterfaceMethodref #304.#244     // java/lang/Iterable.iterator:()Ljava/util/Iterator;
-  #311 = Utf8               getConstructor
-  #312 = Utf8               ()Lorg/jetbrains/kotlin/types/TypeConstructor;
-  #313 = NameAndType        #311:#312     // getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;
-  #314 = Methodref          #294.#313     // org/jetbrains/kotlin/types/KotlinType.getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;
-  #315 = Utf8               org/jetbrains/kotlin/types/TypeConstructor
-  #316 = Class              #315          // org/jetbrains/kotlin/types/TypeConstructor
-  #317 = Utf8               getDeclarationDescriptor
-  #318 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
-  #319 = NameAndType        #317:#318     // getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
-  #320 = InterfaceMethodref #316.#319     // org/jetbrains/kotlin/types/TypeConstructor.getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
-  #321 = Utf8               org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt
-  #322 = Class              #321          // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt
-  #323 = Utf8               getFqNameSafe
-  #324 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;
-  #325 = NameAndType        #323:#324     // getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;
-  #326 = Methodref          #322.#325     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;
-  #327 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableDeclarationCheckerKt
-  #328 = Class              #327          // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationCheckerKt
-  #329 = Utf8               getANDROID_PARCELABLE_CLASS_FQNAME
-  #330 = Utf8               ()Lorg/jetbrains/kotlin/name/FqName;
-  #331 = NameAndType        #329:#330     // getANDROID_PARCELABLE_CLASS_FQNAME:()Lorg/jetbrains/kotlin/name/FqName;
-  #332 = Methodref          #328.#331     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationCheckerKt.getANDROID_PARCELABLE_CLASS_FQNAME:()Lorg/jetbrains/kotlin/name/FqName;
-  #333 = Utf8               NO_PARCELABLE_SUPERTYPE
-  #334 = NameAndType        #333:#128     // NO_PARCELABLE_SUPERTYPE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #335 = Fieldref           #126.#334     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.NO_PARCELABLE_SUPERTYPE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #336 = Utf8               getSuperTypeListEntries
-  #337 = NameAndType        #336:#237     // getSuperTypeListEntries:()Ljava/util/List;
-  #338 = Methodref          #223.#337     // org/jetbrains/kotlin/psi/KtClassOrObject.getSuperTypeListEntries:()Ljava/util/List;
-  #339 = Utf8               org/jetbrains/kotlin/psi/KtSuperTypeListEntry
-  #340 = Class              #339          // org/jetbrains/kotlin/psi/KtSuperTypeListEntry
-  #341 = Utf8               org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry
-  #342 = Class              #341          // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry
-  #343 = Utf8               getDelegateExpression
-  #344 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtExpression;
-  #345 = NameAndType        #343:#344     // getDelegateExpression:()Lorg/jetbrains/kotlin/psi/KtExpression;
-  #346 = Methodref          #342.#345     // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry.getDelegateExpression:()Lorg/jetbrains/kotlin/psi/KtExpression;
-  #347 = Utf8               supertypeEntry.delegateExpression ?: continue
-  #348 = String             #347          // supertypeEntry.delegateExpression ?: continue
-  #349 = Utf8               TYPE
-  #350 = NameAndType        #349:#162     // TYPE:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
-  #351 = Fieldref           #160.#350     // org/jetbrains/kotlin/resolve/BindingContext.TYPE:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
-  #352 = Utf8               getTypeReference
-  #353 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
-  #354 = NameAndType        #352:#353     // getTypeReference:()Lorg/jetbrains/kotlin/psi/KtTypeReference;
-  #355 = Methodref          #342.#354     // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry.getTypeReference:()Lorg/jetbrains/kotlin/psi/KtTypeReference;
-  #356 = Utf8               bindingContext[BindingCo…ypeReference] ?: continue
-  #357 = String             #356          // bindingContext[BindingCo…ypeReference] ?: continue
-  #358 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializerKt
-  #359 = Class              #358          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializerKt
-  #360 = Utf8               isParcelable
-  #361 = Utf8               (Lorg/jetbrains/kotlin/types/KotlinType;)Z
-  #362 = NameAndType        #360:#361     // isParcelable:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
-  #363 = Methodref          #359.#362     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializerKt.isParcelable:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
-  #364 = Utf8               getByKeywordNode
-  #365 = Utf8               ()Lcom/intellij/lang/ASTNode;
-  #366 = NameAndType        #364:#365     // getByKeywordNode:()Lcom/intellij/lang/ASTNode;
-  #367 = Methodref          #342.#366     // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry.getByKeywordNode:()Lcom/intellij/lang/ASTNode;
-  #368 = Utf8               com/intellij/lang/ASTNode
-  #369 = Class              #368          // com/intellij/lang/ASTNode
-  #370 = Utf8               getPsi
-  #371 = NameAndType        #370:#120     // getPsi:()Lcom/intellij/psi/PsiElement;
-  #372 = InterfaceMethodref #369.#371     // com/intellij/lang/ASTNode.getPsi:()Lcom/intellij/psi/PsiElement;
-  #373 = Utf8               PARCELABLE_DELEGATE_IS_NOT_ALLOWED
-  #374 = NameAndType        #373:#128     // PARCELABLE_DELEGATE_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #375 = Fieldref           #126.#374     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_DELEGATE_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #376 = Utf8               getPrimaryConstructor
-  #377 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
-  #378 = NameAndType        #376:#377     // getPrimaryConstructor:()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
-  #379 = Methodref          #223.#378     // org/jetbrains/kotlin/psi/KtClassOrObject.getPrimaryConstructor:()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
-  #380 = Utf8               getSecondaryConstructors
-  #381 = NameAndType        #380:#237     // getSecondaryConstructors:()Ljava/util/List;
-  #382 = Methodref          #223.#381     // org/jetbrains/kotlin/psi/KtClassOrObject.getSecondaryConstructors:()Ljava/util/List;
-  #383 = Utf8               PARCELABLE_SHOULD_HAVE_PRIMARY_CONSTRUCTOR
-  #384 = NameAndType        #383:#128     // PARCELABLE_SHOULD_HAVE_PRIMARY_CONSTRUCTOR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #385 = Fieldref           #126.#384     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_SHOULD_HAVE_PRIMARY_CONSTRUCTOR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #386 = Utf8               org/jetbrains/kotlin/psi/KtPrimaryConstructor
-  #387 = Class              #386          // org/jetbrains/kotlin/psi/KtPrimaryConstructor
-  #388 = Utf8               getValueParameters
-  #389 = NameAndType        #388:#237     // getValueParameters:()Ljava/util/List;
-  #390 = Methodref          #387.#389     // org/jetbrains/kotlin/psi/KtPrimaryConstructor.getValueParameters:()Ljava/util/List;
-  #391 = InterfaceMethodref #241.#308     // java/util/List.isEmpty:()Z
-  #392 = Utf8               PARCELABLE_PRIMARY_CONSTRUCTOR_IS_EMPTY
-  #393 = NameAndType        #392:#128     // PARCELABLE_PRIMARY_CONSTRUCTOR_IS_EMPTY:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #394 = Fieldref           #126.#393     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_PRIMARY_CONSTRUCTOR_IS_EMPTY:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #395 = Utf8               org/jetbrains/kotlin/codegen/state/KotlinTypeMapper
-  #396 = Class              #395          // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper
-  #397 = Utf8               org/jetbrains/kotlin/codegen/ClassBuilderMode
-  #398 = Class              #397          // org/jetbrains/kotlin/codegen/ClassBuilderMode
-  #399 = Utf8               FULL
-  #400 = Utf8               Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;
-  #401 = NameAndType        #399:#400     // FULL:Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;
-  #402 = Fieldref           #398.#401     // org/jetbrains/kotlin/codegen/ClassBuilderMode.FULL:Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;
-  #403 = Utf8               ClassBuilderMode.FULL
-  #404 = String             #403          // ClassBuilderMode.FULL
-  #405 = Utf8               getModule
-  #406 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;
-  #407 = NameAndType        #405:#406     // getModule:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;
-  #408 = Methodref          #322.#407     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getModule:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;
-  #409 = Utf8               org/jetbrains/kotlin/descriptors/ModuleDescriptor
-  #410 = Class              #409          // org/jetbrains/kotlin/descriptors/ModuleDescriptor
-  #411 = InterfaceMethodref #410.#192     // org/jetbrains/kotlin/descriptors/ModuleDescriptor.getName:()Lorg/jetbrains/kotlin/name/Name;
-  #412 = Utf8               descriptor.module.name.asString()
-  #413 = String             #412          // descriptor.module.name.asString()
-  #414 = Utf8               (Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;Ljava/lang/String;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/codegen/state/IncompatibleClassTracker;Lorg/jetbrains/kotlin/config/JvmTarget;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
-  #415 = NameAndType        #151:#414     // "<init>":(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;Ljava/lang/String;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/codegen/state/IncompatibleClassTracker;Lorg/jetbrains/kotlin/config/JvmTarget;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
-  #416 = Methodref          #396.#415     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper."<init>":(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;Ljava/lang/String;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/codegen/state/IncompatibleClassTracker;Lorg/jetbrains/kotlin/config/JvmTarget;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
-  #417 = Utf8               kotlin/collections/CollectionsKt
-  #418 = Class              #417          // kotlin/collections/CollectionsKt
-  #419 = Utf8               emptyList
-  #420 = NameAndType        #419:#237     // emptyList:()Ljava/util/List;
-  #421 = Methodref          #418.#420     // kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
-  #422 = Utf8               org/jetbrains/kotlin/psi/KtParameter
-  #423 = Class              #422          // org/jetbrains/kotlin/psi/KtParameter
-  #424 = Utf8               (Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;)V
-  #425 = NameAndType        #68:#424      // checkParcelableClassProperty:(Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;)V
-  #426 = Methodref          #2.#425       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.checkParcelableClassProperty:(Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;)V
-  #427 = Utf8               Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;
-  #428 = Utf8               it
-  #429 = Utf8               Lorg/jetbrains/kotlin/psi/KtModifierList;
-  #430 = Utf8               $i$a$-let-ParcelableDeclarationChecker$checkParcelableClass$sealedOrAbstract$1
-  #431 = Utf8               I
-  #432 = Utf8               Lorg/jetbrains/kotlin/types/KotlinType;
-  #433 = Utf8               $i$a$-none-ParcelableDeclarationChecker$checkParcelableClass$1
-  #434 = Utf8               element$iv
-  #435 = Utf8               Ljava/lang/Object;
-  #436 = Utf8               $this$none$iv
-  #437 = Utf8               Ljava/lang/Iterable;
-  #438 = Utf8               $i$f$none
-  #439 = Utf8               type
-  #440 = Utf8               delegateExpression
-  #441 = Utf8               Lorg/jetbrains/kotlin/psi/KtExpression;
-  #442 = Utf8               supertypeEntry
-  #443 = Utf8               Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;
-  #444 = Utf8               parameter
-  #445 = Utf8               Lorg/jetbrains/kotlin/psi/KtParameter;
-  #446 = Utf8               typeMapper
-  #447 = Utf8               Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;
-  #448 = Utf8               primaryConstructor
-  #449 = Utf8               Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
-  #450 = Utf8               superTypes
-  #451 = Utf8               Ljava/util/Set;
-  #452 = Utf8               sealedOrAbstract
-  #453 = Utf8               languageVersionSettings
-  #454 = Utf8               Lorg/jetbrains/kotlin/config/LanguageVersionSettings;
-  #455 = Utf8               org/jetbrains/kotlin/config/LanguageVersionSettings
-  #456 = Class              #455          // org/jetbrains/kotlin/config/LanguageVersionSettings
-  #457 = Utf8               java/util/Set
-  #458 = Class              #457          // java/util/Set
-  #459 = Utf8               org/jetbrains/kotlin/descriptors/ClassifierDescriptor
-  #460 = Class              #459          // org/jetbrains/kotlin/descriptors/ClassifierDescriptor
-  #461 = Utf8               org/jetbrains/kotlin/name/FqName
-  #462 = Class              #461          // org/jetbrains/kotlin/name/FqName
-  #463 = Utf8               org/jetbrains/kotlin/psi/KtExpression
-  #464 = Class              #463          // org/jetbrains/kotlin/psi/KtExpression
-  #465 = Utf8               java/lang/IllegalArgumentException
-  #466 = Class              #465          // java/lang/IllegalArgumentException
-  #467 = Utf8               hasValOrVar
-  #468 = NameAndType        #467:#156     // hasValOrVar:()Z
-  #469 = Methodref          #423.#468     // org/jetbrains/kotlin/psi/KtParameter.hasValOrVar:()Z
-  #470 = Methodref          #423.#121     // org/jetbrains/kotlin/psi/KtParameter.getNameIdentifier:()Lcom/intellij/psi/PsiElement;
-  #471 = Utf8               parameter.nameIdentifier ?: parameter
-  #472 = String             #471          // parameter.nameIdentifier ?: parameter
-  #473 = Utf8               PARCELABLE_CONSTRUCTOR_PARAMETER_SHOULD_BE_VAL_OR_VAR
-  #474 = NameAndType        #473:#128     // PARCELABLE_CONSTRUCTOR_PARAMETER_SHOULD_BE_VAL_OR_VAR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #475 = Fieldref           #126.#474     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_CONSTRUCTOR_PARAMETER_SHOULD_BE_VAL_OR_VAR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #476 = Methodref          #396.#36      // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.getBindingContext:()Lorg/jetbrains/kotlin/resolve/BindingContext;
-  #477 = Utf8               PRIMARY_CONSTRUCTOR_PARAMETER
-  #478 = NameAndType        #477:#162     // PRIMARY_CONSTRUCTOR_PARAMETER:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
-  #479 = Fieldref           #160.#478     // org/jetbrains/kotlin/resolve/BindingContext.PRIMARY_CONSTRUCTOR_PARAMETER:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
-  #480 = Utf8               typeMapper.bindingContex…TER, parameter] ?: return
-  #481 = String             #480          // typeMapper.bindingContex…TER, parameter] ?: return
-  #482 = Utf8               getType
-  #483 = Utf8               ()Lorg/jetbrains/kotlin/types/KotlinType;
-  #484 = NameAndType        #482:#483     // getType:()Lorg/jetbrains/kotlin/types/KotlinType;
-  #485 = InterfaceMethodref #64.#484      // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getType:()Lorg/jetbrains/kotlin/types/KotlinType;
-  #486 = Utf8               descriptor.type
-  #487 = String             #486          // descriptor.type
-  #488 = Utf8               org/jetbrains/kotlin/types/KotlinTypeKt
-  #489 = Class              #488          // org/jetbrains/kotlin/types/KotlinTypeKt
-  #490 = Utf8               isError
-  #491 = NameAndType        #490:#361     // isError:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
-  #492 = Methodref          #489.#491     // org/jetbrains/kotlin/types/KotlinTypeKt.isError:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
-  #493 = Utf8               hasCustomParceler
-  #494 = NameAndType        #493:#92      // hasCustomParceler:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
-  #495 = Methodref          #2.#494       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.hasCustomParceler:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
-  #496 = Utf8               mapType$default
-  #497 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;
-  #498 = NameAndType        #496:#497     // mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;
-  #499 = Methodref          #396.#498     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;
-  #500 = Utf8               getAnnotations
-  #501 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
-  #502 = NameAndType        #500:#501     // getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
-  #503 = InterfaceMethodref #64.#502      // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
-  #504 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt
-  #505 = Class              #504          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt
-  #506 = Utf8               getTypeParcelers
-  #507 = Utf8               (Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;
-  #508 = NameAndType        #506:#507     // getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;
-  #509 = Methodref          #505.#508     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt.getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;
-  #510 = InterfaceMethodref #29.#502      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
-  #511 = Utf8               plus
-  #512 = Utf8               (Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
-  #513 = NameAndType        #511:#512     // plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
-  #514 = Methodref          #418.#513     // kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
-  #515 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext
-  #516 = Class              #515          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext
-  #517 = Utf8               containerClass.defaultType
-  #518 = String             #517          // containerClass.defaultType
-  #519 = Utf8               org/jetbrains/kotlin/codegen/FrameMap
-  #520 = Class              #519          // org/jetbrains/kotlin/codegen/FrameMap
-  #521 = Utf8               ()V
-  #522 = NameAndType        #151:#521     // "<init>":()V
-  #523 = Methodref          #520.#522     // org/jetbrains/kotlin/codegen/FrameMap."<init>":()V
-  #524 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/org/objectweb/asm/Type;Ljava/util/List;Lorg/jetbrains/kotlin/codegen/FrameMap;)V
-  #525 = NameAndType        #151:#524     // "<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/org/objectweb/asm/Type;Ljava/util/List;Lorg/jetbrains/kotlin/codegen/FrameMap;)V
-  #526 = Methodref          #516.#525     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext."<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/org/objectweb/asm/Type;Ljava/util/List;Lorg/jetbrains/kotlin/codegen/FrameMap;)V
-  #527 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer
-  #528 = Class              #527          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer
-  #529 = Utf8               Companion
-  #530 = Utf8               Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;
-  #531 = NameAndType        #529:#530     // Companion:Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;
-  #532 = Fieldref           #528.#531     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer.Companion:Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;
-  #533 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion
-  #534 = Class              #533          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion
-  #535 = Utf8               get$default
-  #536 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer;
-  #537 = NameAndType        #535:#536     // get$default:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer;
-  #538 = Methodref          #534.#537     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion.get$default:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer;
-  #539 = Methodref          #423.#354     // org/jetbrains/kotlin/psi/KtParameter.getTypeReference:()Lorg/jetbrains/kotlin/psi/KtTypeReference;
-  #540 = Utf8               PARCELABLE_TYPE_NOT_SUPPORTED
-  #541 = NameAndType        #540:#128     // PARCELABLE_TYPE_NOT_SUPPORTED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #542 = Fieldref           #126.#541     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_TYPE_NOT_SUPPORTED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
-  #543 = Utf8               Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;
-  #544 = Utf8               parcelers
-  #545 = Utf8               Ljava/util/List;
-  #546 = Utf8               e
-  #547 = Utf8               Ljava/lang/IllegalArgumentException;
-  #548 = Utf8               asmType
-  #549 = Utf8               Lorg/jetbrains/org/objectweb/asm/Type;
-  #550 = Utf8               containerClass
-  #551 = Utf8               org/jetbrains/org/objectweb/asm/Type
-  #552 = Class              #551          // org/jetbrains/org/objectweb/asm/Type
-  #553 = Utf8               org/jetbrains/kotlin/psi/KtTypeReference
-  #554 = Class              #553          // org/jetbrains/kotlin/psi/KtTypeReference
-  #555 = Utf8               getCompanionObjectDescriptor
-  #556 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;
-  #557 = NameAndType        #555:#556     // getCompanionObjectDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;
-  #558 = InterfaceMethodref #29.#557      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getCompanionObjectDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;
-  #559 = String             #428          // it
-  #560 = Utf8               companionObjectDescripto…ltType) } ?: return false
-  #561 = String             #560          // companionObjectDescripto…ltType) } ?: return false
-  #562 = Utf8               isParceler
-  #563 = NameAndType        #562:#361     // isParceler:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
-  #564 = Methodref          #90.#563      // org/jetbrains/kotlin/android/parcel/ParcelableResolveExtensionKt.isParceler:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
-  #565 = Utf8               $i$a$-let-ParcelableDeclarationChecker$hasCustomParceler$companionObjectSuperTypes$1
-  #566 = Utf8               $i$a$-any-ParcelableDeclarationChecker$hasCustomParceler$1
-  #567 = Utf8               $this$any$iv
-  #568 = Utf8               $i$f$any
-  #569 = Utf8               companionObjectSuperTypes
-  #570 = Utf8               $this$hasCustomParceler
-  #571 = Methodref          #4.#522       // java/lang/Object."<init>":()V
-  #572 = Utf8               IGNORED_ON_PARCEL_FQNAME
-  #573 = Utf8               Lorg/jetbrains/kotlin/name/FqName;
-  #574 = Utf8               <clinit>
-  #575 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;
-  #576 = Utf8               access$getIGNORED_ON_PARCEL_FQNAME$cp
-  #577 = NameAndType        #572:#573     // IGNORED_ON_PARCEL_FQNAME:Lorg/jetbrains/kotlin/name/FqName;
-  #578 = Fieldref           #2.#577       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.IGNORED_ON_PARCEL_FQNAME:Lorg/jetbrains/kotlin/name/FqName;
-  #579 = Utf8               access$Companion
-  #580 = Utf8               ()Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;
-  #581 = NameAndType        #529:#575     // Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;
-  #582 = Fieldref           #2.#581       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;
-  #583 = Utf8               Lkotlin/Metadata;
-  #584 = Utf8               mv
-  #585 = Integer            1
-  #586 = Integer            17
-  #587 = Utf8               bv
-  #588 = Integer            0
-  #589 = Integer            3
-  #590 = Utf8               k
-  #591 = Utf8               xi
-  #592 = Integer            2
-  #593 = Utf8               d1
-  #594 = Utf8                l\n\n\n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n \n\n\n\n\n \n\n\n\n \n\n  #20:#B¢J 020202\t0\nHJ0020202\r02020HJ(02020202\r0HJ002020202\r020HJ(020202\r020 HJ!0\"*0H¨$
-  #595 = Utf8               d2
-  #596 = Utf8               Lorg/jetbrains/kotlin/resolve/checkers/DeclarationChecker;
-  #597 = Utf8
-  #598 = Utf8               android-extensions-compiler
-  #599 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion
-  #600 = Class              #599          // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion
-  #601 = Utf8               (Lkotlin/jvm/internal/DefaultConstructorMarker;)V
-  #602 = NameAndType        #151:#601     // "<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
-  #603 = Methodref          #600.#602     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
-  #604 = Utf8               kotlinx/android/parcel/IgnoredOnParcel
-  #605 = Class              #604          // kotlinx/android/parcel/IgnoredOnParcel
-  #606 = Utf8               java/lang/Class
-  #607 = Class              #606          // java/lang/Class
-  #608 = Utf8               getCanonicalName
-  #609 = NameAndType        #608:#197     // getCanonicalName:()Ljava/lang/String;
-  #610 = Methodref          #607.#609     // java/lang/Class.getCanonicalName:()Ljava/lang/String;
-  #611 = Utf8               (Ljava/lang/String;)V
-  #612 = NameAndType        #151:#611     // "<init>":(Ljava/lang/String;)V
-  #613 = Methodref          #462.#612     // org/jetbrains/kotlin/name/FqName."<init>":(Ljava/lang/String;)V
-  #614 = Utf8               ParcelableDeclarationChecker.kt
-  #615 = Utf8               Code
-  #616 = Utf8               StackMapTable
-  #617 = Utf8               LineNumberTable
-  #618 = Utf8               LocalVariableTable
-  #619 = Utf8               RuntimeInvisibleParameterAnnotations
-  #620 = Utf8               InnerClasses
-  #621 = Utf8               SourceFile
-  #622 = Utf8               SourceDebugExtension
-  #623 = Utf8               RuntimeVisibleAnnotations
+  #125 = Utf8               declaration.modifierList…Identifier ?: declaration
+  #126 = String             #125          // declaration.modifierList…Identifier ?: declaration
+  #127 = Utf8               org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid
+  #128 = Class              #127          // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid
+  #129 = Utf8               OVERRIDING_WRITE_TO_PARCEL_IS_NOT_ALLOWED
+  #130 = Utf8               Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #131 = NameAndType        #129:#130     // OVERRIDING_WRITE_TO_PARCEL_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #132 = Fieldref           #128.#131     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.OVERRIDING_WRITE_TO_PARCEL_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #133 = Utf8               org/jetbrains/kotlin/diagnostics/DiagnosticFactory0
+  #134 = Class              #133          // org/jetbrains/kotlin/diagnostics/DiagnosticFactory0
+  #135 = Utf8               on
+  #136 = Utf8               (Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/SimpleDiagnostic;
+  #137 = NameAndType        #135:#136     // on:(Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/SimpleDiagnostic;
+  #138 = Methodref          #134.#137     // org/jetbrains/kotlin/diagnostics/DiagnosticFactory0.on:(Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/SimpleDiagnostic;
+  #139 = Utf8               org/jetbrains/kotlin/diagnostics/Diagnostic
+  #140 = Class              #139          // org/jetbrains/kotlin/diagnostics/Diagnostic
+  #141 = Utf8               report
+  #142 = Utf8               (Lorg/jetbrains/kotlin/diagnostics/Diagnostic;)V
+  #143 = NameAndType        #141:#142     // report:(Lorg/jetbrains/kotlin/diagnostics/Diagnostic;)V
+  #144 = InterfaceMethodref #31.#143      // org/jetbrains/kotlin/diagnostics/DiagnosticSink.report:(Lorg/jetbrains/kotlin/diagnostics/Diagnostic;)V
+  #145 = Utf8               reportElement
+  #146 = Utf8               Lcom/intellij/psi/PsiElement;
+  #147 = Utf8               method
+  #148 = Utf8               Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
+  #149 = Utf8               diagnosticHolder
+  #150 = Utf8               Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;
+  #151 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1
+  #152 = Class              #151          // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1
+  #153 = Utf8               <init>
+  #154 = Utf8               (Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)V
+  #155 = NameAndType        #153:#154     // "<init>":(Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)V
+  #156 = Methodref          #152.#155     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1."<init>":(Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)V
+  #157 = Utf8               hasDelegate
+  #158 = Utf8               ()Z
+  #159 = NameAndType        #157:#158     // hasDelegate:()Z
+  #160 = Methodref          #67.#159      // org/jetbrains/kotlin/psi/KtProperty.hasDelegate:()Z
+  #161 = Utf8               org/jetbrains/kotlin/resolve/BindingContext
+  #162 = Class              #161          // org/jetbrains/kotlin/resolve/BindingContext
+  #163 = Utf8               BACKING_FIELD_REQUIRED
+  #164 = Utf8               Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
+  #165 = NameAndType        #163:#164     // BACKING_FIELD_REQUIRED:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
+  #166 = Fieldref           #162.#165     // org/jetbrains/kotlin/resolve/BindingContext.BACKING_FIELD_REQUIRED:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
+  #167 = Utf8               org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice
+  #168 = Class              #167          // org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice
+  #169 = Utf8               get
+  #170 = Utf8               (Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;
+  #171 = NameAndType        #169:#170     // get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;
+  #172 = InterfaceMethodref #162.#171     // org/jetbrains/kotlin/resolve/BindingContext.get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;
+  #173 = Utf8               java/lang/Boolean
+  #174 = Class              #173          // java/lang/Boolean
+  #175 = Utf8               valueOf
+  #176 = Utf8               (Z)Ljava/lang/Boolean;
+  #177 = NameAndType        #175:#176     // valueOf:(Z)Ljava/lang/Boolean;
+  #178 = Methodref          #174.#177     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
+  #179 = Utf8               areEqual
+  #180 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
+  #181 = NameAndType        #179:#180     // areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
+  #182 = Methodref          #13.#181      // kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
+  #183 = Utf8               invoke
+  #184 = NameAndType        #183:#158     // invoke:()Z
+  #185 = Methodref          #152.#184     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1.invoke:()Z
+  #186 = Methodref          #67.#121      // org/jetbrains/kotlin/psi/KtProperty.getNameIdentifier:()Lcom/intellij/psi/PsiElement;
+  #187 = Utf8               declaration.nameIdentifier ?: declaration
+  #188 = String             #187          // declaration.nameIdentifier ?: declaration
+  #189 = Utf8               PROPERTY_WONT_BE_SERIALIZED
+  #190 = NameAndType        #189:#130     // PROPERTY_WONT_BE_SERIALIZED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #191 = Fieldref           #128.#190     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PROPERTY_WONT_BE_SERIALIZED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #192 = Utf8               getName
+  #193 = Utf8               ()Lorg/jetbrains/kotlin/name/Name;
+  #194 = NameAndType        #192:#193     // getName:()Lorg/jetbrains/kotlin/name/Name;
+  #195 = InterfaceMethodref #64.#194      // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getName:()Lorg/jetbrains/kotlin/name/Name;
+  #196 = Utf8               org/jetbrains/kotlin/name/Name
+  #197 = Class              #196          // org/jetbrains/kotlin/name/Name
+  #198 = Utf8               asString
+  #199 = Utf8               ()Ljava/lang/String;
+  #200 = NameAndType        #198:#199     // asString:()Ljava/lang/String;
+  #201 = Methodref          #197.#200     // org/jetbrains/kotlin/name/Name.asString:()Ljava/lang/String;
+  #202 = Utf8               CREATOR
+  #203 = String             #202          // CREATOR
+  #204 = Utf8               org/jetbrains/kotlin/resolve/jvm/annotations/JvmAnnotationUtilKt
+  #205 = Class              #204          // org/jetbrains/kotlin/resolve/jvm/annotations/JvmAnnotationUtilKt
+  #206 = Utf8               findJvmFieldAnnotation
+  #207 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;
+  #208 = NameAndType        #206:#207     // findJvmFieldAnnotation:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;
+  #209 = Methodref          #205.#208     // org/jetbrains/kotlin/resolve/jvm/annotations/JvmAnnotationUtilKt.findJvmFieldAnnotation:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;
+  #210 = Utf8               isCompanionObject
+  #211 = NameAndType        #210:#158     // isCompanionObject:()Z
+  #212 = InterfaceMethodref #29.#211      // org/jetbrains/kotlin/descriptors/ClassDescriptor.isCompanionObject:()Z
+  #213 = InterfaceMethodref #29.#55       // org/jetbrains/kotlin/descriptors/ClassDescriptor.getContainingDeclaration:()Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;
+  #214 = Utf8               CREATOR_DEFINITION_IS_NOT_ALLOWED
+  #215 = NameAndType        #214:#130     // CREATOR_DEFINITION_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #216 = Fieldref           #128.#215     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.CREATOR_DEFINITION_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #217 = Utf8               outerClass
+  #218 = Utf8               $fun$hasIgnoredOnParcel$1
+  #219 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1;
+  #220 = Utf8               property
+  #221 = Utf8               Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;
+  #222 = Utf8               bindingContext
+  #223 = Utf8               Lorg/jetbrains/kotlin/resolve/BindingContext;
+  #224 = Utf8               org/jetbrains/kotlin/psi/KtClassOrObject
+  #225 = Class              #224          // org/jetbrains/kotlin/psi/KtClassOrObject
+  #226 = Utf8               PARCELABLE_SHOULD_BE_CLASS
+  #227 = NameAndType        #226:#130     // PARCELABLE_SHOULD_BE_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #228 = Fieldref           #128.#227     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_SHOULD_BE_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #229 = Utf8               org/jetbrains/kotlin/psi/KtClass
+  #230 = Class              #229          // org/jetbrains/kotlin/psi/KtClass
+  #231 = Utf8               isAnnotation
+  #232 = NameAndType        #231:#158     // isAnnotation:()Z
+  #233 = Methodref          #225.#232     // org/jetbrains/kotlin/psi/KtClassOrObject.isAnnotation:()Z
+  #234 = Utf8               isInterface
+  #235 = NameAndType        #234:#158     // isInterface:()Z
+  #236 = Methodref          #230.#235     // org/jetbrains/kotlin/psi/KtClass.isInterface:()Z
+  #237 = Methodref          #230.#121     // org/jetbrains/kotlin/psi/KtClass.getNameIdentifier:()Lcom/intellij/psi/PsiElement;
+  #238 = Utf8               getCompanionObjects
+  #239 = Utf8               ()Ljava/util/List;
+  #240 = NameAndType        #238:#239     // getCompanionObjects:()Ljava/util/List;
+  #241 = Methodref          #225.#240     // org/jetbrains/kotlin/psi/KtClassOrObject.getCompanionObjects:()Ljava/util/List;
+  #242 = Utf8               java/util/List
+  #243 = Class              #242          // java/util/List
+  #244 = Utf8               iterator
+  #245 = Utf8               ()Ljava/util/Iterator;
+  #246 = NameAndType        #244:#245     // iterator:()Ljava/util/Iterator;
+  #247 = InterfaceMethodref #243.#246     // java/util/List.iterator:()Ljava/util/Iterator;
+  #248 = Utf8               java/util/Iterator
+  #249 = Class              #248          // java/util/Iterator
+  #250 = Utf8               hasNext
+  #251 = NameAndType        #250:#158     // hasNext:()Z
+  #252 = InterfaceMethodref #249.#251     // java/util/Iterator.hasNext:()Z
+  #253 = Utf8               next
+  #254 = Utf8               ()Ljava/lang/Object;
+  #255 = NameAndType        #253:#254     // next:()Ljava/lang/Object;
+  #256 = InterfaceMethodref #249.#255     // java/util/Iterator.next:()Ljava/lang/Object;
+  #257 = Utf8               org/jetbrains/kotlin/psi/KtObjectDeclaration
+  #258 = Class              #257          // org/jetbrains/kotlin/psi/KtObjectDeclaration
+  #259 = Utf8               companion
+  #260 = String             #259          // companion
+  #261 = NameAndType        #192:#199     // getName:()Ljava/lang/String;
+  #262 = Methodref          #258.#261     // org/jetbrains/kotlin/psi/KtObjectDeclaration.getName:()Ljava/lang/String;
+  #263 = Methodref          #258.#121     // org/jetbrains/kotlin/psi/KtObjectDeclaration.getNameIdentifier:()Lcom/intellij/psi/PsiElement;
+  #264 = Methodref          #225.#111     // org/jetbrains/kotlin/psi/KtClassOrObject.getModifierList:()Lorg/jetbrains/kotlin/psi/KtModifierList;
+  #265 = Utf8               ABSTRACT_KEYWORD
+  #266 = NameAndType        #265:#102     // ABSTRACT_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
+  #267 = Fieldref           #100.#266     // org/jetbrains/kotlin/lexer/KtTokens.ABSTRACT_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
+  #268 = Utf8               SEALED_KEYWORD
+  #269 = NameAndType        #268:#102     // SEALED_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
+  #270 = Fieldref           #100.#269     // org/jetbrains/kotlin/lexer/KtTokens.SEALED_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
+  #271 = Utf8               PARCELABLE_SHOULD_BE_INSTANTIABLE
+  #272 = NameAndType        #271:#130     // PARCELABLE_SHOULD_BE_INSTANTIABLE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #273 = Fieldref           #128.#272     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_SHOULD_BE_INSTANTIABLE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #274 = Utf8               isInner
+  #275 = NameAndType        #274:#158     // isInner:()Z
+  #276 = Methodref          #230.#275     // org/jetbrains/kotlin/psi/KtClass.isInner:()Z
+  #277 = Methodref          #230.#111     // org/jetbrains/kotlin/psi/KtClass.getModifierList:()Lorg/jetbrains/kotlin/psi/KtModifierList;
+  #278 = Utf8               INNER_KEYWORD
+  #279 = NameAndType        #278:#102     // INNER_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
+  #280 = Fieldref           #100.#279     // org/jetbrains/kotlin/lexer/KtTokens.INNER_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
+  #281 = Utf8               PARCELABLE_CANT_BE_INNER_CLASS
+  #282 = NameAndType        #281:#130     // PARCELABLE_CANT_BE_INNER_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #283 = Fieldref           #128.#282     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_CANT_BE_INNER_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #284 = Utf8               isLocal
+  #285 = NameAndType        #284:#158     // isLocal:()Z
+  #286 = Methodref          #225.#285     // org/jetbrains/kotlin/psi/KtClassOrObject.isLocal:()Z
+  #287 = Methodref          #225.#121     // org/jetbrains/kotlin/psi/KtClassOrObject.getNameIdentifier:()Lcom/intellij/psi/PsiElement;
+  #288 = Utf8               PARCELABLE_CANT_BE_LOCAL_CLASS
+  #289 = NameAndType        #288:#130     // PARCELABLE_CANT_BE_LOCAL_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #290 = Fieldref           #128.#289     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_CANT_BE_LOCAL_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #291 = Utf8               getDefaultType
+  #292 = Utf8               ()Lorg/jetbrains/kotlin/types/SimpleType;
+  #293 = NameAndType        #291:#292     // getDefaultType:()Lorg/jetbrains/kotlin/types/SimpleType;
+  #294 = InterfaceMethodref #29.#293      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getDefaultType:()Lorg/jetbrains/kotlin/types/SimpleType;
+  #295 = Utf8               org/jetbrains/kotlin/types/KotlinType
+  #296 = Class              #295          // org/jetbrains/kotlin/types/KotlinType
+  #297 = Utf8               org/jetbrains/kotlin/types/TypeUtils
+  #298 = Class              #297          // org/jetbrains/kotlin/types/TypeUtils
+  #299 = Utf8               getAllSupertypes
+  #300 = Utf8               (Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;
+  #301 = NameAndType        #299:#300     // getAllSupertypes:(Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;
+  #302 = Methodref          #298.#301     // org/jetbrains/kotlin/types/TypeUtils.getAllSupertypes:(Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;
+  #303 = Utf8               TypeUtils.getAllSupertypes(descriptor.defaultType)
+  #304 = String             #303          // TypeUtils.getAllSupertypes(descriptor.defaultType)
+  #305 = Utf8               java/lang/Iterable
+  #306 = Class              #305          // java/lang/Iterable
+  #307 = Utf8               java/util/Collection
+  #308 = Class              #307          // java/util/Collection
+  #309 = Utf8               isEmpty
+  #310 = NameAndType        #309:#158     // isEmpty:()Z
+  #311 = InterfaceMethodref #308.#310     // java/util/Collection.isEmpty:()Z
+  #312 = InterfaceMethodref #306.#246     // java/lang/Iterable.iterator:()Ljava/util/Iterator;
+  #313 = Utf8               getConstructor
+  #314 = Utf8               ()Lorg/jetbrains/kotlin/types/TypeConstructor;
+  #315 = NameAndType        #313:#314     // getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;
+  #316 = Methodref          #296.#315     // org/jetbrains/kotlin/types/KotlinType.getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;
+  #317 = Utf8               org/jetbrains/kotlin/types/TypeConstructor
+  #318 = Class              #317          // org/jetbrains/kotlin/types/TypeConstructor
+  #319 = Utf8               getDeclarationDescriptor
+  #320 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
+  #321 = NameAndType        #319:#320     // getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
+  #322 = InterfaceMethodref #318.#321     // org/jetbrains/kotlin/types/TypeConstructor.getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
+  #323 = Utf8               org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt
+  #324 = Class              #323          // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt
+  #325 = Utf8               getFqNameSafe
+  #326 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;
+  #327 = NameAndType        #325:#326     // getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;
+  #328 = Methodref          #324.#327     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;
+  #329 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableDeclarationCheckerKt
+  #330 = Class              #329          // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationCheckerKt
+  #331 = Utf8               getANDROID_PARCELABLE_CLASS_FQNAME
+  #332 = Utf8               ()Lorg/jetbrains/kotlin/name/FqName;
+  #333 = NameAndType        #331:#332     // getANDROID_PARCELABLE_CLASS_FQNAME:()Lorg/jetbrains/kotlin/name/FqName;
+  #334 = Methodref          #330.#333     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationCheckerKt.getANDROID_PARCELABLE_CLASS_FQNAME:()Lorg/jetbrains/kotlin/name/FqName;
+  #335 = Utf8               NO_PARCELABLE_SUPERTYPE
+  #336 = NameAndType        #335:#130     // NO_PARCELABLE_SUPERTYPE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #337 = Fieldref           #128.#336     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.NO_PARCELABLE_SUPERTYPE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #338 = Utf8               getSuperTypeListEntries
+  #339 = NameAndType        #338:#239     // getSuperTypeListEntries:()Ljava/util/List;
+  #340 = Methodref          #225.#339     // org/jetbrains/kotlin/psi/KtClassOrObject.getSuperTypeListEntries:()Ljava/util/List;
+  #341 = Utf8               org/jetbrains/kotlin/psi/KtSuperTypeListEntry
+  #342 = Class              #341          // org/jetbrains/kotlin/psi/KtSuperTypeListEntry
+  #343 = Utf8               org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry
+  #344 = Class              #343          // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry
+  #345 = Utf8               getDelegateExpression
+  #346 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtExpression;
+  #347 = NameAndType        #345:#346     // getDelegateExpression:()Lorg/jetbrains/kotlin/psi/KtExpression;
+  #348 = Methodref          #344.#347     // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry.getDelegateExpression:()Lorg/jetbrains/kotlin/psi/KtExpression;
+  #349 = Utf8               supertypeEntry.delegateExpression ?: continue
+  #350 = String             #349          // supertypeEntry.delegateExpression ?: continue
+  #351 = Utf8               TYPE
+  #352 = NameAndType        #351:#164     // TYPE:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
+  #353 = Fieldref           #162.#352     // org/jetbrains/kotlin/resolve/BindingContext.TYPE:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
+  #354 = Utf8               getTypeReference
+  #355 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
+  #356 = NameAndType        #354:#355     // getTypeReference:()Lorg/jetbrains/kotlin/psi/KtTypeReference;
+  #357 = Methodref          #344.#356     // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry.getTypeReference:()Lorg/jetbrains/kotlin/psi/KtTypeReference;
+  #358 = Utf8               bindingContext[BindingCo…ypeReference] ?: continue
+  #359 = String             #358          // bindingContext[BindingCo…ypeReference] ?: continue
+  #360 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializerKt
+  #361 = Class              #360          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializerKt
+  #362 = Utf8               isParcelable
+  #363 = Utf8               (Lorg/jetbrains/kotlin/types/KotlinType;)Z
+  #364 = NameAndType        #362:#363     // isParcelable:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
+  #365 = Methodref          #361.#364     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializerKt.isParcelable:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
+  #366 = Utf8               getByKeywordNode
+  #367 = Utf8               ()Lcom/intellij/lang/ASTNode;
+  #368 = NameAndType        #366:#367     // getByKeywordNode:()Lcom/intellij/lang/ASTNode;
+  #369 = Methodref          #344.#368     // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry.getByKeywordNode:()Lcom/intellij/lang/ASTNode;
+  #370 = Utf8               com/intellij/lang/ASTNode
+  #371 = Class              #370          // com/intellij/lang/ASTNode
+  #372 = Utf8               getPsi
+  #373 = NameAndType        #372:#120     // getPsi:()Lcom/intellij/psi/PsiElement;
+  #374 = InterfaceMethodref #371.#373     // com/intellij/lang/ASTNode.getPsi:()Lcom/intellij/psi/PsiElement;
+  #375 = Utf8               PARCELABLE_DELEGATE_IS_NOT_ALLOWED
+  #376 = NameAndType        #375:#130     // PARCELABLE_DELEGATE_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #377 = Fieldref           #128.#376     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_DELEGATE_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #378 = Utf8               getPrimaryConstructor
+  #379 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
+  #380 = NameAndType        #378:#379     // getPrimaryConstructor:()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
+  #381 = Methodref          #225.#380     // org/jetbrains/kotlin/psi/KtClassOrObject.getPrimaryConstructor:()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
+  #382 = Utf8               getSecondaryConstructors
+  #383 = NameAndType        #382:#239     // getSecondaryConstructors:()Ljava/util/List;
+  #384 = Methodref          #225.#383     // org/jetbrains/kotlin/psi/KtClassOrObject.getSecondaryConstructors:()Ljava/util/List;
+  #385 = Utf8               PARCELABLE_SHOULD_HAVE_PRIMARY_CONSTRUCTOR
+  #386 = NameAndType        #385:#130     // PARCELABLE_SHOULD_HAVE_PRIMARY_CONSTRUCTOR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #387 = Fieldref           #128.#386     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_SHOULD_HAVE_PRIMARY_CONSTRUCTOR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #388 = Utf8               org/jetbrains/kotlin/psi/KtPrimaryConstructor
+  #389 = Class              #388          // org/jetbrains/kotlin/psi/KtPrimaryConstructor
+  #390 = Utf8               getValueParameters
+  #391 = NameAndType        #390:#239     // getValueParameters:()Ljava/util/List;
+  #392 = Methodref          #389.#391     // org/jetbrains/kotlin/psi/KtPrimaryConstructor.getValueParameters:()Ljava/util/List;
+  #393 = InterfaceMethodref #243.#310     // java/util/List.isEmpty:()Z
+  #394 = Utf8               PARCELABLE_PRIMARY_CONSTRUCTOR_IS_EMPTY
+  #395 = NameAndType        #394:#130     // PARCELABLE_PRIMARY_CONSTRUCTOR_IS_EMPTY:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #396 = Fieldref           #128.#395     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_PRIMARY_CONSTRUCTOR_IS_EMPTY:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #397 = Utf8               org/jetbrains/kotlin/codegen/state/KotlinTypeMapper
+  #398 = Class              #397          // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper
+  #399 = Utf8               org/jetbrains/kotlin/codegen/ClassBuilderMode
+  #400 = Class              #399          // org/jetbrains/kotlin/codegen/ClassBuilderMode
+  #401 = Utf8               FULL
+  #402 = Utf8               Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;
+  #403 = NameAndType        #401:#402     // FULL:Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;
+  #404 = Fieldref           #400.#403     // org/jetbrains/kotlin/codegen/ClassBuilderMode.FULL:Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;
+  #405 = Utf8               ClassBuilderMode.FULL
+  #406 = String             #405          // ClassBuilderMode.FULL
+  #407 = Utf8               getModule
+  #408 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;
+  #409 = NameAndType        #407:#408     // getModule:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;
+  #410 = Methodref          #324.#409     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getModule:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;
+  #411 = Utf8               org/jetbrains/kotlin/descriptors/ModuleDescriptor
+  #412 = Class              #411          // org/jetbrains/kotlin/descriptors/ModuleDescriptor
+  #413 = InterfaceMethodref #412.#194     // org/jetbrains/kotlin/descriptors/ModuleDescriptor.getName:()Lorg/jetbrains/kotlin/name/Name;
+  #414 = Utf8               descriptor.module.name.asString()
+  #415 = String             #414          // descriptor.module.name.asString()
+  #416 = Utf8               (Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;Ljava/lang/String;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/codegen/state/IncompatibleClassTracker;Lorg/jetbrains/kotlin/config/JvmTarget;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+  #417 = NameAndType        #153:#416     // "<init>":(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;Ljava/lang/String;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/codegen/state/IncompatibleClassTracker;Lorg/jetbrains/kotlin/config/JvmTarget;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+  #418 = Methodref          #398.#417     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper."<init>":(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;Ljava/lang/String;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/codegen/state/IncompatibleClassTracker;Lorg/jetbrains/kotlin/config/JvmTarget;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+  #419 = Utf8               kotlin/collections/CollectionsKt
+  #420 = Class              #419          // kotlin/collections/CollectionsKt
+  #421 = Utf8               emptyList
+  #422 = NameAndType        #421:#239     // emptyList:()Ljava/util/List;
+  #423 = Methodref          #420.#422     // kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
+  #424 = Utf8               org/jetbrains/kotlin/psi/KtParameter
+  #425 = Class              #424          // org/jetbrains/kotlin/psi/KtParameter
+  #426 = Utf8               (Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;)V
+  #427 = NameAndType        #68:#426      // checkParcelableClassProperty:(Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;)V
+  #428 = Methodref          #2.#427       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.checkParcelableClassProperty:(Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;)V
+  #429 = Utf8               Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;
+  #430 = Utf8               it
+  #431 = Utf8               Lorg/jetbrains/kotlin/psi/KtModifierList;
+  #432 = Utf8               $i$a$-let-ParcelableDeclarationChecker$checkParcelableClass$sealedOrAbstract$1
+  #433 = Utf8               I
+  #434 = Utf8               Lorg/jetbrains/kotlin/types/KotlinType;
+  #435 = Utf8               $i$a$-none-ParcelableDeclarationChecker$checkParcelableClass$1
+  #436 = Utf8               element$iv
+  #437 = Utf8               Ljava/lang/Object;
+  #438 = Utf8               $this$none$iv
+  #439 = Utf8               Ljava/lang/Iterable;
+  #440 = Utf8               $i$f$none
+  #441 = Utf8               type
+  #442 = Utf8               delegateExpression
+  #443 = Utf8               Lorg/jetbrains/kotlin/psi/KtExpression;
+  #444 = Utf8               supertypeEntry
+  #445 = Utf8               Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;
+  #446 = Utf8               parameter
+  #447 = Utf8               Lorg/jetbrains/kotlin/psi/KtParameter;
+  #448 = Utf8               typeMapper
+  #449 = Utf8               Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;
+  #450 = Utf8               primaryConstructor
+  #451 = Utf8               Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
+  #452 = Utf8               superTypes
+  #453 = Utf8               Ljava/util/Set;
+  #454 = Utf8               sealedOrAbstract
+  #455 = Utf8               languageVersionSettings
+  #456 = Utf8               Lorg/jetbrains/kotlin/config/LanguageVersionSettings;
+  #457 = Utf8               org/jetbrains/kotlin/config/LanguageVersionSettings
+  #458 = Class              #457          // org/jetbrains/kotlin/config/LanguageVersionSettings
+  #459 = Utf8               java/util/Set
+  #460 = Class              #459          // java/util/Set
+  #461 = Utf8               org/jetbrains/kotlin/descriptors/ClassifierDescriptor
+  #462 = Class              #461          // org/jetbrains/kotlin/descriptors/ClassifierDescriptor
+  #463 = Utf8               org/jetbrains/kotlin/name/FqName
+  #464 = Class              #463          // org/jetbrains/kotlin/name/FqName
+  #465 = Utf8               org/jetbrains/kotlin/psi/KtExpression
+  #466 = Class              #465          // org/jetbrains/kotlin/psi/KtExpression
+  #467 = Utf8               java/lang/IllegalArgumentException
+  #468 = Class              #467          // java/lang/IllegalArgumentException
+  #469 = Utf8               hasValOrVar
+  #470 = NameAndType        #469:#158     // hasValOrVar:()Z
+  #471 = Methodref          #425.#470     // org/jetbrains/kotlin/psi/KtParameter.hasValOrVar:()Z
+  #472 = Methodref          #425.#121     // org/jetbrains/kotlin/psi/KtParameter.getNameIdentifier:()Lcom/intellij/psi/PsiElement;
+  #473 = Utf8               parameter.nameIdentifier ?: parameter
+  #474 = String             #473          // parameter.nameIdentifier ?: parameter
+  #475 = Utf8               PARCELABLE_CONSTRUCTOR_PARAMETER_SHOULD_BE_VAL_OR_VAR
+  #476 = NameAndType        #475:#130     // PARCELABLE_CONSTRUCTOR_PARAMETER_SHOULD_BE_VAL_OR_VAR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #477 = Fieldref           #128.#476     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_CONSTRUCTOR_PARAMETER_SHOULD_BE_VAL_OR_VAR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #478 = Methodref          #398.#36      // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.getBindingContext:()Lorg/jetbrains/kotlin/resolve/BindingContext;
+  #479 = Utf8               PRIMARY_CONSTRUCTOR_PARAMETER
+  #480 = NameAndType        #479:#164     // PRIMARY_CONSTRUCTOR_PARAMETER:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
+  #481 = Fieldref           #162.#480     // org/jetbrains/kotlin/resolve/BindingContext.PRIMARY_CONSTRUCTOR_PARAMETER:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
+  #482 = Utf8               typeMapper.bindingContex…TER, parameter] ?: return
+  #483 = String             #482          // typeMapper.bindingContex…TER, parameter] ?: return
+  #484 = Utf8               getType
+  #485 = Utf8               ()Lorg/jetbrains/kotlin/types/KotlinType;
+  #486 = NameAndType        #484:#485     // getType:()Lorg/jetbrains/kotlin/types/KotlinType;
+  #487 = InterfaceMethodref #64.#486      // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getType:()Lorg/jetbrains/kotlin/types/KotlinType;
+  #488 = Utf8               descriptor.type
+  #489 = String             #488          // descriptor.type
+  #490 = Utf8               org/jetbrains/kotlin/types/KotlinTypeKt
+  #491 = Class              #490          // org/jetbrains/kotlin/types/KotlinTypeKt
+  #492 = Utf8               isError
+  #493 = NameAndType        #492:#363     // isError:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
+  #494 = Methodref          #491.#493     // org/jetbrains/kotlin/types/KotlinTypeKt.isError:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
+  #495 = Utf8               hasCustomParceler
+  #496 = NameAndType        #495:#92      // hasCustomParceler:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
+  #497 = Methodref          #2.#496       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.hasCustomParceler:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
+  #498 = Utf8               mapType$default
+  #499 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;
+  #500 = NameAndType        #498:#499     // mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;
+  #501 = Methodref          #398.#500     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;
+  #502 = Utf8               getAnnotations
+  #503 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
+  #504 = NameAndType        #502:#503     // getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
+  #505 = InterfaceMethodref #64.#504      // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
+  #506 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt
+  #507 = Class              #506          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt
+  #508 = Utf8               getTypeParcelers
+  #509 = Utf8               (Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;
+  #510 = NameAndType        #508:#509     // getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;
+  #511 = Methodref          #507.#510     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt.getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;
+  #512 = InterfaceMethodref #29.#504      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
+  #513 = Utf8               plus
+  #514 = Utf8               (Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
+  #515 = NameAndType        #513:#514     // plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
+  #516 = Methodref          #420.#515     // kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
+  #517 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext
+  #518 = Class              #517          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext
+  #519 = Utf8               containerClass.defaultType
+  #520 = String             #519          // containerClass.defaultType
+  #521 = Utf8               org/jetbrains/kotlin/codegen/FrameMap
+  #522 = Class              #521          // org/jetbrains/kotlin/codegen/FrameMap
+  #523 = Utf8               ()V
+  #524 = NameAndType        #153:#523     // "<init>":()V
+  #525 = Methodref          #522.#524     // org/jetbrains/kotlin/codegen/FrameMap."<init>":()V
+  #526 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/org/objectweb/asm/Type;Ljava/util/List;Lorg/jetbrains/kotlin/codegen/FrameMap;)V
+  #527 = NameAndType        #153:#526     // "<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/org/objectweb/asm/Type;Ljava/util/List;Lorg/jetbrains/kotlin/codegen/FrameMap;)V
+  #528 = Methodref          #518.#527     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext."<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/org/objectweb/asm/Type;Ljava/util/List;Lorg/jetbrains/kotlin/codegen/FrameMap;)V
+  #529 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer
+  #530 = Class              #529          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer
+  #531 = Utf8               Companion
+  #532 = Utf8               Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;
+  #533 = NameAndType        #531:#532     // Companion:Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;
+  #534 = Fieldref           #530.#533     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer.Companion:Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;
+  #535 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion
+  #536 = Class              #535          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion
+  #537 = Utf8               get$default
+  #538 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer;
+  #539 = NameAndType        #537:#538     // get$default:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer;
+  #540 = Methodref          #536.#539     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion.get$default:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer;
+  #541 = Methodref          #425.#356     // org/jetbrains/kotlin/psi/KtParameter.getTypeReference:()Lorg/jetbrains/kotlin/psi/KtTypeReference;
+  #542 = Utf8               parameter.typeReference …meIdentifier ?: parameter
+  #543 = String             #542          // parameter.typeReference …meIdentifier ?: parameter
+  #544 = Utf8               PARCELABLE_TYPE_NOT_SUPPORTED
+  #545 = NameAndType        #544:#130     // PARCELABLE_TYPE_NOT_SUPPORTED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #546 = Fieldref           #128.#545     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_TYPE_NOT_SUPPORTED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;
+  #547 = Utf8               Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;
+  #548 = Utf8               parcelers
+  #549 = Utf8               Ljava/util/List;
+  #550 = Utf8               e
+  #551 = Utf8               Ljava/lang/IllegalArgumentException;
+  #552 = Utf8               asmType
+  #553 = Utf8               Lorg/jetbrains/org/objectweb/asm/Type;
+  #554 = Utf8               containerClass
+  #555 = Utf8               org/jetbrains/org/objectweb/asm/Type
+  #556 = Class              #555          // org/jetbrains/org/objectweb/asm/Type
+  #557 = Utf8               org/jetbrains/kotlin/psi/KtTypeReference
+  #558 = Class              #557          // org/jetbrains/kotlin/psi/KtTypeReference
+  #559 = Utf8               getCompanionObjectDescriptor
+  #560 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;
+  #561 = NameAndType        #559:#560     // getCompanionObjectDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;
+  #562 = InterfaceMethodref #29.#561      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getCompanionObjectDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;
+  #563 = String             #430          // it
+  #564 = Utf8               companionObjectDescripto…ltType) } ?: return false
+  #565 = String             #564          // companionObjectDescripto…ltType) } ?: return false
+  #566 = Utf8               isParceler
+  #567 = NameAndType        #566:#363     // isParceler:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
+  #568 = Methodref          #90.#567      // org/jetbrains/kotlin/android/parcel/ParcelableResolveExtensionKt.isParceler:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
+  #569 = Utf8               $i$a$-let-ParcelableDeclarationChecker$hasCustomParceler$companionObjectSuperTypes$1
+  #570 = Utf8               $i$a$-any-ParcelableDeclarationChecker$hasCustomParceler$1
+  #571 = Utf8               $this$any$iv
+  #572 = Utf8               $i$f$any
+  #573 = Utf8               companionObjectSuperTypes
+  #574 = Utf8               $this$hasCustomParceler
+  #575 = Methodref          #4.#524       // java/lang/Object."<init>":()V
+  #576 = Utf8               IGNORED_ON_PARCEL_FQNAME
+  #577 = Utf8               Lorg/jetbrains/kotlin/name/FqName;
+  #578 = Utf8               <clinit>
+  #579 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;
+  #580 = Utf8               access$getIGNORED_ON_PARCEL_FQNAME$cp
+  #581 = NameAndType        #576:#577     // IGNORED_ON_PARCEL_FQNAME:Lorg/jetbrains/kotlin/name/FqName;
+  #582 = Fieldref           #2.#581       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.IGNORED_ON_PARCEL_FQNAME:Lorg/jetbrains/kotlin/name/FqName;
+  #583 = Utf8               access$Companion
+  #584 = Utf8               ()Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;
+  #585 = NameAndType        #531:#579     // Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;
+  #586 = Fieldref           #2.#585       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;
+  #587 = Utf8               Lkotlin/Metadata;
+  #588 = Utf8               mv
+  #589 = Integer            1
+  #590 = Integer            4
+  #591 = Integer            0
+  #592 = Utf8               bv
+  #593 = Integer            3
+  #594 = Utf8               k
+  #595 = Utf8               xi
+  #596 = Integer            2
+  #597 = Utf8               d1
+  #598 = Utf8                l\n\n\n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n \n\n\n\n\n \n\n\n\n \n\n  #20:#B¢J 020202\t0\nHJ0020202\r02020HJ(02020202\r0HJ002020202\r020HJ(020202\r020 HJ!0\"*0H¨$
+  #599 = Utf8               d2
+  #600 = Utf8               Lorg/jetbrains/kotlin/resolve/checkers/DeclarationChecker;
+  #601 = Utf8
+  #602 = Utf8               android-extensions-compiler
+  #603 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion
+  #604 = Class              #603          // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion
+  #605 = Utf8               (Lkotlin/jvm/internal/DefaultConstructorMarker;)V
+  #606 = NameAndType        #153:#605     // "<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
+  #607 = Methodref          #604.#606     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
+  #608 = Utf8               kotlinx/android/parcel/IgnoredOnParcel
+  #609 = Class              #608          // kotlinx/android/parcel/IgnoredOnParcel
+  #610 = Utf8               java/lang/Class
+  #611 = Class              #610          // java/lang/Class
+  #612 = Utf8               getCanonicalName
+  #613 = NameAndType        #612:#199     // getCanonicalName:()Ljava/lang/String;
+  #614 = Methodref          #611.#613     // java/lang/Class.getCanonicalName:()Ljava/lang/String;
+  #615 = Utf8               (Ljava/lang/String;)V
+  #616 = NameAndType        #153:#615     // "<init>":(Ljava/lang/String;)V
+  #617 = Methodref          #464.#616     // org/jetbrains/kotlin/name/FqName."<init>":(Ljava/lang/String;)V
And more [--- jar:file:///Users/olegstotsky/Desktop/Code/JBSpring2020/dist-compare/compare/dist_gradle/artifacts/ideaPlugin/Kotlin/kotlinc/lib/android-extensions-compiler.jar!/org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.class, +++ jar:file:///Users/olegstotsky/Desktop/Code/JBSpring2020/dist-compare/compare/dist_jps/artifacts/ideaPlugin/Kotlin/kotlinc/lib/android-extensions-compiler.jar!/org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.class, @@ -126,509 +126,513 @@,    #120 = Utf8               ()Lcom/intellij/psi/PsiElement;,    #121 = NameAndType        #119:#120     // getNameIdentifier:()Lcom/intellij/psi/PsiElement;,    #122 = InterfaceMethodref #58.#121      // org/jetbrains/kotlin/psi/KtFunction.getNameIdentifier:()Lcom/intellij/psi/PsiElement;,    #123 = Utf8               com/intellij/psi/PsiElement,    #124 = Class              #123          // com/intellij/psi/PsiElement, -  #125 = Utf8               org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid, -  #126 = Class              #125          // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid, -  #127 = Utf8               OVERRIDING_WRITE_TO_PARCEL_IS_NOT_ALLOWED, -  #128 = Utf8               Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #129 = NameAndType        #127:#128     // OVERRIDING_WRITE_TO_PARCEL_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #130 = Fieldref           #126.#129     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.OVERRIDING_WRITE_TO_PARCEL_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #131 = Utf8               org/jetbrains/kotlin/diagnostics/DiagnosticFactory0, -  #132 = Class              #131          // org/jetbrains/kotlin/diagnostics/DiagnosticFactory0, -  #133 = Utf8               on, -  #134 = Utf8               (Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/SimpleDiagnostic;, -  #135 = NameAndType        #133:#134     // on:(Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/SimpleDiagnostic;, -  #136 = Methodref          #132.#135     // org/jetbrains/kotlin/diagnostics/DiagnosticFactory0.on:(Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/SimpleDiagnostic;, -  #137 = Utf8               org/jetbrains/kotlin/diagnostics/Diagnostic, -  #138 = Class              #137          // org/jetbrains/kotlin/diagnostics/Diagnostic, -  #139 = Utf8               report, -  #140 = Utf8               (Lorg/jetbrains/kotlin/diagnostics/Diagnostic;)V, -  #141 = NameAndType        #139:#140     // report:(Lorg/jetbrains/kotlin/diagnostics/Diagnostic;)V, -  #142 = InterfaceMethodref #31.#141      // org/jetbrains/kotlin/diagnostics/DiagnosticSink.report:(Lorg/jetbrains/kotlin/diagnostics/Diagnostic;)V, -  #143 = Utf8               reportElement, -  #144 = Utf8               Lcom/intellij/psi/PsiElement;, -  #145 = Utf8               method, -  #146 = Utf8               Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, -  #147 = Utf8               diagnosticHolder, -  #148 = Utf8               Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;, -  #149 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1, -  #150 = Class              #149          // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1, -  #151 = Utf8               <init>, -  #152 = Utf8               (Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)V, -  #153 = NameAndType        #151:#152     // "<init>":(Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)V, -  #154 = Methodref          #150.#153     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1."<init>":(Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)V, -  #155 = Utf8               hasDelegate, -  #156 = Utf8               ()Z, -  #157 = NameAndType        #155:#156     // hasDelegate:()Z, -  #158 = Methodref          #67.#157      // org/jetbrains/kotlin/psi/KtProperty.hasDelegate:()Z, -  #159 = Utf8               org/jetbrains/kotlin/resolve/BindingContext, -  #160 = Class              #159          // org/jetbrains/kotlin/resolve/BindingContext, -  #161 = Utf8               BACKING_FIELD_REQUIRED, -  #162 = Utf8               Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, -  #163 = NameAndType        #161:#162     // BACKING_FIELD_REQUIRED:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, -  #164 = Fieldref           #160.#163     // org/jetbrains/kotlin/resolve/BindingContext.BACKING_FIELD_REQUIRED:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, -  #165 = Utf8               org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice, -  #166 = Class              #165          // org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice, -  #167 = Utf8               get, -  #168 = Utf8               (Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;, -  #169 = NameAndType        #167:#168     // get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;, -  #170 = InterfaceMethodref #160.#169     // org/jetbrains/kotlin/resolve/BindingContext.get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;, -  #171 = Utf8               java/lang/Boolean, -  #172 = Class              #171          // java/lang/Boolean, -  #173 = Utf8               valueOf, -  #174 = Utf8               (Z)Ljava/lang/Boolean;, -  #175 = NameAndType        #173:#174     // valueOf:(Z)Ljava/lang/Boolean;, -  #176 = Methodref          #172.#175     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;, -  #177 = Utf8               areEqual, -  #178 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z, -  #179 = NameAndType        #177:#178     // areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z, -  #180 = Methodref          #13.#179      // kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z, -  #181 = Utf8               invoke, -  #182 = NameAndType        #181:#156     // invoke:()Z, -  #183 = Methodref          #150.#182     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1.invoke:()Z, -  #184 = Methodref          #67.#121      // org/jetbrains/kotlin/psi/KtProperty.getNameIdentifier:()Lcom/intellij/psi/PsiElement;, -  #185 = Utf8               declaration.nameIdentifier ?: declaration, -  #186 = String             #185          // declaration.nameIdentifier ?: declaration, -  #187 = Utf8               PROPERTY_WONT_BE_SERIALIZED, -  #188 = NameAndType        #187:#128     // PROPERTY_WONT_BE_SERIALIZED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #189 = Fieldref           #126.#188     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PROPERTY_WONT_BE_SERIALIZED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #190 = Utf8               getName, -  #191 = Utf8               ()Lorg/jetbrains/kotlin/name/Name;, -  #192 = NameAndType        #190:#191     // getName:()Lorg/jetbrains/kotlin/name/Name;, -  #193 = InterfaceMethodref #64.#192      // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getName:()Lorg/jetbrains/kotlin/name/Name;, -  #194 = Utf8               org/jetbrains/kotlin/name/Name, -  #195 = Class              #194          // org/jetbrains/kotlin/name/Name, -  #196 = Utf8               asString, -  #197 = Utf8               ()Ljava/lang/String;, -  #198 = NameAndType        #196:#197     // asString:()Ljava/lang/String;, -  #199 = Methodref          #195.#198     // org/jetbrains/kotlin/name/Name.asString:()Ljava/lang/String;, -  #200 = Utf8               CREATOR, -  #201 = String             #200          // CREATOR, -  #202 = Utf8               org/jetbrains/kotlin/resolve/jvm/annotations/JvmAnnotationUtilKt, -  #203 = Class              #202          // org/jetbrains/kotlin/resolve/jvm/annotations/JvmAnnotationUtilKt, -  #204 = Utf8               findJvmFieldAnnotation, -  #205 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;, -  #206 = NameAndType        #204:#205     // findJvmFieldAnnotation:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;, -  #207 = Methodref          #203.#206     // org/jetbrains/kotlin/resolve/jvm/annotations/JvmAnnotationUtilKt.findJvmFieldAnnotation:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;, -  #208 = Utf8               isCompanionObject, -  #209 = NameAndType        #208:#156     // isCompanionObject:()Z, -  #210 = InterfaceMethodref #29.#209      // org/jetbrains/kotlin/descriptors/ClassDescriptor.isCompanionObject:()Z, -  #211 = InterfaceMethodref #29.#55       // org/jetbrains/kotlin/descriptors/ClassDescriptor.getContainingDeclaration:()Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;, -  #212 = Utf8               CREATOR_DEFINITION_IS_NOT_ALLOWED, -  #213 = NameAndType        #212:#128     // CREATOR_DEFINITION_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #214 = Fieldref           #126.#213     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.CREATOR_DEFINITION_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #215 = Utf8               outerClass, -  #216 = Utf8               $fun$hasIgnoredOnParcel$1, -  #217 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1;, -  #218 = Utf8               property, -  #219 = Utf8               Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;, -  #220 = Utf8               bindingContext, -  #221 = Utf8               Lorg/jetbrains/kotlin/resolve/BindingContext;, -  #222 = Utf8               org/jetbrains/kotlin/psi/KtClassOrObject, -  #223 = Class              #222          // org/jetbrains/kotlin/psi/KtClassOrObject, -  #224 = Utf8               PARCELABLE_SHOULD_BE_CLASS, -  #225 = NameAndType        #224:#128     // PARCELABLE_SHOULD_BE_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #226 = Fieldref           #126.#225     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_SHOULD_BE_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #227 = Utf8               org/jetbrains/kotlin/psi/KtClass, -  #228 = Class              #227          // org/jetbrains/kotlin/psi/KtClass, -  #229 = Utf8               isAnnotation, -  #230 = NameAndType        #229:#156     // isAnnotation:()Z, -  #231 = Methodref          #223.#230     // org/jetbrains/kotlin/psi/KtClassOrObject.isAnnotation:()Z, -  #232 = Utf8               isInterface, -  #233 = NameAndType        #232:#156     // isInterface:()Z, -  #234 = Methodref          #228.#233     // org/jetbrains/kotlin/psi/KtClass.isInterface:()Z, -  #235 = Methodref          #228.#121     // org/jetbrains/kotlin/psi/KtClass.getNameIdentifier:()Lcom/intellij/psi/PsiElement;, -  #236 = Utf8               getCompanionObjects, -  #237 = Utf8               ()Ljava/util/List;, -  #238 = NameAndType        #236:#237     // getCompanionObjects:()Ljava/util/List;, -  #239 = Methodref          #223.#238     // org/jetbrains/kotlin/psi/KtClassOrObject.getCompanionObjects:()Ljava/util/List;, -  #240 = Utf8               java/util/List, -  #241 = Class              #240          // java/util/List, -  #242 = Utf8               iterator, -  #243 = Utf8               ()Ljava/util/Iterator;, -  #244 = NameAndType        #242:#243     // iterator:()Ljava/util/Iterator;, -  #245 = InterfaceMethodref #241.#244     // java/util/List.iterator:()Ljava/util/Iterator;, -  #246 = Utf8               java/util/Iterator, -  #247 = Class              #246          // java/util/Iterator, -  #248 = Utf8               hasNext, -  #249 = NameAndType        #248:#156     // hasNext:()Z, -  #250 = InterfaceMethodref #247.#249     // java/util/Iterator.hasNext:()Z, -  #251 = Utf8               next, -  #252 = Utf8               ()Ljava/lang/Object;, -  #253 = NameAndType        #251:#252     // next:()Ljava/lang/Object;, -  #254 = InterfaceMethodref #247.#253     // java/util/Iterator.next:()Ljava/lang/Object;, -  #255 = Utf8               org/jetbrains/kotlin/psi/KtObjectDeclaration, -  #256 = Class              #255          // org/jetbrains/kotlin/psi/KtObjectDeclaration, -  #257 = Utf8               companion, -  #258 = String             #257          // companion, -  #259 = NameAndType        #190:#197     // getName:()Ljava/lang/String;, -  #260 = Methodref          #256.#259     // org/jetbrains/kotlin/psi/KtObjectDeclaration.getName:()Ljava/lang/String;, -  #261 = Methodref          #256.#121     // org/jetbrains/kotlin/psi/KtObjectDeclaration.getNameIdentifier:()Lcom/intellij/psi/PsiElement;, -  #262 = Methodref          #223.#111     // org/jetbrains/kotlin/psi/KtClassOrObject.getModifierList:()Lorg/jetbrains/kotlin/psi/KtModifierList;, -  #263 = Utf8               ABSTRACT_KEYWORD, -  #264 = NameAndType        #263:#102     // ABSTRACT_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;, -  #265 = Fieldref           #100.#264     // org/jetbrains/kotlin/lexer/KtTokens.ABSTRACT_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;, -  #266 = Utf8               SEALED_KEYWORD, -  #267 = NameAndType        #266:#102     // SEALED_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;, -  #268 = Fieldref           #100.#267     // org/jetbrains/kotlin/lexer/KtTokens.SEALED_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;, -  #269 = Utf8               PARCELABLE_SHOULD_BE_INSTANTIABLE, -  #270 = NameAndType        #269:#128     // PARCELABLE_SHOULD_BE_INSTANTIABLE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #271 = Fieldref           #126.#270     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_SHOULD_BE_INSTANTIABLE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #272 = Utf8               isInner, -  #273 = NameAndType        #272:#156     // isInner:()Z, -  #274 = Methodref          #228.#273     // org/jetbrains/kotlin/psi/KtClass.isInner:()Z, -  #275 = Methodref          #228.#111     // org/jetbrains/kotlin/psi/KtClass.getModifierList:()Lorg/jetbrains/kotlin/psi/KtModifierList;, -  #276 = Utf8               INNER_KEYWORD, -  #277 = NameAndType        #276:#102     // INNER_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;, -  #278 = Fieldref           #100.#277     // org/jetbrains/kotlin/lexer/KtTokens.INNER_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;, -  #279 = Utf8               PARCELABLE_CANT_BE_INNER_CLASS, -  #280 = NameAndType        #279:#128     // PARCELABLE_CANT_BE_INNER_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #281 = Fieldref           #126.#280     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_CANT_BE_INNER_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #282 = Utf8               isLocal, -  #283 = NameAndType        #282:#156     // isLocal:()Z, -  #284 = Methodref          #223.#283     // org/jetbrains/kotlin/psi/KtClassOrObject.isLocal:()Z, -  #285 = Methodref          #223.#121     // org/jetbrains/kotlin/psi/KtClassOrObject.getNameIdentifier:()Lcom/intellij/psi/PsiElement;, -  #286 = Utf8               PARCELABLE_CANT_BE_LOCAL_CLASS, -  #287 = NameAndType        #286:#128     // PARCELABLE_CANT_BE_LOCAL_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #288 = Fieldref           #126.#287     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_CANT_BE_LOCAL_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #289 = Utf8               getDefaultType, -  #290 = Utf8               ()Lorg/jetbrains/kotlin/types/SimpleType;, -  #291 = NameAndType        #289:#290     // getDefaultType:()Lorg/jetbrains/kotlin/types/SimpleType;, -  #292 = InterfaceMethodref #29.#291      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getDefaultType:()Lorg/jetbrains/kotlin/types/SimpleType;, -  #293 = Utf8               org/jetbrains/kotlin/types/KotlinType, -  #294 = Class              #293          // org/jetbrains/kotlin/types/KotlinType, -  #295 = Utf8               org/jetbrains/kotlin/types/TypeUtils, -  #296 = Class              #295          // org/jetbrains/kotlin/types/TypeUtils, -  #297 = Utf8               getAllSupertypes, -  #298 = Utf8               (Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;, -  #299 = NameAndType        #297:#298     // getAllSupertypes:(Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;, -  #300 = Methodref          #296.#299     // org/jetbrains/kotlin/types/TypeUtils.getAllSupertypes:(Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;, -  #301 = Utf8               TypeUtils.getAllSupertypes(descriptor.defaultType), -  #302 = String             #301          // TypeUtils.getAllSupertypes(descriptor.defaultType), -  #303 = Utf8               java/lang/Iterable, -  #304 = Class              #303          // java/lang/Iterable, -  #305 = Utf8               java/util/Collection, -  #306 = Class              #305          // java/util/Collection, -  #307 = Utf8               isEmpty, -  #308 = NameAndType        #307:#156     // isEmpty:()Z, -  #309 = InterfaceMethodref #306.#308     // java/util/Collection.isEmpty:()Z, -  #310 = InterfaceMethodref #304.#244     // java/lang/Iterable.iterator:()Ljava/util/Iterator;, -  #311 = Utf8               getConstructor, -  #312 = Utf8               ()Lorg/jetbrains/kotlin/types/TypeConstructor;, -  #313 = NameAndType        #311:#312     // getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;, -  #314 = Methodref          #294.#313     // org/jetbrains/kotlin/types/KotlinType.getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;, -  #315 = Utf8               org/jetbrains/kotlin/types/TypeConstructor, -  #316 = Class              #315          // org/jetbrains/kotlin/types/TypeConstructor, -  #317 = Utf8               getDeclarationDescriptor, -  #318 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, -  #319 = NameAndType        #317:#318     // getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, -  #320 = InterfaceMethodref #316.#319     // org/jetbrains/kotlin/types/TypeConstructor.getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, -  #321 = Utf8               org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt, -  #322 = Class              #321          // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt, -  #323 = Utf8               getFqNameSafe, -  #324 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;, -  #325 = NameAndType        #323:#324     // getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;, -  #326 = Methodref          #322.#325     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;, -  #327 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableDeclarationCheckerKt, -  #328 = Class              #327          // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationCheckerKt, -  #329 = Utf8               getANDROID_PARCELABLE_CLASS_FQNAME, -  #330 = Utf8               ()Lorg/jetbrains/kotlin/name/FqName;, -  #331 = NameAndType        #329:#330     // getANDROID_PARCELABLE_CLASS_FQNAME:()Lorg/jetbrains/kotlin/name/FqName;, -  #332 = Methodref          #328.#331     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationCheckerKt.getANDROID_PARCELABLE_CLASS_FQNAME:()Lorg/jetbrains/kotlin/name/FqName;, -  #333 = Utf8               NO_PARCELABLE_SUPERTYPE, -  #334 = NameAndType        #333:#128     // NO_PARCELABLE_SUPERTYPE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #335 = Fieldref           #126.#334     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.NO_PARCELABLE_SUPERTYPE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #336 = Utf8               getSuperTypeListEntries, -  #337 = NameAndType        #336:#237     // getSuperTypeListEntries:()Ljava/util/List;, -  #338 = Methodref          #223.#337     // org/jetbrains/kotlin/psi/KtClassOrObject.getSuperTypeListEntries:()Ljava/util/List;, -  #339 = Utf8               org/jetbrains/kotlin/psi/KtSuperTypeListEntry, -  #340 = Class              #339          // org/jetbrains/kotlin/psi/KtSuperTypeListEntry, -  #341 = Utf8               org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry, -  #342 = Class              #341          // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry, -  #343 = Utf8               getDelegateExpression, -  #344 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtExpression;, -  #345 = NameAndType        #343:#344     // getDelegateExpression:()Lorg/jetbrains/kotlin/psi/KtExpression;, -  #346 = Methodref          #342.#345     // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry.getDelegateExpression:()Lorg/jetbrains/kotlin/psi/KtExpression;, -  #347 = Utf8               supertypeEntry.delegateExpression ?: continue, -  #348 = String             #347          // supertypeEntry.delegateExpression ?: continue, -  #349 = Utf8               TYPE, -  #350 = NameAndType        #349:#162     // TYPE:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, -  #351 = Fieldref           #160.#350     // org/jetbrains/kotlin/resolve/BindingContext.TYPE:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, -  #352 = Utf8               getTypeReference, -  #353 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtTypeReference;, -  #354 = NameAndType        #352:#353     // getTypeReference:()Lorg/jetbrains/kotlin/psi/KtTypeReference;, -  #355 = Methodref          #342.#354     // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry.getTypeReference:()Lorg/jetbrains/kotlin/psi/KtTypeReference;, -  #356 = Utf8               bindingContext[BindingCo…ypeReference] ?: continue, -  #357 = String             #356          // bindingContext[BindingCo…ypeReference] ?: continue, -  #358 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializerKt, -  #359 = Class              #358          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializerKt, -  #360 = Utf8               isParcelable, -  #361 = Utf8               (Lorg/jetbrains/kotlin/types/KotlinType;)Z, -  #362 = NameAndType        #360:#361     // isParcelable:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, -  #363 = Methodref          #359.#362     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializerKt.isParcelable:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, -  #364 = Utf8               getByKeywordNode, -  #365 = Utf8               ()Lcom/intellij/lang/ASTNode;, -  #366 = NameAndType        #364:#365     // getByKeywordNode:()Lcom/intellij/lang/ASTNode;, -  #367 = Methodref          #342.#366     // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry.getByKeywordNode:()Lcom/intellij/lang/ASTNode;, -  #368 = Utf8               com/intellij/lang/ASTNode, -  #369 = Class              #368          // com/intellij/lang/ASTNode, -  #370 = Utf8               getPsi, -  #371 = NameAndType        #370:#120     // getPsi:()Lcom/intellij/psi/PsiElement;, -  #372 = InterfaceMethodref #369.#371     // com/intellij/lang/ASTNode.getPsi:()Lcom/intellij/psi/PsiElement;, -  #373 = Utf8               PARCELABLE_DELEGATE_IS_NOT_ALLOWED, -  #374 = NameAndType        #373:#128     // PARCELABLE_DELEGATE_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #375 = Fieldref           #126.#374     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_DELEGATE_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #376 = Utf8               getPrimaryConstructor, -  #377 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;, -  #378 = NameAndType        #376:#377     // getPrimaryConstructor:()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;, -  #379 = Methodref          #223.#378     // org/jetbrains/kotlin/psi/KtClassOrObject.getPrimaryConstructor:()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;, -  #380 = Utf8               getSecondaryConstructors, -  #381 = NameAndType        #380:#237     // getSecondaryConstructors:()Ljava/util/List;, -  #382 = Methodref          #223.#381     // org/jetbrains/kotlin/psi/KtClassOrObject.getSecondaryConstructors:()Ljava/util/List;, -  #383 = Utf8               PARCELABLE_SHOULD_HAVE_PRIMARY_CONSTRUCTOR, -  #384 = NameAndType        #383:#128     // PARCELABLE_SHOULD_HAVE_PRIMARY_CONSTRUCTOR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #385 = Fieldref           #126.#384     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_SHOULD_HAVE_PRIMARY_CONSTRUCTOR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #386 = Utf8               org/jetbrains/kotlin/psi/KtPrimaryConstructor, -  #387 = Class              #386          // org/jetbrains/kotlin/psi/KtPrimaryConstructor, -  #388 = Utf8               getValueParameters, -  #389 = NameAndType        #388:#237     // getValueParameters:()Ljava/util/List;, -  #390 = Methodref          #387.#389     // org/jetbrains/kotlin/psi/KtPrimaryConstructor.getValueParameters:()Ljava/util/List;, -  #391 = InterfaceMethodref #241.#308     // java/util/List.isEmpty:()Z, -  #392 = Utf8               PARCELABLE_PRIMARY_CONSTRUCTOR_IS_EMPTY, -  #393 = NameAndType        #392:#128     // PARCELABLE_PRIMARY_CONSTRUCTOR_IS_EMPTY:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #394 = Fieldref           #126.#393     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_PRIMARY_CONSTRUCTOR_IS_EMPTY:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #395 = Utf8               org/jetbrains/kotlin/codegen/state/KotlinTypeMapper, -  #396 = Class              #395          // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper, -  #397 = Utf8               org/jetbrains/kotlin/codegen/ClassBuilderMode, -  #398 = Class              #397          // org/jetbrains/kotlin/codegen/ClassBuilderMode, -  #399 = Utf8               FULL, -  #400 = Utf8               Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;, -  #401 = NameAndType        #399:#400     // FULL:Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;, -  #402 = Fieldref           #398.#401     // org/jetbrains/kotlin/codegen/ClassBuilderMode.FULL:Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;, -  #403 = Utf8               ClassBuilderMode.FULL, -  #404 = String             #403          // ClassBuilderMode.FULL, -  #405 = Utf8               getModule, -  #406 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;, -  #407 = NameAndType        #405:#406     // getModule:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;, -  #408 = Methodref          #322.#407     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getModule:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;, -  #409 = Utf8               org/jetbrains/kotlin/descriptors/ModuleDescriptor, -  #410 = Class              #409          // org/jetbrains/kotlin/descriptors/ModuleDescriptor, -  #411 = InterfaceMethodref #410.#192     // org/jetbrains/kotlin/descriptors/ModuleDescriptor.getName:()Lorg/jetbrains/kotlin/name/Name;, -  #412 = Utf8               descriptor.module.name.asString(), -  #413 = String             #412          // descriptor.module.name.asString(), -  #414 = Utf8               (Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;Ljava/lang/String;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/codegen/state/IncompatibleClassTracker;Lorg/jetbrains/kotlin/config/JvmTarget;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V, -  #415 = NameAndType        #151:#414     // "<init>":(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;Ljava/lang/String;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/codegen/state/IncompatibleClassTracker;Lorg/jetbrains/kotlin/config/JvmTarget;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V, -  #416 = Methodref          #396.#415     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper."<init>":(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;Ljava/lang/String;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/codegen/state/IncompatibleClassTracker;Lorg/jetbrains/kotlin/config/JvmTarget;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V, -  #417 = Utf8               kotlin/collections/CollectionsKt, -  #418 = Class              #417          // kotlin/collections/CollectionsKt, -  #419 = Utf8               emptyList, -  #420 = NameAndType        #419:#237     // emptyList:()Ljava/util/List;, -  #421 = Methodref          #418.#420     // kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;, -  #422 = Utf8               org/jetbrains/kotlin/psi/KtParameter, -  #423 = Class              #422          // org/jetbrains/kotlin/psi/KtParameter, -  #424 = Utf8               (Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;)V, -  #425 = NameAndType        #68:#424      // checkParcelableClassProperty:(Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;)V, -  #426 = Methodref          #2.#425       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.checkParcelableClassProperty:(Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;)V, -  #427 = Utf8               Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;, -  #428 = Utf8               it, -  #429 = Utf8               Lorg/jetbrains/kotlin/psi/KtModifierList;, -  #430 = Utf8               $i$a$-let-ParcelableDeclarationChecker$checkParcelableClass$sealedOrAbstract$1, -  #431 = Utf8               I, -  #432 = Utf8               Lorg/jetbrains/kotlin/types/KotlinType;, -  #433 = Utf8               $i$a$-none-ParcelableDeclarationChecker$checkParcelableClass$1, -  #434 = Utf8               element$iv, -  #435 = Utf8               Ljava/lang/Object;, -  #436 = Utf8               $this$none$iv, -  #437 = Utf8               Ljava/lang/Iterable;, -  #438 = Utf8               $i$f$none, -  #439 = Utf8               type, -  #440 = Utf8               delegateExpression, -  #441 = Utf8               Lorg/jetbrains/kotlin/psi/KtExpression;, -  #442 = Utf8               supertypeEntry, -  #443 = Utf8               Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;, -  #444 = Utf8               parameter, -  #445 = Utf8               Lorg/jetbrains/kotlin/psi/KtParameter;, -  #446 = Utf8               typeMapper, -  #447 = Utf8               Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;, -  #448 = Utf8               primaryConstructor, -  #449 = Utf8               Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;, -  #450 = Utf8               superTypes, -  #451 = Utf8               Ljava/util/Set;, -  #452 = Utf8               sealedOrAbstract, -  #453 = Utf8               languageVersionSettings, -  #454 = Utf8               Lorg/jetbrains/kotlin/config/LanguageVersionSettings;, -  #455 = Utf8               org/jetbrains/kotlin/config/LanguageVersionSettings, -  #456 = Class              #455          // org/jetbrains/kotlin/config/LanguageVersionSettings, -  #457 = Utf8               java/util/Set, -  #458 = Class              #457          // java/util/Set, -  #459 = Utf8               org/jetbrains/kotlin/descriptors/ClassifierDescriptor, -  #460 = Class              #459          // org/jetbrains/kotlin/descriptors/ClassifierDescriptor, -  #461 = Utf8               org/jetbrains/kotlin/name/FqName, -  #462 = Class              #461          // org/jetbrains/kotlin/name/FqName, -  #463 = Utf8               org/jetbrains/kotlin/psi/KtExpression, -  #464 = Class              #463          // org/jetbrains/kotlin/psi/KtExpression, -  #465 = Utf8               java/lang/IllegalArgumentException, -  #466 = Class              #465          // java/lang/IllegalArgumentException, -  #467 = Utf8               hasValOrVar, -  #468 = NameAndType        #467:#156     // hasValOrVar:()Z, -  #469 = Methodref          #423.#468     // org/jetbrains/kotlin/psi/KtParameter.hasValOrVar:()Z, -  #470 = Methodref          #423.#121     // org/jetbrains/kotlin/psi/KtParameter.getNameIdentifier:()Lcom/intellij/psi/PsiElement;, -  #471 = Utf8               parameter.nameIdentifier ?: parameter, -  #472 = String             #471          // parameter.nameIdentifier ?: parameter, -  #473 = Utf8               PARCELABLE_CONSTRUCTOR_PARAMETER_SHOULD_BE_VAL_OR_VAR, -  #474 = NameAndType        #473:#128     // PARCELABLE_CONSTRUCTOR_PARAMETER_SHOULD_BE_VAL_OR_VAR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #475 = Fieldref           #126.#474     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_CONSTRUCTOR_PARAMETER_SHOULD_BE_VAL_OR_VAR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #476 = Methodref          #396.#36      // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.getBindingContext:()Lorg/jetbrains/kotlin/resolve/BindingContext;, -  #477 = Utf8               PRIMARY_CONSTRUCTOR_PARAMETER, -  #478 = NameAndType        #477:#162     // PRIMARY_CONSTRUCTOR_PARAMETER:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, -  #479 = Fieldref           #160.#478     // org/jetbrains/kotlin/resolve/BindingContext.PRIMARY_CONSTRUCTOR_PARAMETER:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, -  #480 = Utf8               typeMapper.bindingContex…TER, parameter] ?: return, -  #481 = String             #480          // typeMapper.bindingContex…TER, parameter] ?: return, -  #482 = Utf8               getType, -  #483 = Utf8               ()Lorg/jetbrains/kotlin/types/KotlinType;, -  #484 = NameAndType        #482:#483     // getType:()Lorg/jetbrains/kotlin/types/KotlinType;, -  #485 = InterfaceMethodref #64.#484      // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getType:()Lorg/jetbrains/kotlin/types/KotlinType;, -  #486 = Utf8               descriptor.type, -  #487 = String             #486          // descriptor.type, -  #488 = Utf8               org/jetbrains/kotlin/types/KotlinTypeKt, -  #489 = Class              #488          // org/jetbrains/kotlin/types/KotlinTypeKt, -  #490 = Utf8               isError, -  #491 = NameAndType        #490:#361     // isError:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, -  #492 = Methodref          #489.#491     // org/jetbrains/kotlin/types/KotlinTypeKt.isError:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, -  #493 = Utf8               hasCustomParceler, -  #494 = NameAndType        #493:#92      // hasCustomParceler:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, -  #495 = Methodref          #2.#494       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.hasCustomParceler:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, -  #496 = Utf8               mapType$default, -  #497 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;, -  #498 = NameAndType        #496:#497     // mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;, -  #499 = Methodref          #396.#498     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;, -  #500 = Utf8               getAnnotations, -  #501 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, -  #502 = NameAndType        #500:#501     // getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, -  #503 = InterfaceMethodref #64.#502      // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, -  #504 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt, -  #505 = Class              #504          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt, -  #506 = Utf8               getTypeParcelers, -  #507 = Utf8               (Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;, -  #508 = NameAndType        #506:#507     // getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;, -  #509 = Methodref          #505.#508     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt.getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;, -  #510 = InterfaceMethodref #29.#502      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, -  #511 = Utf8               plus, -  #512 = Utf8               (Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;, -  #513 = NameAndType        #511:#512     // plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;, -  #514 = Methodref          #418.#513     // kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;, -  #515 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext, -  #516 = Class              #515          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext, -  #517 = Utf8               containerClass.defaultType, -  #518 = String             #517          // containerClass.defaultType, -  #519 = Utf8               org/jetbrains/kotlin/codegen/FrameMap, -  #520 = Class              #519          // org/jetbrains/kotlin/codegen/FrameMap, -  #521 = Utf8               ()V, -  #522 = NameAndType        #151:#521     // "<init>":()V, -  #523 = Methodref          #520.#522     // org/jetbrains/kotlin/codegen/FrameMap."<init>":()V, -  #524 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/org/objectweb/asm/Type;Ljava/util/List;Lorg/jetbrains/kotlin/codegen/FrameMap;)V, -  #525 = NameAndType        #151:#524     // "<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/org/objectweb/asm/Type;Ljava/util/List;Lorg/jetbrains/kotlin/codegen/FrameMap;)V, -  #526 = Methodref          #516.#525     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext."<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/org/objectweb/asm/Type;Ljava/util/List;Lorg/jetbrains/kotlin/codegen/FrameMap;)V, -  #527 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer, -  #528 = Class              #527          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer, -  #529 = Utf8               Companion, -  #530 = Utf8               Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;, -  #531 = NameAndType        #529:#530     // Companion:Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;, -  #532 = Fieldref           #528.#531     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer.Companion:Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;, -  #533 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion, -  #534 = Class              #533          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion, -  #535 = Utf8               get$default, -  #536 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer;, -  #537 = NameAndType        #535:#536     // get$default:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer;, -  #538 = Methodref          #534.#537     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion.get$default:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer;, -  #539 = Methodref          #423.#354     // org/jetbrains/kotlin/psi/KtParameter.getTypeReference:()Lorg/jetbrains/kotlin/psi/KtTypeReference;, -  #540 = Utf8               PARCELABLE_TYPE_NOT_SUPPORTED, -  #541 = NameAndType        #540:#128     // PARCELABLE_TYPE_NOT_SUPPORTED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #542 = Fieldref           #126.#541     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_TYPE_NOT_SUPPORTED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, -  #543 = Utf8               Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;, -  #544 = Utf8               parcelers, -  #545 = Utf8               Ljava/util/List;, -  #546 = Utf8               e, -  #547 = Utf8               Ljava/lang/IllegalArgumentException;, -  #548 = Utf8               asmType, -  #549 = Utf8               Lorg/jetbrains/org/objectweb/asm/Type;, -  #550 = Utf8               containerClass, -  #551 = Utf8               org/jetbrains/org/objectweb/asm/Type, -  #552 = Class              #551          // org/jetbrains/org/objectweb/asm/Type, -  #553 = Utf8               org/jetbrains/kotlin/psi/KtTypeReference, -  #554 = Class              #553          // org/jetbrains/kotlin/psi/KtTypeReference, -  #555 = Utf8               getCompanionObjectDescriptor, -  #556 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;, -  #557 = NameAndType        #555:#556     // getCompanionObjectDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;, -  #558 = InterfaceMethodref #29.#557      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getCompanionObjectDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;, -  #559 = String             #428          // it, -  #560 = Utf8               companionObjectDescripto…ltType) } ?: return false, -  #561 = String             #560          // companionObjectDescripto…ltType) } ?: return false, -  #562 = Utf8               isParceler, -  #563 = NameAndType        #562:#361     // isParceler:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, -  #564 = Methodref          #90.#563      // org/jetbrains/kotlin/android/parcel/ParcelableResolveExtensionKt.isParceler:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, -  #565 = Utf8               $i$a$-let-ParcelableDeclarationChecker$hasCustomParceler$companionObjectSuperTypes$1, -  #566 = Utf8               $i$a$-any-ParcelableDeclarationChecker$hasCustomParceler$1, -  #567 = Utf8               $this$any$iv, -  #568 = Utf8               $i$f$any, -  #569 = Utf8               companionObjectSuperTypes, -  #570 = Utf8               $this$hasCustomParceler, -  #571 = Methodref          #4.#522       // java/lang/Object."<init>":()V, -  #572 = Utf8               IGNORED_ON_PARCEL_FQNAME, -  #573 = Utf8               Lorg/jetbrains/kotlin/name/FqName;, -  #574 = Utf8               <clinit>, -  #575 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;, -  #576 = Utf8               access$getIGNORED_ON_PARCEL_FQNAME$cp, -  #577 = NameAndType        #572:#573     // IGNORED_ON_PARCEL_FQNAME:Lorg/jetbrains/kotlin/name/FqName;, -  #578 = Fieldref           #2.#577       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.IGNORED_ON_PARCEL_FQNAME:Lorg/jetbrains/kotlin/name/FqName;, -  #579 = Utf8               access$Companion, -  #580 = Utf8               ()Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;, -  #581 = NameAndType        #529:#575     // Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;, -  #582 = Fieldref           #2.#581       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;, -  #583 = Utf8               Lkotlin/Metadata;, -  #584 = Utf8               mv, -  #585 = Integer            1, -  #586 = Integer            17, -  #587 = Utf8               bv, -  #588 = Integer            0, -  #589 = Integer            3, -  #590 = Utf8               k, -  #591 = Utf8               xi, -  #592 = Integer            2, -  #593 = Utf8               d1, -  #594 = Utf8                l\n\n\n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n \n\n\n\n\n \n\n\n\n \n\n  #20:#B¢J 020202\t0\nHJ0020202\r02020HJ(02020202\r0HJ002020202\r020HJ(020202\r020 HJ!0\"*0H¨$, -  #595 = Utf8               d2, -  #596 = Utf8               Lorg/jetbrains/kotlin/resolve/checkers/DeclarationChecker;, -  #597 = Utf8, -  #598 = Utf8               android-extensions-compiler, -  #599 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion, -  #600 = Class              #599          // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion, -  #601 = Utf8               (Lkotlin/jvm/internal/DefaultConstructorMarker;)V, -  #602 = NameAndType        #151:#601     // "<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V, -  #603 = Methodref          #600.#602     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V, -  #604 = Utf8               kotlinx/android/parcel/IgnoredOnParcel, -  #605 = Class              #604          // kotlinx/android/parcel/IgnoredOnParcel, -  #606 = Utf8               java/lang/Class, -  #607 = Class              #606          // java/lang/Class, -  #608 = Utf8               getCanonicalName, -  #609 = NameAndType        #608:#197     // getCanonicalName:()Ljava/lang/String;, -  #610 = Methodref          #607.#609     // java/lang/Class.getCanonicalName:()Ljava/lang/String;, -  #611 = Utf8               (Ljava/lang/String;)V, -  #612 = NameAndType        #151:#611     // "<init>":(Ljava/lang/String;)V, -  #613 = Methodref          #462.#612     // org/jetbrains/kotlin/name/FqName."<init>":(Ljava/lang/String;)V, -  #614 = Utf8               ParcelableDeclarationChecker.kt, -  #615 = Utf8               Code, -  #616 = Utf8               StackMapTable, -  #617 = Utf8               LineNumberTable, -  #618 = Utf8               LocalVariableTable, -  #619 = Utf8               RuntimeInvisibleParameterAnnotations, -  #620 = Utf8               InnerClasses, -  #621 = Utf8               SourceFile, -  #622 = Utf8               SourceDebugExtension, -  #623 = Utf8               RuntimeVisibleAnnotations, +  #125 = Utf8               declaration.modifierList…Identifier ?: declaration, +  #126 = String             #125          // declaration.modifierList…Identifier ?: declaration, +  #127 = Utf8               org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid, +  #128 = Class              #127          // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid, +  #129 = Utf8               OVERRIDING_WRITE_TO_PARCEL_IS_NOT_ALLOWED, +  #130 = Utf8               Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #131 = NameAndType        #129:#130     // OVERRIDING_WRITE_TO_PARCEL_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #132 = Fieldref           #128.#131     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.OVERRIDING_WRITE_TO_PARCEL_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #133 = Utf8               org/jetbrains/kotlin/diagnostics/DiagnosticFactory0, +  #134 = Class              #133          // org/jetbrains/kotlin/diagnostics/DiagnosticFactory0, +  #135 = Utf8               on, +  #136 = Utf8               (Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/SimpleDiagnostic;, +  #137 = NameAndType        #135:#136     // on:(Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/SimpleDiagnostic;, +  #138 = Methodref          #134.#137     // org/jetbrains/kotlin/diagnostics/DiagnosticFactory0.on:(Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/SimpleDiagnostic;, +  #139 = Utf8               org/jetbrains/kotlin/diagnostics/Diagnostic, +  #140 = Class              #139          // org/jetbrains/kotlin/diagnostics/Diagnostic, +  #141 = Utf8               report, +  #142 = Utf8               (Lorg/jetbrains/kotlin/diagnostics/Diagnostic;)V, +  #143 = NameAndType        #141:#142     // report:(Lorg/jetbrains/kotlin/diagnostics/Diagnostic;)V, +  #144 = InterfaceMethodref #31.#143      // org/jetbrains/kotlin/diagnostics/DiagnosticSink.report:(Lorg/jetbrains/kotlin/diagnostics/Diagnostic;)V, +  #145 = Utf8               reportElement, +  #146 = Utf8               Lcom/intellij/psi/PsiElement;, +  #147 = Utf8               method, +  #148 = Utf8               Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, +  #149 = Utf8               diagnosticHolder, +  #150 = Utf8               Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;, +  #151 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1, +  #152 = Class              #151          // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1, +  #153 = Utf8               <init>, +  #154 = Utf8               (Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)V, +  #155 = NameAndType        #153:#154     // "<init>":(Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)V, +  #156 = Methodref          #152.#155     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1."<init>":(Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)V, +  #157 = Utf8               hasDelegate, +  #158 = Utf8               ()Z, +  #159 = NameAndType        #157:#158     // hasDelegate:()Z, +  #160 = Methodref          #67.#159      // org/jetbrains/kotlin/psi/KtProperty.hasDelegate:()Z, +  #161 = Utf8               org/jetbrains/kotlin/resolve/BindingContext, +  #162 = Class              #161          // org/jetbrains/kotlin/resolve/BindingContext, +  #163 = Utf8               BACKING_FIELD_REQUIRED, +  #164 = Utf8               Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, +  #165 = NameAndType        #163:#164     // BACKING_FIELD_REQUIRED:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, +  #166 = Fieldref           #162.#165     // org/jetbrains/kotlin/resolve/BindingContext.BACKING_FIELD_REQUIRED:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, +  #167 = Utf8               org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice, +  #168 = Class              #167          // org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice, +  #169 = Utf8               get, +  #170 = Utf8               (Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;, +  #171 = NameAndType        #169:#170     // get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;, +  #172 = InterfaceMethodref #162.#171     // org/jetbrains/kotlin/resolve/BindingContext.get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;, +  #173 = Utf8               java/lang/Boolean, +  #174 = Class              #173          // java/lang/Boolean, +  #175 = Utf8               valueOf, +  #176 = Utf8               (Z)Ljava/lang/Boolean;, +  #177 = NameAndType        #175:#176     // valueOf:(Z)Ljava/lang/Boolean;, +  #178 = Methodref          #174.#177     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;, +  #179 = Utf8               areEqual, +  #180 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z, +  #181 = NameAndType        #179:#180     // areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z, +  #182 = Methodref          #13.#181      // kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z, +  #183 = Utf8               invoke, +  #184 = NameAndType        #183:#158     // invoke:()Z, +  #185 = Methodref          #152.#184     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1.invoke:()Z, +  #186 = Methodref          #67.#121      // org/jetbrains/kotlin/psi/KtProperty.getNameIdentifier:()Lcom/intellij/psi/PsiElement;, +  #187 = Utf8               declaration.nameIdentifier ?: declaration, +  #188 = String             #187          // declaration.nameIdentifier ?: declaration, +  #189 = Utf8               PROPERTY_WONT_BE_SERIALIZED, +  #190 = NameAndType        #189:#130     // PROPERTY_WONT_BE_SERIALIZED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #191 = Fieldref           #128.#190     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PROPERTY_WONT_BE_SERIALIZED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #192 = Utf8               getName, +  #193 = Utf8               ()Lorg/jetbrains/kotlin/name/Name;, +  #194 = NameAndType        #192:#193     // getName:()Lorg/jetbrains/kotlin/name/Name;, +  #195 = InterfaceMethodref #64.#194      // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getName:()Lorg/jetbrains/kotlin/name/Name;, +  #196 = Utf8               org/jetbrains/kotlin/name/Name, +  #197 = Class              #196          // org/jetbrains/kotlin/name/Name, +  #198 = Utf8               asString, +  #199 = Utf8               ()Ljava/lang/String;, +  #200 = NameAndType        #198:#199     // asString:()Ljava/lang/String;, +  #201 = Methodref          #197.#200     // org/jetbrains/kotlin/name/Name.asString:()Ljava/lang/String;, +  #202 = Utf8               CREATOR, +  #203 = String             #202          // CREATOR, +  #204 = Utf8               org/jetbrains/kotlin/resolve/jvm/annotations/JvmAnnotationUtilKt, +  #205 = Class              #204          // org/jetbrains/kotlin/resolve/jvm/annotations/JvmAnnotationUtilKt, +  #206 = Utf8               findJvmFieldAnnotation, +  #207 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;, +  #208 = NameAndType        #206:#207     // findJvmFieldAnnotation:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;, +  #209 = Methodref          #205.#208     // org/jetbrains/kotlin/resolve/jvm/annotations/JvmAnnotationUtilKt.findJvmFieldAnnotation:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;, +  #210 = Utf8               isCompanionObject, +  #211 = NameAndType        #210:#158     // isCompanionObject:()Z, +  #212 = InterfaceMethodref #29.#211      // org/jetbrains/kotlin/descriptors/ClassDescriptor.isCompanionObject:()Z, +  #213 = InterfaceMethodref #29.#55       // org/jetbrains/kotlin/descriptors/ClassDescriptor.getContainingDeclaration:()Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;, +  #214 = Utf8               CREATOR_DEFINITION_IS_NOT_ALLOWED, +  #215 = NameAndType        #214:#130     // CREATOR_DEFINITION_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #216 = Fieldref           #128.#215     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.CREATOR_DEFINITION_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #217 = Utf8               outerClass, +  #218 = Utf8               $fun$hasIgnoredOnParcel$1, +  #219 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1;, +  #220 = Utf8               property, +  #221 = Utf8               Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;, +  #222 = Utf8               bindingContext, +  #223 = Utf8               Lorg/jetbrains/kotlin/resolve/BindingContext;, +  #224 = Utf8               org/jetbrains/kotlin/psi/KtClassOrObject, +  #225 = Class              #224          // org/jetbrains/kotlin/psi/KtClassOrObject, +  #226 = Utf8               PARCELABLE_SHOULD_BE_CLASS, +  #227 = NameAndType        #226:#130     // PARCELABLE_SHOULD_BE_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #228 = Fieldref           #128.#227     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_SHOULD_BE_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #229 = Utf8               org/jetbrains/kotlin/psi/KtClass, +  #230 = Class              #229          // org/jetbrains/kotlin/psi/KtClass, +  #231 = Utf8               isAnnotation, +  #232 = NameAndType        #231:#158     // isAnnotation:()Z, +  #233 = Methodref          #225.#232     // org/jetbrains/kotlin/psi/KtClassOrObject.isAnnotation:()Z, +  #234 = Utf8               isInterface, +  #235 = NameAndType        #234:#158     // isInterface:()Z, +  #236 = Methodref          #230.#235     // org/jetbrains/kotlin/psi/KtClass.isInterface:()Z, +  #237 = Methodref          #230.#121     // org/jetbrains/kotlin/psi/KtClass.getNameIdentifier:()Lcom/intellij/psi/PsiElement;, +  #238 = Utf8               getCompanionObjects, +  #239 = Utf8               ()Ljava/util/List;, +  #240 = NameAndType        #238:#239     // getCompanionObjects:()Ljava/util/List;, +  #241 = Methodref          #225.#240     // org/jetbrains/kotlin/psi/KtClassOrObject.getCompanionObjects:()Ljava/util/List;, +  #242 = Utf8               java/util/List, +  #243 = Class              #242          // java/util/List, +  #244 = Utf8               iterator, +  #245 = Utf8               ()Ljava/util/Iterator;, +  #246 = NameAndType        #244:#245     // iterator:()Ljava/util/Iterator;, +  #247 = InterfaceMethodref #243.#246     // java/util/List.iterator:()Ljava/util/Iterator;, +  #248 = Utf8               java/util/Iterator, +  #249 = Class              #248          // java/util/Iterator, +  #250 = Utf8               hasNext, +  #251 = NameAndType        #250:#158     // hasNext:()Z, +  #252 = InterfaceMethodref #249.#251     // java/util/Iterator.hasNext:()Z, +  #253 = Utf8               next, +  #254 = Utf8               ()Ljava/lang/Object;, +  #255 = NameAndType        #253:#254     // next:()Ljava/lang/Object;, +  #256 = InterfaceMethodref #249.#255     // java/util/Iterator.next:()Ljava/lang/Object;, +  #257 = Utf8               org/jetbrains/kotlin/psi/KtObjectDeclaration, +  #258 = Class              #257          // org/jetbrains/kotlin/psi/KtObjectDeclaration, +  #259 = Utf8               companion, +  #260 = String             #259          // companion, +  #261 = NameAndType        #192:#199     // getName:()Ljava/lang/String;, +  #262 = Methodref          #258.#261     // org/jetbrains/kotlin/psi/KtObjectDeclaration.getName:()Ljava/lang/String;, +  #263 = Methodref          #258.#121     // org/jetbrains/kotlin/psi/KtObjectDeclaration.getNameIdentifier:()Lcom/intellij/psi/PsiElement;, +  #264 = Methodref          #225.#111     // org/jetbrains/kotlin/psi/KtClassOrObject.getModifierList:()Lorg/jetbrains/kotlin/psi/KtModifierList;, +  #265 = Utf8               ABSTRACT_KEYWORD, +  #266 = NameAndType        #265:#102     // ABSTRACT_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;, +  #267 = Fieldref           #100.#266     // org/jetbrains/kotlin/lexer/KtTokens.ABSTRACT_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;, +  #268 = Utf8               SEALED_KEYWORD, +  #269 = NameAndType        #268:#102     // SEALED_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;, +  #270 = Fieldref           #100.#269     // org/jetbrains/kotlin/lexer/KtTokens.SEALED_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;, +  #271 = Utf8               PARCELABLE_SHOULD_BE_INSTANTIABLE, +  #272 = NameAndType        #271:#130     // PARCELABLE_SHOULD_BE_INSTANTIABLE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #273 = Fieldref           #128.#272     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_SHOULD_BE_INSTANTIABLE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #274 = Utf8               isInner, +  #275 = NameAndType        #274:#158     // isInner:()Z, +  #276 = Methodref          #230.#275     // org/jetbrains/kotlin/psi/KtClass.isInner:()Z, +  #277 = Methodref          #230.#111     // org/jetbrains/kotlin/psi/KtClass.getModifierList:()Lorg/jetbrains/kotlin/psi/KtModifierList;, +  #278 = Utf8               INNER_KEYWORD, +  #279 = NameAndType        #278:#102     // INNER_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;, +  #280 = Fieldref           #100.#279     // org/jetbrains/kotlin/lexer/KtTokens.INNER_KEYWORD:Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;, +  #281 = Utf8               PARCELABLE_CANT_BE_INNER_CLASS, +  #282 = NameAndType        #281:#130     // PARCELABLE_CANT_BE_INNER_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #283 = Fieldref           #128.#282     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_CANT_BE_INNER_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #284 = Utf8               isLocal, +  #285 = NameAndType        #284:#158     // isLocal:()Z, +  #286 = Methodref          #225.#285     // org/jetbrains/kotlin/psi/KtClassOrObject.isLocal:()Z, +  #287 = Methodref          #225.#121     // org/jetbrains/kotlin/psi/KtClassOrObject.getNameIdentifier:()Lcom/intellij/psi/PsiElement;, +  #288 = Utf8               PARCELABLE_CANT_BE_LOCAL_CLASS, +  #289 = NameAndType        #288:#130     // PARCELABLE_CANT_BE_LOCAL_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #290 = Fieldref           #128.#289     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_CANT_BE_LOCAL_CLASS:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #291 = Utf8               getDefaultType, +  #292 = Utf8               ()Lorg/jetbrains/kotlin/types/SimpleType;, +  #293 = NameAndType        #291:#292     // getDefaultType:()Lorg/jetbrains/kotlin/types/SimpleType;, +  #294 = InterfaceMethodref #29.#293      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getDefaultType:()Lorg/jetbrains/kotlin/types/SimpleType;, +  #295 = Utf8               org/jetbrains/kotlin/types/KotlinType, +  #296 = Class              #295          // org/jetbrains/kotlin/types/KotlinType, +  #297 = Utf8               org/jetbrains/kotlin/types/TypeUtils, +  #298 = Class              #297          // org/jetbrains/kotlin/types/TypeUtils, +  #299 = Utf8               getAllSupertypes, +  #300 = Utf8               (Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;, +  #301 = NameAndType        #299:#300     // getAllSupertypes:(Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;, +  #302 = Methodref          #298.#301     // org/jetbrains/kotlin/types/TypeUtils.getAllSupertypes:(Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;, +  #303 = Utf8               TypeUtils.getAllSupertypes(descriptor.defaultType), +  #304 = String             #303          // TypeUtils.getAllSupertypes(descriptor.defaultType), +  #305 = Utf8               java/lang/Iterable, +  #306 = Class              #305          // java/lang/Iterable, +  #307 = Utf8               java/util/Collection, +  #308 = Class              #307          // java/util/Collection, +  #309 = Utf8               isEmpty, +  #310 = NameAndType        #309:#158     // isEmpty:()Z, +  #311 = InterfaceMethodref #308.#310     // java/util/Collection.isEmpty:()Z, +  #312 = InterfaceMethodref #306.#246     // java/lang/Iterable.iterator:()Ljava/util/Iterator;, +  #313 = Utf8               getConstructor, +  #314 = Utf8               ()Lorg/jetbrains/kotlin/types/TypeConstructor;, +  #315 = NameAndType        #313:#314     // getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;, +  #316 = Methodref          #296.#315     // org/jetbrains/kotlin/types/KotlinType.getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;, +  #317 = Utf8               org/jetbrains/kotlin/types/TypeConstructor, +  #318 = Class              #317          // org/jetbrains/kotlin/types/TypeConstructor, +  #319 = Utf8               getDeclarationDescriptor, +  #320 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, +  #321 = NameAndType        #319:#320     // getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, +  #322 = InterfaceMethodref #318.#321     // org/jetbrains/kotlin/types/TypeConstructor.getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, +  #323 = Utf8               org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt, +  #324 = Class              #323          // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt, +  #325 = Utf8               getFqNameSafe, +  #326 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;, +  #327 = NameAndType        #325:#326     // getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;, +  #328 = Methodref          #324.#327     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;, +  #329 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableDeclarationCheckerKt, +  #330 = Class              #329          // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationCheckerKt, +  #331 = Utf8               getANDROID_PARCELABLE_CLASS_FQNAME, +  #332 = Utf8               ()Lorg/jetbrains/kotlin/name/FqName;, +  #333 = NameAndType        #331:#332     // getANDROID_PARCELABLE_CLASS_FQNAME:()Lorg/jetbrains/kotlin/name/FqName;, +  #334 = Methodref          #330.#333     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationCheckerKt.getANDROID_PARCELABLE_CLASS_FQNAME:()Lorg/jetbrains/kotlin/name/FqName;, +  #335 = Utf8               NO_PARCELABLE_SUPERTYPE, +  #336 = NameAndType        #335:#130     // NO_PARCELABLE_SUPERTYPE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #337 = Fieldref           #128.#336     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.NO_PARCELABLE_SUPERTYPE:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #338 = Utf8               getSuperTypeListEntries, +  #339 = NameAndType        #338:#239     // getSuperTypeListEntries:()Ljava/util/List;, +  #340 = Methodref          #225.#339     // org/jetbrains/kotlin/psi/KtClassOrObject.getSuperTypeListEntries:()Ljava/util/List;, +  #341 = Utf8               org/jetbrains/kotlin/psi/KtSuperTypeListEntry, +  #342 = Class              #341          // org/jetbrains/kotlin/psi/KtSuperTypeListEntry, +  #343 = Utf8               org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry, +  #344 = Class              #343          // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry, +  #345 = Utf8               getDelegateExpression, +  #346 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtExpression;, +  #347 = NameAndType        #345:#346     // getDelegateExpression:()Lorg/jetbrains/kotlin/psi/KtExpression;, +  #348 = Methodref          #344.#347     // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry.getDelegateExpression:()Lorg/jetbrains/kotlin/psi/KtExpression;, +  #349 = Utf8               supertypeEntry.delegateExpression ?: continue, +  #350 = String             #349          // supertypeEntry.delegateExpression ?: continue, +  #351 = Utf8               TYPE, +  #352 = NameAndType        #351:#164     // TYPE:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, +  #353 = Fieldref           #162.#352     // org/jetbrains/kotlin/resolve/BindingContext.TYPE:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, +  #354 = Utf8               getTypeReference, +  #355 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtTypeReference;, +  #356 = NameAndType        #354:#355     // getTypeReference:()Lorg/jetbrains/kotlin/psi/KtTypeReference;, +  #357 = Methodref          #344.#356     // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry.getTypeReference:()Lorg/jetbrains/kotlin/psi/KtTypeReference;, +  #358 = Utf8               bindingContext[BindingCo…ypeReference] ?: continue, +  #359 = String             #358          // bindingContext[BindingCo…ypeReference] ?: continue, +  #360 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializerKt, +  #361 = Class              #360          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializerKt, +  #362 = Utf8               isParcelable, +  #363 = Utf8               (Lorg/jetbrains/kotlin/types/KotlinType;)Z, +  #364 = NameAndType        #362:#363     // isParcelable:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, +  #365 = Methodref          #361.#364     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializerKt.isParcelable:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, +  #366 = Utf8               getByKeywordNode, +  #367 = Utf8               ()Lcom/intellij/lang/ASTNode;, +  #368 = NameAndType        #366:#367     // getByKeywordNode:()Lcom/intellij/lang/ASTNode;, +  #369 = Methodref          #344.#368     // org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry.getByKeywordNode:()Lcom/intellij/lang/ASTNode;, +  #370 = Utf8               com/intellij/lang/ASTNode, +  #371 = Class              #370          // com/intellij/lang/ASTNode, +  #372 = Utf8               getPsi, +  #373 = NameAndType        #372:#120     // getPsi:()Lcom/intellij/psi/PsiElement;, +  #374 = InterfaceMethodref #371.#373     // com/intellij/lang/ASTNode.getPsi:()Lcom/intellij/psi/PsiElement;, +  #375 = Utf8               PARCELABLE_DELEGATE_IS_NOT_ALLOWED, +  #376 = NameAndType        #375:#130     // PARCELABLE_DELEGATE_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #377 = Fieldref           #128.#376     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_DELEGATE_IS_NOT_ALLOWED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #378 = Utf8               getPrimaryConstructor, +  #379 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;, +  #380 = NameAndType        #378:#379     // getPrimaryConstructor:()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;, +  #381 = Methodref          #225.#380     // org/jetbrains/kotlin/psi/KtClassOrObject.getPrimaryConstructor:()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;, +  #382 = Utf8               getSecondaryConstructors, +  #383 = NameAndType        #382:#239     // getSecondaryConstructors:()Ljava/util/List;, +  #384 = Methodref          #225.#383     // org/jetbrains/kotlin/psi/KtClassOrObject.getSecondaryConstructors:()Ljava/util/List;, +  #385 = Utf8               PARCELABLE_SHOULD_HAVE_PRIMARY_CONSTRUCTOR, +  #386 = NameAndType        #385:#130     // PARCELABLE_SHOULD_HAVE_PRIMARY_CONSTRUCTOR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #387 = Fieldref           #128.#386     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_SHOULD_HAVE_PRIMARY_CONSTRUCTOR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #388 = Utf8               org/jetbrains/kotlin/psi/KtPrimaryConstructor, +  #389 = Class              #388          // org/jetbrains/kotlin/psi/KtPrimaryConstructor, +  #390 = Utf8               getValueParameters, +  #391 = NameAndType        #390:#239     // getValueParameters:()Ljava/util/List;, +  #392 = Methodref          #389.#391     // org/jetbrains/kotlin/psi/KtPrimaryConstructor.getValueParameters:()Ljava/util/List;, +  #393 = InterfaceMethodref #243.#310     // java/util/List.isEmpty:()Z, +  #394 = Utf8               PARCELABLE_PRIMARY_CONSTRUCTOR_IS_EMPTY, +  #395 = NameAndType        #394:#130     // PARCELABLE_PRIMARY_CONSTRUCTOR_IS_EMPTY:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #396 = Fieldref           #128.#395     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_PRIMARY_CONSTRUCTOR_IS_EMPTY:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #397 = Utf8               org/jetbrains/kotlin/codegen/state/KotlinTypeMapper, +  #398 = Class              #397          // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper, +  #399 = Utf8               org/jetbrains/kotlin/codegen/ClassBuilderMode, +  #400 = Class              #399          // org/jetbrains/kotlin/codegen/ClassBuilderMode, +  #401 = Utf8               FULL, +  #402 = Utf8               Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;, +  #403 = NameAndType        #401:#402     // FULL:Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;, +  #404 = Fieldref           #400.#403     // org/jetbrains/kotlin/codegen/ClassBuilderMode.FULL:Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;, +  #405 = Utf8               ClassBuilderMode.FULL, +  #406 = String             #405          // ClassBuilderMode.FULL, +  #407 = Utf8               getModule, +  #408 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;, +  #409 = NameAndType        #407:#408     // getModule:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;, +  #410 = Methodref          #324.#409     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getModule:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;, +  #411 = Utf8               org/jetbrains/kotlin/descriptors/ModuleDescriptor, +  #412 = Class              #411          // org/jetbrains/kotlin/descriptors/ModuleDescriptor, +  #413 = InterfaceMethodref #412.#194     // org/jetbrains/kotlin/descriptors/ModuleDescriptor.getName:()Lorg/jetbrains/kotlin/name/Name;, +  #414 = Utf8               descriptor.module.name.asString(), +  #415 = String             #414          // descriptor.module.name.asString(), +  #416 = Utf8               (Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;Ljava/lang/String;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/codegen/state/IncompatibleClassTracker;Lorg/jetbrains/kotlin/config/JvmTarget;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V, +  #417 = NameAndType        #153:#416     // "<init>":(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;Ljava/lang/String;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/codegen/state/IncompatibleClassTracker;Lorg/jetbrains/kotlin/config/JvmTarget;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V, +  #418 = Methodref          #398.#417     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper."<init>":(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/codegen/ClassBuilderMode;Ljava/lang/String;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/codegen/state/IncompatibleClassTracker;Lorg/jetbrains/kotlin/config/JvmTarget;ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V, +  #419 = Utf8               kotlin/collections/CollectionsKt, +  #420 = Class              #419          // kotlin/collections/CollectionsKt, +  #421 = Utf8               emptyList, +  #422 = NameAndType        #421:#239     // emptyList:()Ljava/util/List;, +  #423 = Methodref          #420.#422     // kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;, +  #424 = Utf8               org/jetbrains/kotlin/psi/KtParameter, +  #425 = Class              #424          // org/jetbrains/kotlin/psi/KtParameter, +  #426 = Utf8               (Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;)V, +  #427 = NameAndType        #68:#426      // checkParcelableClassProperty:(Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;)V, +  #428 = Methodref          #2.#427       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.checkParcelableClassProperty:(Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/diagnostics/DiagnosticSink;Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;)V, +  #429 = Utf8               Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;, +  #430 = Utf8               it, +  #431 = Utf8               Lorg/jetbrains/kotlin/psi/KtModifierList;, +  #432 = Utf8               $i$a$-let-ParcelableDeclarationChecker$checkParcelableClass$sealedOrAbstract$1, +  #433 = Utf8               I, +  #434 = Utf8               Lorg/jetbrains/kotlin/types/KotlinType;, +  #435 = Utf8               $i$a$-none-ParcelableDeclarationChecker$checkParcelableClass$1, +  #436 = Utf8               element$iv, +  #437 = Utf8               Ljava/lang/Object;, +  #438 = Utf8               $this$none$iv, +  #439 = Utf8               Ljava/lang/Iterable;, +  #440 = Utf8               $i$f$none, +  #441 = Utf8               type, +  #442 = Utf8               delegateExpression, +  #443 = Utf8               Lorg/jetbrains/kotlin/psi/KtExpression;, +  #444 = Utf8               supertypeEntry, +  #445 = Utf8               Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;, +  #446 = Utf8               parameter, +  #447 = Utf8               Lorg/jetbrains/kotlin/psi/KtParameter;, +  #448 = Utf8               typeMapper, +  #449 = Utf8               Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;, +  #450 = Utf8               primaryConstructor, +  #451 = Utf8               Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;, +  #452 = Utf8               superTypes, +  #453 = Utf8               Ljava/util/Set;, +  #454 = Utf8               sealedOrAbstract, +  #455 = Utf8               languageVersionSettings, +  #456 = Utf8               Lorg/jetbrains/kotlin/config/LanguageVersionSettings;, +  #457 = Utf8               org/jetbrains/kotlin/config/LanguageVersionSettings, +  #458 = Class              #457          // org/jetbrains/kotlin/config/LanguageVersionSettings, +  #459 = Utf8               java/util/Set, +  #460 = Class              #459          // java/util/Set, +  #461 = Utf8               org/jetbrains/kotlin/descriptors/ClassifierDescriptor, +  #462 = Class              #461          // org/jetbrains/kotlin/descriptors/ClassifierDescriptor, +  #463 = Utf8               org/jetbrains/kotlin/name/FqName, +  #464 = Class              #463          // org/jetbrains/kotlin/name/FqName, +  #465 = Utf8               org/jetbrains/kotlin/psi/KtExpression, +  #466 = Class              #465          // org/jetbrains/kotlin/psi/KtExpression, +  #467 = Utf8               java/lang/IllegalArgumentException, +  #468 = Class              #467          // java/lang/IllegalArgumentException, +  #469 = Utf8               hasValOrVar, +  #470 = NameAndType        #469:#158     // hasValOrVar:()Z, +  #471 = Methodref          #425.#470     // org/jetbrains/kotlin/psi/KtParameter.hasValOrVar:()Z, +  #472 = Methodref          #425.#121     // org/jetbrains/kotlin/psi/KtParameter.getNameIdentifier:()Lcom/intellij/psi/PsiElement;, +  #473 = Utf8               parameter.nameIdentifier ?: parameter, +  #474 = String             #473          // parameter.nameIdentifier ?: parameter, +  #475 = Utf8               PARCELABLE_CONSTRUCTOR_PARAMETER_SHOULD_BE_VAL_OR_VAR, +  #476 = NameAndType        #475:#130     // PARCELABLE_CONSTRUCTOR_PARAMETER_SHOULD_BE_VAL_OR_VAR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #477 = Fieldref           #128.#476     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_CONSTRUCTOR_PARAMETER_SHOULD_BE_VAL_OR_VAR:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #478 = Methodref          #398.#36      // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.getBindingContext:()Lorg/jetbrains/kotlin/resolve/BindingContext;, +  #479 = Utf8               PRIMARY_CONSTRUCTOR_PARAMETER, +  #480 = NameAndType        #479:#164     // PRIMARY_CONSTRUCTOR_PARAMETER:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, +  #481 = Fieldref           #162.#480     // org/jetbrains/kotlin/resolve/BindingContext.PRIMARY_CONSTRUCTOR_PARAMETER:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, +  #482 = Utf8               typeMapper.bindingContex…TER, parameter] ?: return, +  #483 = String             #482          // typeMapper.bindingContex…TER, parameter] ?: return, +  #484 = Utf8               getType, +  #485 = Utf8               ()Lorg/jetbrains/kotlin/types/KotlinType;, +  #486 = NameAndType        #484:#485     // getType:()Lorg/jetbrains/kotlin/types/KotlinType;, +  #487 = InterfaceMethodref #64.#486      // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getType:()Lorg/jetbrains/kotlin/types/KotlinType;, +  #488 = Utf8               descriptor.type, +  #489 = String             #488          // descriptor.type, +  #490 = Utf8               org/jetbrains/kotlin/types/KotlinTypeKt, +  #491 = Class              #490          // org/jetbrains/kotlin/types/KotlinTypeKt, +  #492 = Utf8               isError, +  #493 = NameAndType        #492:#363     // isError:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, +  #494 = Methodref          #491.#493     // org/jetbrains/kotlin/types/KotlinTypeKt.isError:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, +  #495 = Utf8               hasCustomParceler, +  #496 = NameAndType        #495:#92      // hasCustomParceler:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +  #497 = Methodref          #2.#496       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.hasCustomParceler:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +  #498 = Utf8               mapType$default, +  #499 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;, +  #500 = NameAndType        #498:#499     // mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;, +  #501 = Methodref          #398.#500     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;, +  #502 = Utf8               getAnnotations, +  #503 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, +  #504 = NameAndType        #502:#503     // getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, +  #505 = InterfaceMethodref #64.#504      // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, +  #506 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt, +  #507 = Class              #506          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt, +  #508 = Utf8               getTypeParcelers, +  #509 = Utf8               (Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;, +  #510 = NameAndType        #508:#509     // getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;, +  #511 = Methodref          #507.#510     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt.getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;, +  #512 = InterfaceMethodref #29.#504      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, +  #513 = Utf8               plus, +  #514 = Utf8               (Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;, +  #515 = NameAndType        #513:#514     // plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;, +  #516 = Methodref          #420.#515     // kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;, +  #517 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext, +  #518 = Class              #517          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext, +  #519 = Utf8               containerClass.defaultType, +  #520 = String             #519          // containerClass.defaultType, +  #521 = Utf8               org/jetbrains/kotlin/codegen/FrameMap, +  #522 = Class              #521          // org/jetbrains/kotlin/codegen/FrameMap, +  #523 = Utf8               ()V, +  #524 = NameAndType        #153:#523     // "<init>":()V, +  #525 = Methodref          #522.#524     // org/jetbrains/kotlin/codegen/FrameMap."<init>":()V, +  #526 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/org/objectweb/asm/Type;Ljava/util/List;Lorg/jetbrains/kotlin/codegen/FrameMap;)V, +  #527 = NameAndType        #153:#526     // "<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/org/objectweb/asm/Type;Ljava/util/List;Lorg/jetbrains/kotlin/codegen/FrameMap;)V, +  #528 = Methodref          #518.#527     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext."<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/org/objectweb/asm/Type;Ljava/util/List;Lorg/jetbrains/kotlin/codegen/FrameMap;)V, +  #529 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer, +  #530 = Class              #529          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer, +  #531 = Utf8               Companion, +  #532 = Utf8               Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;, +  #533 = NameAndType        #531:#532     // Companion:Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;, +  #534 = Fieldref           #530.#533     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer.Companion:Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;, +  #535 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion, +  #536 = Class              #535          // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion, +  #537 = Utf8               get$default, +  #538 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer;, +  #539 = NameAndType        #537:#538     // get$default:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer;, +  #540 = Methodref          #536.#539     // org/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion.get$default:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$Companion;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer;, +  #541 = Methodref          #425.#356     // org/jetbrains/kotlin/psi/KtParameter.getTypeReference:()Lorg/jetbrains/kotlin/psi/KtTypeReference;, +  #542 = Utf8               parameter.typeReference …meIdentifier ?: parameter, +  #543 = String             #542          // parameter.typeReference …meIdentifier ?: parameter, +  #544 = Utf8               PARCELABLE_TYPE_NOT_SUPPORTED, +  #545 = NameAndType        #544:#130     // PARCELABLE_TYPE_NOT_SUPPORTED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #546 = Fieldref           #128.#545     // org/jetbrains/kotlin/android/synthetic/diagnostic/ErrorsAndroid.PARCELABLE_TYPE_NOT_SUPPORTED:Lorg/jetbrains/kotlin/diagnostics/DiagnosticFactory0;, +  #547 = Utf8               Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelSerializer$ParcelSerializerContext;, +  #548 = Utf8               parcelers, +  #549 = Utf8               Ljava/util/List;, +  #550 = Utf8               e, +  #551 = Utf8               Ljava/lang/IllegalArgumentException;, +  #552 = Utf8               asmType, +  #553 = Utf8               Lorg/jetbrains/org/objectweb/asm/Type;, +  #554 = Utf8               containerClass, +  #555 = Utf8               org/jetbrains/org/objectweb/asm/Type, +  #556 = Class              #555          // org/jetbrains/org/objectweb/asm/Type, +  #557 = Utf8               org/jetbrains/kotlin/psi/KtTypeReference, +  #558 = Class              #557          // org/jetbrains/kotlin/psi/KtTypeReference, +  #559 = Utf8               getCompanionObjectDescriptor, +  #560 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;, +  #561 = NameAndType        #559:#560     // getCompanionObjectDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;, +  #562 = InterfaceMethodref #29.#561      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getCompanionObjectDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;, +  #563 = String             #430          // it, +  #564 = Utf8               companionObjectDescripto…ltType) } ?: return false, +  #565 = String             #564          // companionObjectDescripto…ltType) } ?: return false, +  #566 = Utf8               isParceler, +  #567 = NameAndType        #566:#363     // isParceler:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, +  #568 = Methodref          #90.#567      // org/jetbrains/kotlin/android/parcel/ParcelableResolveExtensionKt.isParceler:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, +  #569 = Utf8               $i$a$-let-ParcelableDeclarationChecker$hasCustomParceler$companionObjectSuperTypes$1, +  #570 = Utf8               $i$a$-any-ParcelableDeclarationChecker$hasCustomParceler$1, +  #571 = Utf8               $this$any$iv, +  #572 = Utf8               $i$f$any, +  #573 = Utf8               companionObjectSuperTypes, +  #574 = Utf8               $this$hasCustomParceler, +  #575 = Methodref          #4.#524       // java/lang/Object."<init>":()V, +  #576 = Utf8               IGNORED_ON_PARCEL_FQNAME, +  #577 = Utf8               Lorg/jetbrains/kotlin/name/FqName;, +  #578 = Utf8               <clinit>, +  #579 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;, +  #580 = Utf8               access$getIGNORED_ON_PARCEL_FQNAME$cp, +  #581 = NameAndType        #576:#577     // IGNORED_ON_PARCEL_FQNAME:Lorg/jetbrains/kotlin/name/FqName;, +  #582 = Fieldref           #2.#581       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.IGNORED_ON_PARCEL_FQNAME:Lorg/jetbrains/kotlin/name/FqName;, +  #583 = Utf8               access$Companion, +  #584 = Utf8               ()Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;, +  #585 = NameAndType        #531:#579     // Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;, +  #586 = Fieldref           #2.#585       // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker.Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;, +  #587 = Utf8               Lkotlin/Metadata;, +  #588 = Utf8               mv, +  #589 = Integer            1, +  #590 = Integer            4, +  #591 = Integer            0, +  #592 = Utf8               bv, +  #593 = Integer            3, +  #594 = Utf8               k, +  #595 = Utf8               xi, +  #596 = Integer            2, +  #597 = Utf8               d1, +  #598 = Utf8                l\n\n\n\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n\n\n \n\n\n\n\n \n\n\n\n \n\n  #20:#B¢J 020202\t0\nHJ0020202\r02020HJ(02020202\r0HJ002020202\r020HJ(020202\r020 HJ!0\"*0H¨$, +  #599 = Utf8               d2, +  #600 = Utf8               Lorg/jetbrains/kotlin/resolve/checkers/DeclarationChecker;, +  #601 = Utf8, +  #602 = Utf8               android-extensions-compiler, +  #603 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion, +  #604 = Class              #603          // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion, +  #605 = Utf8               (Lkotlin/jvm/internal/DefaultConstructorMarker;)V, +  #606 = NameAndType        #153:#605     // "<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V, +  #607 = Methodref          #604.#606     // org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V, +  #608 = Utf8               kotlinx/android/parcel/IgnoredOnParcel, +  #609 = Class              #608          // kotlinx/android/parcel/IgnoredOnParcel, +  #610 = Utf8               java/lang/Class, +  #611 = Class              #610          // java/lang/Class, +  #612 = Utf8               getCanonicalName, +  #613 = NameAndType        #612:#199     // getCanonicalName:()Ljava/lang/String;, +  #614 = Methodref          #611.#613     // java/lang/Class.getCanonicalName:()Ljava/lang/String;, +  #615 = Utf8               (Ljava/lang/String;)V, +  #616 = NameAndType        #153:#615     // "<init>":(Ljava/lang/String;)V, +  #617 = Methodref          #464.#616     // org/jetbrains/kotlin/name/FqName."<init>":(Ljava/lang/String;)V, +  #618 = Utf8               ParcelableDeclarationChecker.kt, +  #619 = Utf8               Code, +  #620 = Utf8               StackMapTable, +  #621 = Utf8               LineNumberTable, +  #622 = Utf8               LocalVariableTable, +  #623 = Utf8               RuntimeInvisibleParameterAnnotations, +  #624 = Utf8               InnerClasses, +  #625 = Utf8               SourceFile, +  #626 = Utf8               SourceDebugExtension, +  #627 = Utf8               RuntimeVisibleAnnotations,  {,    public void check(org.jetbrains.kotlin.psi.KtDeclaration, org.jetbrains.kotlin.descriptors.DeclarationDescriptor, org.jetbrains.kotlin.resolve.checkers.DeclarationCheckerContext);,      descriptor: (Lorg/jetbrains/kotlin/psi/KtDeclaration;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/resolve/checkers/DeclarationCheckerContext;)V,      flags: ACC_PUBLIC,      Code:, @@ -799,11 +803,11 @@,      descriptor: ()V,      flags: ACC_PUBLIC,      Code:,        stack=1, locals=1, args_size=1,           0: aload_0, -         1: invokespecial #571                // Method java/lang/Object."<init>":()V, +         1: invokespecial #575                // Method java/lang/Object."<init>":()V,           4: return,        LineNumberTable:,          line 38: 0,        LocalVariableTable:,          Start  Length  Slot  Name   Signature, @@ -812,45 +816,45 @@,    static {};,      descriptor: ()V,      flags: ACC_STATIC,      Code:,        stack=3, locals=0, args_size=0, -         0: new           #600                // class org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion, +         0: new           #604                // class org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion,           3: dup,           4: aconst_null, -         5: invokespecial #603                // Method org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V, -         8: putstatic     #582                // Field Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;, -        11: new           #462                // class org/jetbrains/kotlin/name/FqName, +         5: invokespecial #607                // Method org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V, +         8: putstatic     #586                // Field Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;, +        11: new           #464                // class org/jetbrains/kotlin/name/FqName,          14: dup, -        15: ldc_w         #605                // class kotlinx/android/parcel/IgnoredOnParcel, -        18: invokevirtual #610                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;, -        21: invokespecial #613                // Method org/jetbrains/kotlin/name/FqName."<init>":(Ljava/lang/String;)V, -        24: putstatic     #578                // Field IGNORED_ON_PARCEL_FQNAME:Lorg/jetbrains/kotlin/name/FqName;, +        15: ldc_w         #609                // class kotlinx/android/parcel/IgnoredOnParcel, +        18: invokevirtual #614                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;, +        21: invokespecial #617                // Method org/jetbrains/kotlin/name/FqName."<init>":(Ljava/lang/String;)V, +        24: putstatic     #582                // Field IGNORED_ON_PARCEL_FQNAME:Lorg/jetbrains/kotlin/name/FqName;,          27: return,        LineNumberTable:,          line 41: 11,  ,    public static final org.jetbrains.kotlin.name.FqName access$getIGNORED_ON_PARCEL_FQNAME$cp();,      descriptor: ()Lorg/jetbrains/kotlin/name/FqName;,      flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC,      Code:,        stack=1, locals=0, args_size=0, -         0: getstatic     #578                // Field IGNORED_ON_PARCEL_FQNAME:Lorg/jetbrains/kotlin/name/FqName;, +         0: getstatic     #582                // Field IGNORED_ON_PARCEL_FQNAME:Lorg/jetbrains/kotlin/name/FqName;,           3: areturn,        LineNumberTable:,          line 38: 0,  ,    public static final org.jetbrains.kotlin.android.parcel.ParcelableDeclarationChecker$Companion access$Companion();,      descriptor: ()Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;,      flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC,      Code:,        stack=1, locals=0, args_size=0, -         0: getstatic     #582                // Field Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;, +         0: getstatic     #586                // Field Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$Companion;,           3: areturn,  },  InnerClasses:, -     static final #150; //class org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1, +     static final #152; //class org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker$checkParcelableClassProperty$1,  SourceFile: "ParcelableDeclarationChecker.kt",  SourceDebugExtension:,    SMAP,    ParcelableDeclarationChecker.kt,    Kotlin, @@ -860,19 +864,19 @@,    org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker,    + 2 _Collections.kt,    kotlin/collections/CollectionsKt___CollectionsKt,    *L,    1#1,250:1, -  1849#2,3:251, -  1552#2,3:254, +  1847#2,3:251, +  1550#2,3:254,    *E,    *S KotlinDebug,    *F,    + 1 ParcelableDeclarationChecker.kt,    org/jetbrains/kotlin/android/parcel/ParcelableDeclarationChecker,    *L,    164#1,3:251,    247#1,3:254,    *E,  RuntimeVisibleAnnotations:, -  0: #583(#584=[I#585,I#585,I#586],#587=[I#585,I#588,I#589],#590=I#585,#591=I#592,#593=[s#594],#595=[s#81,s#596,s#521,s#7,s#597,s#10,s#82,s#18,s#83,s#20,s#84,s#47,s#75,s#147,s#148,s#220,s#221,s#453,s#454,s#59,s#145,s#146,s#74,s#73,s#68,s#218,s#219,s#77,s#444,s#445,s#550,s#446,s#447,s#493,s#597,s#529,s#598]), +  0: #587(#588=[I#589,I#590,I#591],#592=[I#589,I#591,I#593],#594=I#589,#595=I#596,#597=[s#598],#599=[s#81,s#600,s#523,s#7,s#601,s#10,s#82,s#18,s#83,s#20,s#84,s#47,s#75,s#149,s#150,s#222,s#223,s#455,s#456,s#59,s#147,s#148,s#74,s#73,s#68,s#220,s#221,s#77,s#446,s#447,s#554,s#448,s#449,s#495,s#601,s#531,s#602]),  ]...
