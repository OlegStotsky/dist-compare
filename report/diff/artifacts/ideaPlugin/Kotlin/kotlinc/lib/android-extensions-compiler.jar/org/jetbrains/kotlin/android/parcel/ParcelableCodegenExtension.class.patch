--- jar:file:///Users/olegstotsky/Desktop/Code/JBSpring2020/dist-compare/compare/dist_gradle/artifacts/ideaPlugin/Kotlin/kotlinc/lib/android-extensions-compiler.jar!/org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.class
+++ jar:file:///Users/olegstotsky/Desktop/Code/JBSpring2020/dist-compare/compare/dist_jps/artifacts/ideaPlugin/Kotlin/kotlinc/lib/android-extensions-compiler.jar!/org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.class
@@ -257,637 +257,639 @@
   #251 = Utf8               org/jetbrains/kotlin/name/Name
   #252 = Class              #251          // org/jetbrains/kotlin/name/Name
   #253 = Utf8               asString
   #254 = NameAndType        #253:#180     // asString:()Ljava/lang/String;
   #255 = Methodref          #252.#254     // org/jetbrains/kotlin/name/Name.asString:()Ljava/lang/String;
-  #256 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
-  #257 = NameAndType        #183:#256     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
-  #258 = Methodref          #225.#257     // kotlin/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
-  #259 = Utf8               shortName
-  #260 = Utf8               Lorg/jetbrains/kotlin/name/Name;
-  #261 = Utf8               containerAsmType
-  #262 = Utf8               Lorg/jetbrains/org/objectweb/asm/Type;
-  #263 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Unit;
-  #264 = Utf8               typeMapper
-  #265 = Utf8               Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;
-  #266 = NameAndType        #264:#265     // typeMapper:Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;
-  #267 = Fieldref           #41.#266      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.typeMapper:Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;
-  #268 = Utf8               this.defaultType
-  #269 = String             #268          // this.defaultType
-  #270 = Utf8               org/jetbrains/kotlin/codegen/state/KotlinTypeMapper
-  #271 = Class              #270          // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper
-  #272 = Utf8               mapType$default
-  #273 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;
-  #274 = NameAndType        #272:#273     // mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;
-  #275 = Methodref          #271.#274     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;
-  #276 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind
-  #277 = Class              #276          // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind
-  #278 = Utf8               WRITE_TO_PARCEL
-  #279 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
-  #280 = NameAndType        #278:#279     // WRITE_TO_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
-  #281 = Fieldref           #277.#280     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.WRITE_TO_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
-  #282 = Utf8               findFunction
-  #283 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
-  #284 = NameAndType        #282:#283     // findFunction:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
-  #285 = Methodref          #2.#284       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.findFunction:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
-  #286 = Utf8               org/jetbrains/kotlin/descriptors/FunctionDescriptor
-  #287 = Class              #286          // org/jetbrains/kotlin/descriptors/FunctionDescriptor
-  #288 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1
-  #289 = Class              #288          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1
-  #290 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #291 = NameAndType        #183:#290     // "<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #292 = Methodref          #289.#291     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1."<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #293 = Utf8               kotlin/jvm/functions/Function1
-  #294 = Class              #293          // kotlin/jvm/functions/Function1
-  #295 = Utf8               write
-  #296 = Utf8               (Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1;)V
-  #297 = NameAndType        #295:#296     // write:(Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1;)V
-  #298 = Methodref          #2.#297       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.write:(Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1;)V
-  #299 = Utf8               kotlin/Unit
-  #300 = Class              #299          // kotlin/Unit
-  #301 = Utf8               INSTANCE
-  #302 = Utf8               Lkotlin/Unit;
-  #303 = NameAndType        #301:#302     // INSTANCE:Lkotlin/Unit;
-  #304 = Fieldref           #300.#303     // kotlin/Unit.INSTANCE:Lkotlin/Unit;
-  #305 = Utf8               $this$writeWriteToParcel
-  #306 = Utf8               properties
-  #307 = Utf8               parcelAsmType
-  #308 = Utf8               org/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor
-  #309 = Class              #308          // org/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor
-  #310 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;)Lkotlin/Unit;
-  #311 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize
-  #312 = Class              #311          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize
-  #313 = Utf8               getType
-  #314 = Utf8               ()Lorg/jetbrains/kotlin/types/KotlinType;
-  #315 = NameAndType        #313:#314     // getType:()Lorg/jetbrains/kotlin/types/KotlinType;
-  #316 = Methodref          #312.#315     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize.getType:()Lorg/jetbrains/kotlin/types/KotlinType;
-  #317 = Utf8               containsFileDescriptor
-  #318 = NameAndType        #317:#104     // containsFileDescriptor:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
-  #319 = Methodref          #2.#318       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.containsFileDescriptor:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
-  #320 = Utf8               DESCRIBE_CONTENTS
-  #321 = NameAndType        #320:#279     // DESCRIBE_CONTENTS:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
-  #322 = Fieldref           #277.#321     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.DESCRIBE_CONTENTS:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
-  #323 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1
-  #324 = Class              #323          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1
-  #325 = Utf8               (Z)V
-  #326 = NameAndType        #183:#325     // "<init>":(Z)V
-  #327 = Methodref          #324.#326     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1."<init>":(Z)V
-  #328 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;
-  #329 = Utf8               $i$a$-any-ParcelableCodegenExtension$writeDescribeContentsFunction$hasFileDescriptorAnywhere$1
-  #330 = Utf8               hasFileDescriptorAnywhere
-  #331 = Utf8               Z
-  #332 = Utf8               $this$writeDescribeContentsFunction
-  #333 = Utf8               getConstructor
-  #334 = Utf8               ()Lorg/jetbrains/kotlin/types/TypeConstructor;
-  #335 = NameAndType        #333:#334     // getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;
-  #336 = Methodref          #72.#335      // org/jetbrains/kotlin/types/KotlinType.getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;
-  #337 = Utf8               org/jetbrains/kotlin/types/TypeConstructor
-  #338 = Class              #337          // org/jetbrains/kotlin/types/TypeConstructor
-  #339 = Utf8               getDeclarationDescriptor
-  #340 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
-  #341 = NameAndType        #339:#340     // getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
-  #342 = InterfaceMethodref #338.#341     // org/jetbrains/kotlin/types/TypeConstructor.getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
-  #343 = Utf8               getFqNameSafe
-  #344 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;
-  #345 = NameAndType        #343:#344     // getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;
-  #346 = Methodref          #164.#345     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;
-  #347 = Utf8               FILE_DESCRIPTOR_FQNAME
-  #348 = Utf8               Lorg/jetbrains/kotlin/name/FqName;
-  #349 = NameAndType        #347:#348     // FILE_DESCRIPTOR_FQNAME:Lorg/jetbrains/kotlin/name/FqName;
-  #350 = Fieldref           #2.#349       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.FILE_DESCRIPTOR_FQNAME:Lorg/jetbrains/kotlin/name/FqName;
-  #351 = Utf8               getArguments
-  #352 = Utf8               ()Ljava/util/List;
-  #353 = NameAndType        #351:#352     // getArguments:()Ljava/util/List;
-  #354 = Methodref          #72.#353      // org/jetbrains/kotlin/types/KotlinType.getArguments:()Ljava/util/List;
-  #355 = Utf8               org/jetbrains/kotlin/types/TypeProjection
-  #356 = Class              #355          // org/jetbrains/kotlin/types/TypeProjection
-  #357 = InterfaceMethodref #356.#315     // org/jetbrains/kotlin/types/TypeProjection.getType:()Lorg/jetbrains/kotlin/types/KotlinType;
-  #358 = Utf8               it.type
-  #359 = String             #358          // it.type
-  #360 = Utf8               Lorg/jetbrains/kotlin/types/TypeProjection;
-  #361 = Utf8               $i$a$-any-ParcelableCodegenExtension$containsFileDescriptor$1
-  #362 = Utf8               declarationDescriptor
-  #363 = Utf8               Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
-  #364 = Utf8               $this$containsFileDescriptor
-  #365 = Utf8               org/jetbrains/kotlin/descriptors/ClassifierDescriptor
-  #366 = Class              #365          // org/jetbrains/kotlin/descriptors/ClassifierDescriptor
-  #367 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;
-  #368 = Utf8               getKind
-  #369 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassKind;
-  #370 = NameAndType        #368:#369     // getKind:()Lorg/jetbrains/kotlin/descriptors/ClassKind;
-  #371 = InterfaceMethodref #60.#370      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getKind:()Lorg/jetbrains/kotlin/descriptors/ClassKind;
-  #372 = Utf8               org/jetbrains/kotlin/descriptors/ClassKind
-  #373 = Class              #372          // org/jetbrains/kotlin/descriptors/ClassKind
-  #374 = Utf8               CLASS
-  #375 = Utf8               Lorg/jetbrains/kotlin/descriptors/ClassKind;
-  #376 = NameAndType        #374:#375     // CLASS:Lorg/jetbrains/kotlin/descriptors/ClassKind;
-  #377 = Fieldref           #373.#376     // org/jetbrains/kotlin/descriptors/ClassKind.CLASS:Lorg/jetbrains/kotlin/descriptors/ClassKind;
-  #378 = Utf8               kotlin/collections/CollectionsKt
-  #379 = Class              #378          // kotlin/collections/CollectionsKt
-  #380 = Utf8               emptyList
-  #381 = NameAndType        #380:#352     // emptyList:()Ljava/util/List;
-  #382 = Methodref          #379.#381     // kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
-  #383 = Utf8               getConstructors
-  #384 = Utf8               ()Ljava/util/Collection;
-  #385 = NameAndType        #383:#384     // getConstructors:()Ljava/util/Collection;
-  #386 = InterfaceMethodref #60.#385      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getConstructors:()Ljava/util/Collection;
-  #387 = Utf8               parcelableClass.constructors
-  #388 = String             #387          // parcelableClass.constructors
-  #389 = Utf8               org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor
-  #390 = Class              #389          // org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor
-  #391 = Utf8               isPrimary
-  #392 = NameAndType        #391:#35      // isPrimary:()Z
-  #393 = InterfaceMethodref #390.#392     // org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor.isPrimary:()Z
-  #394 = Utf8               getValueParameters
-  #395 = NameAndType        #394:#352     // getValueParameters:()Ljava/util/List;
-  #396 = InterfaceMethodref #390.#395     // org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor.getValueParameters:()Ljava/util/List;
-  #397 = Utf8               constructor.valueParameters
-  #398 = String             #397          // constructor.valueParameters
-  #399 = Utf8               java/util/ArrayList
-  #400 = Class              #399          // java/util/ArrayList
-  #401 = Methodref          #400.#229     // java/util/ArrayList."<init>":()V
-  #402 = Utf8               org/jetbrains/kotlin/descriptors/ValueParameterDescriptor
-  #403 = Class              #402          // org/jetbrains/kotlin/descriptors/ValueParameterDescriptor
-  #404 = Utf8               bindingContext
-  #405 = Utf8               Lorg/jetbrains/kotlin/resolve/BindingContext;
-  #406 = NameAndType        #404:#405     // bindingContext:Lorg/jetbrains/kotlin/resolve/BindingContext;
-  #407 = Fieldref           #41.#406      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.bindingContext:Lorg/jetbrains/kotlin/resolve/BindingContext;
-  #408 = Utf8               org/jetbrains/kotlin/resolve/BindingContext
-  #409 = Class              #408          // org/jetbrains/kotlin/resolve/BindingContext
-  #410 = Utf8               VALUE_PARAMETER_AS_PROPERTY
-  #411 = Utf8               Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
-  #412 = NameAndType        #410:#411     // VALUE_PARAMETER_AS_PROPERTY:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
-  #413 = Fieldref           #409.#412     // org/jetbrains/kotlin/resolve/BindingContext.VALUE_PARAMETER_AS_PROPERTY:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
-  #414 = Utf8               org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice
-  #415 = Class              #414          // org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice
-  #416 = Utf8               get
-  #417 = Utf8               (Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;
-  #418 = NameAndType        #416:#417     // get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;
-  #419 = InterfaceMethodref #409.#418     // org/jetbrains/kotlin/resolve/BindingContext.get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;
-  #420 = Utf8               org/jetbrains/kotlin/descriptors/PropertyDescriptor
-  #421 = Class              #420          // org/jetbrains/kotlin/descriptors/PropertyDescriptor
-  #422 = Utf8               add
-  #423 = Utf8               (Ljava/lang/Object;)Z
-  #424 = NameAndType        #422:#423     // add:(Ljava/lang/Object;)Z
-  #425 = InterfaceMethodref #84.#424      // java/util/Collection.add:(Ljava/lang/Object;)Z
-  #426 = Utf8               getAnnotations
-  #427 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
-  #428 = NameAndType        #426:#427     // getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
-  #429 = InterfaceMethodref #60.#428      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
-  #430 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt
-  #431 = Class              #430          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt
-  #432 = Utf8               getTypeParcelers
-  #433 = Utf8               (Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;
-  #434 = NameAndType        #432:#433     // getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;
-  #435 = Methodref          #431.#434     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt.getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;
-  #436 = Utf8               collectionSizeOrDefault
-  #437 = Utf8               (Ljava/lang/Iterable;I)I
-  #438 = NameAndType        #436:#437     // collectionSizeOrDefault:(Ljava/lang/Iterable;I)I
-  #439 = Methodref          #379.#438     // kotlin/collections/CollectionsKt.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I
-  #440 = Utf8               (I)V
-  #441 = NameAndType        #183:#440     // "<init>":(I)V
-  #442 = Methodref          #400.#441     // java/util/ArrayList."<init>":(I)V
-  #443 = InterfaceMethodref #421.#220     // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getName:()Lorg/jetbrains/kotlin/name/Name;
-  #444 = Utf8               it.name.asString()
-  #445 = String             #444          // it.name.asString()
-  #446 = InterfaceMethodref #421.#315     // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getType:()Lorg/jetbrains/kotlin/types/KotlinType;
-  #447 = InterfaceMethodref #421.#428     // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
-  #448 = Utf8               plus
-  #449 = Utf8               (Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
-  #450 = NameAndType        #448:#449     // plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
-  #451 = Methodref          #379.#450     // kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
-  #452 = Utf8               (Ljava/lang/String;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)V
-  #453 = NameAndType        #183:#452     // "<init>":(Ljava/lang/String;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)V
-  #454 = Methodref          #312.#453     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize."<init>":(Ljava/lang/String;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)V
-  #455 = Utf8               Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;
-  #456 = Utf8               $i$a$-firstOrNull-ParcelableCodegenExtension$getPropertiesToSerialize$constructor$1
-  #457 = Utf8               $this$firstOrNull$iv
-  #458 = Utf8               $i$f$firstOrNull
-  #459 = Utf8               param
-  #460 = Utf8               Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;
-  #461 = Utf8               $i$a$-mapNotNull-ParcelableCodegenExtension$getPropertiesToSerialize$propertiesToSerialize$1
-  #462 = Utf8               it$iv$iv
-  #463 = Utf8               $i$a$-let-CollectionsKt___CollectionsKt$mapNotNullTo$1$1$iv$iv
-  #464 = Utf8               element$iv$iv
-  #465 = Utf8               $i$a$-forEach-CollectionsKt___CollectionsKt$mapNotNullTo$1$iv$iv
-  #466 = Utf8               element$iv$iv$iv
-  #467 = Utf8               $this$forEach$iv$iv$iv
-  #468 = Utf8               $i$f$forEach
-  #469 = Utf8               $this$mapNotNullTo$iv$iv
-  #470 = Utf8               destination$iv$iv
-  #471 = Utf8               Ljava/util/Collection;
-  #472 = Utf8               $i$f$mapNotNullTo
-  #473 = Utf8               $this$mapNotNull$iv
-  #474 = Utf8               $i$f$mapNotNull
-  #475 = Utf8               Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;
-  #476 = Utf8               $i$a$-map-ParcelableCodegenExtension$getPropertiesToSerialize$1
-  #477 = Utf8               item$iv$iv
-  #478 = Utf8               $this$mapTo$iv$iv
-  #479 = Utf8               $i$f$mapTo
-  #480 = Utf8               $this$map$iv
-  #481 = Utf8               $i$f$map
-  #482 = Utf8               classParcelers
-  #483 = Utf8               constructor
-  #484 = Utf8               writeCreateFromParcel
-  #485 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List;)V
-  #486 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;)V
-  #487 = Utf8               mapType
-  #488 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;)Lorg/jetbrains/org/objectweb/asm/Type;
-  #489 = NameAndType        #487:#488     // mapType:(Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;)Lorg/jetbrains/org/objectweb/asm/Type;
-  #490 = Methodref          #271.#489     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.mapType:(Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;)Lorg/jetbrains/org/objectweb/asm/Type;
-  #491 = Utf8               CREATE_FROM_PARCEL
-  #492 = NameAndType        #491:#279     // CREATE_FROM_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
-  #493 = Fieldref           #277.#492     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.CREATE_FROM_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
-  #494 = Utf8               org/jetbrains/kotlin/descriptors/Modality
-  #495 = Class              #494          // org/jetbrains/kotlin/descriptors/Modality
-  #496 = Utf8               FINAL
-  #497 = Utf8               Lorg/jetbrains/kotlin/descriptors/Modality;
-  #498 = NameAndType        #496:#497     // FINAL:Lorg/jetbrains/kotlin/descriptors/Modality;
-  #499 = Fieldref           #495.#498     // org/jetbrains/kotlin/descriptors/Modality.FINAL:Lorg/jetbrains/kotlin/descriptors/Modality;
-  #500 = Utf8               getBuiltIns
-  #501 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;
-  #502 = NameAndType        #500:#501     // getBuiltIns:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;
-  #503 = Methodref          #164.#502     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getBuiltIns:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;
-  #504 = Utf8               org/jetbrains/kotlin/builtins/KotlinBuiltIns
-  #505 = Class              #504          // org/jetbrains/kotlin/builtins/KotlinBuiltIns
-  #506 = Utf8               getAnyType
-  #507 = NameAndType        #506:#68      // getAnyType:()Lorg/jetbrains/kotlin/types/SimpleType;
-  #508 = Methodref          #505.#507     // org/jetbrains/kotlin/builtins/KotlinBuiltIns.getAnyType:()Lorg/jetbrains/kotlin/types/SimpleType;
-  #509 = Utf8               parcelableClass.builtIns.anyType
-  #510 = String             #509          // parcelableClass.builtIns.anyType
-  #511 = Utf8               in
-  #512 = String             #511          // in
-  #513 = Utf8               kotlin/TuplesKt
-  #514 = Class              #513          // kotlin/TuplesKt
-  #515 = Utf8               to
-  #516 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
-  #517 = NameAndType        #515:#516     // to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
-  #518 = Methodref          #514.#517     // kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
-  #519 = Utf8               createMethod
-  #520 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/types/KotlinType;[Lkotlin/Pair;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
-  #521 = NameAndType        #519:#520     // createMethod:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/types/KotlinType;[Lkotlin/Pair;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
-  #522 = Methodref          #170.#521     // org/jetbrains/kotlin/android/parcel/ParcelableResolveExtension$Companion.createMethod:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/types/KotlinType;[Lkotlin/Pair;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
-  #523 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1
-  #524 = Class              #523          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1
-  #525 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #526 = NameAndType        #183:#525     // "<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #527 = Methodref          #524.#526     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1."<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #528 = Utf8               creatorAsmType
-  #529 = Utf8               creatorClass
-  #530 = Utf8               Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;
-  #531 = Utf8               android/os/Parcelable$Creator
-  #532 = String             #531          // android/os/Parcelable$Creator
-  #533 = Utf8               v
-  #534 = Utf8               Lorg/jetbrains/kotlin/codegen/ClassBuilder;
-  #535 = NameAndType        #533:#534     // v:Lorg/jetbrains/kotlin/codegen/ClassBuilder;
-  #536 = Fieldref           #41.#535      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.v:Lorg/jetbrains/kotlin/codegen/ClassBuilder;
-  #537 = Utf8               org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin
-  #538 = Class              #537          // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin
-  #539 = Utf8               NO_ORIGIN
-  #540 = Utf8               Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;
-  #541 = NameAndType        #539:#540     // NO_ORIGIN:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;
-  #542 = Fieldref           #538.#541     // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin.NO_ORIGIN:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;
-  #543 = Utf8               CREATOR
-  #544 = String             #543          // CREATOR
-  #545 = Utf8               creatorType
-  #546 = String             #545          // creatorType
-  #547 = Utf8               getDescriptor
-  #548 = NameAndType        #547:#180     // getDescriptor:()Ljava/lang/String;
-  #549 = Methodref          #232.#548     // org/jetbrains/org/objectweb/asm/Type.getDescriptor:()Ljava/lang/String;
-  #550 = Utf8               org/jetbrains/kotlin/codegen/ClassBuilder
-  #551 = Class              #550          // org/jetbrains/kotlin/codegen/ClassBuilder
-  #552 = Utf8               newField
-  #553 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/FieldVisitor;
-  #554 = NameAndType        #552:#553     // newField:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/FieldVisitor;
-  #555 = InterfaceMethodref #551.#554     // org/jetbrains/kotlin/codegen/ClassBuilder.newField:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/FieldVisitor;
-  #556 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;)V
-  #557 = Utf8               parcelableClass.defaultType
-  #558 = String             #557          // parcelableClass.defaultType
-  #559 = Utf8               $Creator
-  #560 = String             #559          // $Creator
-  #561 = Utf8               org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl
-  #562 = Class              #561          // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl
-  #563 = Utf8               Creator
-  #564 = String             #563          // Creator
-  #565 = Utf8               identifier
-  #566 = Utf8               (Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;
-  #567 = NameAndType        #565:#566     // identifier:(Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;
-  #568 = Methodref          #252.#567     // org/jetbrains/kotlin/name/Name.identifier:(Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;
-  #569 = Utf8               getSource
-  #570 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/SourceElement;
-  #571 = NameAndType        #569:#570     // getSource:()Lorg/jetbrains/kotlin/descriptors/SourceElement;
-  #572 = InterfaceMethodref #60.#571      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getSource:()Lorg/jetbrains/kotlin/descriptors/SourceElement;
-  #573 = Utf8               org/jetbrains/kotlin/storage/LockBasedStorageManager
-  #574 = Class              #573          // org/jetbrains/kotlin/storage/LockBasedStorageManager
-  #575 = Utf8               NO_LOCKS
-  #576 = Utf8               Lorg/jetbrains/kotlin/storage/StorageManager;
-  #577 = NameAndType        #575:#576     // NO_LOCKS:Lorg/jetbrains/kotlin/storage/StorageManager;
-  #578 = Fieldref           #574.#577     // org/jetbrains/kotlin/storage/LockBasedStorageManager.NO_LOCKS:Lorg/jetbrains/kotlin/storage/StorageManager;
-  #579 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/descriptors/ClassKind;Ljava/util/Collection;Lorg/jetbrains/kotlin/descriptors/SourceElement;ZLorg/jetbrains/kotlin/storage/StorageManager;)V
-  #580 = NameAndType        #183:#579     // "<init>":(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/descriptors/ClassKind;Ljava/util/Collection;Lorg/jetbrains/kotlin/descriptors/SourceElement;ZLorg/jetbrains/kotlin/storage/StorageManager;)V
-  #581 = Methodref          #562.#580     // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl."<init>":(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/descriptors/ClassKind;Ljava/util/Collection;Lorg/jetbrains/kotlin/descriptors/SourceElement;ZLorg/jetbrains/kotlin/storage/StorageManager;)V
-  #582 = Utf8               org/jetbrains/kotlin/resolve/scopes/MemberScope$Empty
-  #583 = Class              #582          // org/jetbrains/kotlin/resolve/scopes/MemberScope$Empty
-  #584 = Utf8               Lorg/jetbrains/kotlin/resolve/scopes/MemberScope$Empty;
-  #585 = NameAndType        #301:#584     // INSTANCE:Lorg/jetbrains/kotlin/resolve/scopes/MemberScope$Empty;
-  #586 = Fieldref           #583.#585     // org/jetbrains/kotlin/resolve/scopes/MemberScope$Empty.INSTANCE:Lorg/jetbrains/kotlin/resolve/scopes/MemberScope$Empty;
-  #587 = Utf8               org/jetbrains/kotlin/resolve/scopes/MemberScope
-  #588 = Class              #587          // org/jetbrains/kotlin/resolve/scopes/MemberScope
-  #589 = Utf8               kotlin/collections/SetsKt
-  #590 = Class              #589          // kotlin/collections/SetsKt
-  #591 = Utf8               emptySet
-  #592 = Utf8               ()Ljava/util/Set;
-  #593 = NameAndType        #591:#592     // emptySet:()Ljava/util/Set;
-  #594 = Methodref          #590.#593     // kotlin/collections/SetsKt.emptySet:()Ljava/util/Set;
-  #595 = Methodref          #562.#571     // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl.getSource:()Lorg/jetbrains/kotlin/descriptors/SourceElement;
-  #596 = Utf8               org/jetbrains/kotlin/resolve/DescriptorFactory
-  #597 = Class              #596          // org/jetbrains/kotlin/resolve/DescriptorFactory
-  #598 = Utf8               createPrimaryConstructorForObject
-  #599 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/SourceElement;)Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;
-  #600 = NameAndType        #598:#599     // createPrimaryConstructorForObject:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/SourceElement;)Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;
-  #601 = Methodref          #597.#600     // org/jetbrains/kotlin/resolve/DescriptorFactory.createPrimaryConstructorForObject:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/SourceElement;)Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;
-  #602 = Utf8               initialize
-  #603 = Utf8               (Lorg/jetbrains/kotlin/resolve/scopes/MemberScope;Ljava/util/Set;Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;)V
-  #604 = NameAndType        #602:#603     // initialize:(Lorg/jetbrains/kotlin/resolve/scopes/MemberScope;Ljava/util/Set;Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;)V
-  #605 = Methodref          #562.#604     // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl.initialize:(Lorg/jetbrains/kotlin/resolve/scopes/MemberScope;Ljava/util/Set;Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;)V
-  #606 = Utf8               getFactory
-  #607 = Utf8               ()Lorg/jetbrains/kotlin/codegen/ClassFileFactory;
-  #608 = NameAndType        #606:#607     // getFactory:()Lorg/jetbrains/kotlin/codegen/ClassFileFactory;
-  #609 = Methodref          #140.#608     // org/jetbrains/kotlin/codegen/state/GenerationState.getFactory:()Lorg/jetbrains/kotlin/codegen/ClassFileFactory;
-  #610 = Utf8               org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind
-  #611 = Class              #610          // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind
-  #612 = Utf8               OTHER
-  #613 = Utf8               Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;
-  #614 = NameAndType        #612:#613     // OTHER:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;
-  #615 = Fieldref           #611.#614     // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind.OTHER:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;
-  #616 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
-  #617 = NameAndType        #183:#616     // "<init>":(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
-  #618 = Methodref          #538.#617     // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin."<init>":(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
-  #619 = String             #528          // creatorAsmType
-  #620 = Utf8               myClass
-  #621 = Utf8               Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;
-  #622 = NameAndType        #620:#621     // myClass:Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;
-  #623 = Fieldref           #41.#622      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.myClass:Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;
-  #624 = Utf8               codegen.myClass
-  #625 = String             #624          // codegen.myClass
-  #626 = Utf8               org/jetbrains/kotlin/psi/KtPureClassOrObject
-  #627 = Class              #626          // org/jetbrains/kotlin/psi/KtPureClassOrObject
-  #628 = Utf8               getContainingKtFile
-  #629 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtFile;
-  #630 = NameAndType        #628:#629     // getContainingKtFile:()Lorg/jetbrains/kotlin/psi/KtFile;
-  #631 = InterfaceMethodref #627.#630     // org/jetbrains/kotlin/psi/KtPureClassOrObject.getContainingKtFile:()Lorg/jetbrains/kotlin/psi/KtFile;
-  #632 = Utf8               com/intellij/psi/PsiFile
-  #633 = Class              #632          // com/intellij/psi/PsiFile
-  #634 = Utf8               org/jetbrains/kotlin/codegen/ClassFileFactory
-  #635 = Class              #634          // org/jetbrains/kotlin/codegen/ClassFileFactory
-  #636 = Utf8               newVisitor
-  #637 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/org/objectweb/asm/Type;Lcom/intellij/psi/PsiFile;)Lorg/jetbrains/kotlin/codegen/ClassBuilder;
-  #638 = NameAndType        #636:#637     // newVisitor:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/org/objectweb/asm/Type;Lcom/intellij/psi/PsiFile;)Lorg/jetbrains/kotlin/codegen/ClassBuilder;
-  #639 = Methodref          #635.#638     // org/jetbrains/kotlin/codegen/ClassFileFactory.newVisitor:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/org/objectweb/asm/Type;Lcom/intellij/psi/PsiFile;)Lorg/jetbrains/kotlin/codegen/ClassBuilder;
-  #640 = Utf8               codegen.state.factory.ne…myClass.containingKtFile)
-  #641 = String             #640          // codegen.state.factory.ne…myClass.containingKtFile)
-  #642 = Utf8               org/jetbrains/kotlin/codegen/context/ClassContext
-  #643 = Class              #642          // org/jetbrains/kotlin/codegen/context/ClassContext
-  #644 = Utf8               org/jetbrains/kotlin/codegen/OwnerKind
-  #645 = Class              #644          // org/jetbrains/kotlin/codegen/OwnerKind
-  #646 = Utf8               IMPLEMENTATION
-  #647 = Utf8               Lorg/jetbrains/kotlin/codegen/OwnerKind;
-  #648 = NameAndType        #646:#647     // IMPLEMENTATION:Lorg/jetbrains/kotlin/codegen/OwnerKind;
-  #649 = Fieldref           #645.#648     // org/jetbrains/kotlin/codegen/OwnerKind.IMPLEMENTATION:Lorg/jetbrains/kotlin/codegen/OwnerKind;
-  #650 = Utf8               getContext
-  #651 = Utf8               ()Lorg/jetbrains/kotlin/codegen/context/FieldOwnerContext;
-  #652 = NameAndType        #650:#651     // getContext:()Lorg/jetbrains/kotlin/codegen/context/FieldOwnerContext;
-  #653 = Methodref          #41.#652      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.getContext:()Lorg/jetbrains/kotlin/codegen/context/FieldOwnerContext;
-  #654 = Utf8               codegen.context
-  #655 = String             #654          // codegen.context
-  #656 = Utf8               org/jetbrains/kotlin/codegen/context/FieldOwnerContext
-  #657 = Class              #656          // org/jetbrains/kotlin/codegen/context/FieldOwnerContext
-  #658 = Utf8               getParentContext
-  #659 = Utf8               ()Lorg/jetbrains/kotlin/codegen/context/CodegenContext;
-  #660 = NameAndType        #658:#659     // getParentContext:()Lorg/jetbrains/kotlin/codegen/context/CodegenContext;
-  #661 = Methodref          #657.#660     // org/jetbrains/kotlin/codegen/context/FieldOwnerContext.getParentContext:()Lorg/jetbrains/kotlin/codegen/context/CodegenContext;
-  #662 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/OwnerKind;Lorg/jetbrains/kotlin/codegen/context/CodegenContext;Lorg/jetbrains/kotlin/codegen/context/LocalLookup;)V
-  #663 = NameAndType        #183:#662     // "<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/OwnerKind;Lorg/jetbrains/kotlin/codegen/context/CodegenContext;Lorg/jetbrains/kotlin/codegen/context/LocalLookup;)V
-  #664 = Methodref          #643.#663     // org/jetbrains/kotlin/codegen/context/ClassContext."<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/OwnerKind;Lorg/jetbrains/kotlin/codegen/context/CodegenContext;Lorg/jetbrains/kotlin/codegen/context/LocalLookup;)V
-  #665 = Utf8               getParentCodegen
-  #666 = Utf8               ()Lorg/jetbrains/kotlin/codegen/MemberCodegen;
-  #667 = NameAndType        #665:#666     // getParentCodegen:()Lorg/jetbrains/kotlin/codegen/MemberCodegen;
-  #668 = Methodref          #41.#667      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.getParentCodegen:()Lorg/jetbrains/kotlin/codegen/MemberCodegen;
-  #669 = Utf8               (Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;Lorg/jetbrains/kotlin/codegen/context/ClassContext;Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;Lorg/jetbrains/kotlin/codegen/MemberCodegen;Z)V
-  #670 = NameAndType        #183:#669     // "<init>":(Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;Lorg/jetbrains/kotlin/codegen/context/ClassContext;Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;Lorg/jetbrains/kotlin/codegen/MemberCodegen;Z)V
-  #671 = Methodref          #41.#670      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen."<init>":(Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;Lorg/jetbrains/kotlin/codegen/context/ClassContext;Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;Lorg/jetbrains/kotlin/codegen/MemberCodegen;Z)V
-  #672 = String             #3            // java/lang/Object
-  #673 = Utf8               java/lang/String
-  #674 = Class              #673          // java/lang/String
-  #675 = Utf8               defineClass
-  #676 = Utf8               (Lcom/intellij/psi/PsiElement;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
-  #677 = NameAndType        #675:#676     // defineClass:(Lcom/intellij/psi/PsiElement;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
-  #678 = InterfaceMethodref #551.#677     // org/jetbrains/kotlin/codegen/ClassBuilder.defineClass:(Lcom/intellij/psi/PsiElement;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
-  #679 = Utf8               visitInnerClass
-  #680 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
-  #681 = NameAndType        #679:#680     // visitInnerClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
-  #682 = InterfaceMethodref #551.#681     // org/jetbrains/kotlin/codegen/ClassBuilder.visitInnerClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
-  #683 = Utf8               codegen.state
-  #684 = String             #683          // codegen.state
-  #685 = Utf8               org/jetbrains/kotlin/codegen/WriteAnnotationUtilKt
-  #686 = Class              #685          // org/jetbrains/kotlin/codegen/WriteAnnotationUtilKt
-  #687 = Utf8               writeSyntheticClassMetadata
-  #688 = Utf8               (Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V
-  #689 = NameAndType        #687:#688     // writeSyntheticClassMetadata:(Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V
-  #690 = Methodref          #686.#689     // org/jetbrains/kotlin/codegen/WriteAnnotationUtilKt.writeSyntheticClassMetadata:(Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V
-  #691 = Utf8               writeCreatorConstructor
-  #692 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #693 = NameAndType        #691:#692     // writeCreatorConstructor:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #694 = Methodref          #2.#693       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.writeCreatorConstructor:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #695 = Utf8               writeNewArrayMethod
-  #696 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)V
-  #697 = NameAndType        #695:#696     // writeNewArrayMethod:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)V
-  #698 = Methodref          #2.#697       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.writeNewArrayMethod:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)V
-  #699 = NameAndType        #484:#485     // writeCreateFromParcel:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List;)V
-  #700 = Methodref          #2.#699       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.writeCreateFromParcel:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List;)V
-  #701 = Utf8               done
-  #702 = NameAndType        #701:#228     // done:()V
-  #703 = InterfaceMethodref #551.#702     // org/jetbrains/kotlin/codegen/ClassBuilder.done:()V
-  #704 = Utf8               codegenForCreator
-  #705 = Utf8               classContextForCreator
-  #706 = Utf8               Lorg/jetbrains/kotlin/codegen/context/ClassContext;
-  #707 = Utf8               classBuilderForCreator
-  #708 = Utf8               org/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl
-  #709 = Class              #708          // org/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl
-  #710 = Utf8               setReturnType
-  #711 = Utf8               (Lorg/jetbrains/kotlin/types/KotlinType;)V
-  #712 = NameAndType        #710:#711     // setReturnType:(Lorg/jetbrains/kotlin/types/KotlinType;)V
-  #713 = Methodref          #709.#712     // org/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl.setReturnType:(Lorg/jetbrains/kotlin/types/KotlinType;)V
-  #714 = Utf8               DescriptorFactory.create…ultType\n                }
-  #715 = String             #714          // DescriptorFactory.create…ultType\n                }
-  #716 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreatorConstructor$2
-  #717 = Class              #716          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreatorConstructor$2
-  #718 = Utf8               (Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #719 = NameAndType        #183:#718     // "<init>":(Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #720 = Methodref          #717.#719     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreatorConstructor$2."<init>":(Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #721 = Utf8               $this$apply
-  #722 = Utf8               Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;
-  #723 = Utf8               $i$a$-apply-ParcelableCodegenExtension$writeCreatorConstructor$1
-  #724 = Utf8               NEW_ARRAY
-  #725 = NameAndType        #724:#279     // NEW_ARRAY:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
-  #726 = Fieldref           #277.#725     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.NEW_ARRAY:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
-  #727 = Utf8               org/jetbrains/kotlin/types/Variance
-  #728 = Class              #727          // org/jetbrains/kotlin/types/Variance
-  #729 = Utf8               INVARIANT
-  #730 = Utf8               Lorg/jetbrains/kotlin/types/Variance;
-  #731 = NameAndType        #729:#730     // INVARIANT:Lorg/jetbrains/kotlin/types/Variance;
-  #732 = Fieldref           #728.#731     // org/jetbrains/kotlin/types/Variance.INVARIANT:Lorg/jetbrains/kotlin/types/Variance;
-  #733 = Utf8               getArrayType
-  #734 = Utf8               (Lorg/jetbrains/kotlin/types/Variance;Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/types/SimpleType;
-  #735 = NameAndType        #733:#734     // getArrayType:(Lorg/jetbrains/kotlin/types/Variance;Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/types/SimpleType;
-  #736 = Methodref          #505.#735     // org/jetbrains/kotlin/builtins/KotlinBuiltIns.getArrayType:(Lorg/jetbrains/kotlin/types/Variance;Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/types/SimpleType;
-  #737 = Utf8               builtIns.getArrayType(Va…ARIANT, builtIns.anyType)
-  #738 = String             #737          // builtIns.getArrayType(Va…ARIANT, builtIns.anyType)
-  #739 = Utf8               size
-  #740 = String             #739          // size
-  #741 = Utf8               getIntType
-  #742 = NameAndType        #741:#68      // getIntType:()Lorg/jetbrains/kotlin/types/SimpleType;
-  #743 = Methodref          #505.#742     // org/jetbrains/kotlin/builtins/KotlinBuiltIns.getIntType:()Lorg/jetbrains/kotlin/types/SimpleType;
-  #744 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeNewArrayMethod$1
-  #745 = Class              #744          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeNewArrayMethod$1
-  #746 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #747 = NameAndType        #183:#746     // "<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #748 = Methodref          #745.#747     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeNewArrayMethod$1."<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V
-  #749 = Utf8               parcelableAsmType
-  #750 = Utf8               builtIns
-  #751 = Utf8               Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;
-  #752 = Utf8               (Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1<-Lorg/jetbrains/kotlin/codegen/ExpressionCodegen;Lkotlin/Unit;>;)V
-  #753 = Utf8               functionCodegen
-  #754 = Utf8               Lorg/jetbrains/kotlin/codegen/FunctionCodegen;
-  #755 = NameAndType        #753:#754     // functionCodegen:Lorg/jetbrains/kotlin/codegen/FunctionCodegen;
-  #756 = Fieldref           #41.#755      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.functionCodegen:Lorg/jetbrains/kotlin/codegen/FunctionCodegen;
-  #757 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$write$1
-  #758 = Class              #757          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$write$1
-  #759 = Utf8               (Lkotlin/jvm/functions/Function1;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V
-  #760 = NameAndType        #183:#759     // "<init>":(Lkotlin/jvm/functions/Function1;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V
-  #761 = Methodref          #758.#760     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$write$1."<init>":(Lkotlin/jvm/functions/Function1;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V
-  #762 = Utf8               org/jetbrains/kotlin/codegen/FunctionGenerationStrategy
-  #763 = Class              #762          // org/jetbrains/kotlin/codegen/FunctionGenerationStrategy
-  #764 = Utf8               org/jetbrains/kotlin/codegen/FunctionCodegen
-  #765 = Class              #764          // org/jetbrains/kotlin/codegen/FunctionCodegen
-  #766 = Utf8               generateMethod
-  #767 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/FunctionGenerationStrategy;)V
-  #768 = NameAndType        #766:#767     // generateMethod:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/FunctionGenerationStrategy;)V
-  #769 = Methodref          #765.#768     // org/jetbrains/kotlin/codegen/FunctionCodegen.generateMethod:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/FunctionGenerationStrategy;)V
-  #770 = Utf8               declarationOrigin
-  #771 = Utf8               $this$write
-  #772 = Utf8               Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;
-  #773 = Utf8               code
-  #774 = Utf8               Lkotlin/jvm/functions/Function1;
-  #775 = Methodref          #4.#229       // java/lang/Object."<init>":()V
-  #776 = Utf8               <clinit>
-  #777 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion;
-  #778 = Utf8               $this$hasCreatorField
-  #779 = String             #778          // $this$hasCreatorField
-  #780 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls
-  #781 = Class              #780          // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls
-  #782 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
-  #783 = NameAndType        #129:#782     // hasCreatorField:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
-  #784 = Methodref          #781.#783     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasCreatorField:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
-  #785 = Utf8               Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;
-  #786 = Utf8               $this$isParcelableClassDescriptor
-  #787 = String             #786          // $this$isParcelableClassDescriptor
-  #788 = NameAndType        #51:#782      // isParcelableClassDescriptor:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
-  #789 = Methodref          #781.#788     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.isParcelableClassDescriptor:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
-  #790 = Utf8               $this$hasSyntheticDescribeContents
-  #791 = String             #790          // $this$hasSyntheticDescribeContents
-  #792 = NameAndType        #107:#782     // hasSyntheticDescribeContents:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
-  #793 = Methodref          #781.#792     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasSyntheticDescribeContents:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
-  #794 = Utf8               $this$hasSyntheticWriteToParcel
-  #795 = String             #794          // $this$hasSyntheticWriteToParcel
-  #796 = NameAndType        #114:#782     // hasSyntheticWriteToParcel:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
-  #797 = Methodref          #781.#796     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasSyntheticWriteToParcel:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z
-  #798 = Utf8               Lorg/jetbrains/annotations/Nullable;
-  #799 = Utf8               $this$findFunction
-  #800 = String             #799          // $this$findFunction
-  #801 = Utf8               componentKind
-  #802 = String             #801          // componentKind
-  #803 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
-  #804 = NameAndType        #282:#803     // findFunction:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
-  #805 = Methodref          #781.#804     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.findFunction:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
-  #806 = Utf8               applyFunction
-  #807 = Utf8               (Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;
-  #808 = Utf8               (Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall<*>;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;
-  #809 = Utf8               receiver
-  #810 = String             #809          // receiver
-  #811 = Utf8               resolvedCall
-  #812 = String             #811          // resolvedCall
-  #813 = Utf8               c
-  #814 = String             #813          // c
-  #815 = Utf8               org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls
-  #816 = Class              #815          // org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls
-  #817 = Utf8               (Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;
-  #818 = NameAndType        #806:#817     // applyFunction:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;
-  #819 = Methodref          #816.#818     // org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls.applyFunction:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;
-  #820 = Utf8               Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;
-  #821 = Utf8               Lorg/jetbrains/kotlin/codegen/StackValue;
-  #822 = Utf8               Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;
-  #823 = Utf8               Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;
-  #824 = Utf8               applyProperty
-  #825 = NameAndType        #824:#817     // applyProperty:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;
-  #826 = Methodref          #816.#825     // org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls.applyProperty:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;
-  #827 = Utf8               access$getCompanionClassType
-  #828 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Pair;
-  #829 = NameAndType        #215:#216     // getCompanionClassType:(Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Pair;
-  #830 = Methodref          #2.#829       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.getCompanionClassType:(Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Pair;
-  #831 = Utf8               $this
-  #832 = Utf8               Lkotlin/Metadata;
-  #833 = Utf8               mv
-  #834 = Integer            1
-  #835 = Integer            17
-  #836 = Utf8               bv
-  #837 = Integer            0
-  #838 = Integer            3
-  #839 = Utf8               k
-  #840 = Utf8               xi
-  #841 = Integer            2
-  #842 = Utf8               d1
-  #843 = Utf8                r\n\n\n\n\n\n\n\n \n\n \n\n\n\n\n\n \n \n\n\n\n\n\n \n\n\t\n\n \n\n\n\n  22020:23B¢J0\t2\n0HJ$000\r2020HJ002\n020HJ020HJH0\t2\n020202020202 00HJ!0\t2\n0HJ@\"0\t2\n0202020202 00HJ #0\t2\n0202$0HJ*%0\t2\n0202020HJ&0*0HJ-'0\t*0(2\n02)0+0\t0*¢,HJ)-0\t*02\n02.00H¢/J;00\t*02\n02 002020H¢1R08VX¢¨4
-  #844 = Utf8               d2
-  #845 = Utf8               shouldGenerateClassSyntheticPartsInLightClassesMode
-  #846 = Utf8
-  #847 = Utf8               Lkotlin/Pair;
-  #848 = Utf8               Lkotlin/Function1;
-  #849 = Utf8               Lorg/jetbrains/kotlin/codegen/ExpressionCodegen;
-  #850 = Utf8               Lkotlin/ExtensionFunctionType;
-  #851 = Utf8               PropertyToSerialize
-  #852 = Utf8               android-extensions-compiler
-  #853 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion
-  #854 = Class              #853          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion
-  #855 = Utf8               (Lkotlin/jvm/internal/DefaultConstructorMarker;)V
-  #856 = NameAndType        #183:#855     // "<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
-  #857 = Methodref          #854.#856     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
-  #858 = NameAndType        #157:#777     // Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion;
-  #859 = Fieldref           #2.#858       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion;
-  #860 = Utf8               org/jetbrains/kotlin/name/FqName
-  #861 = Class              #860          // org/jetbrains/kotlin/name/FqName
-  #862 = Utf8               java/io/FileDescriptor
-  #863 = Class              #862          // java/io/FileDescriptor
-  #864 = Utf8               java/lang/Class
-  #865 = Class              #864          // java/lang/Class
-  #866 = Utf8               getCanonicalName
-  #867 = NameAndType        #866:#180     // getCanonicalName:()Ljava/lang/String;
-  #868 = Methodref          #865.#867     // java/lang/Class.getCanonicalName:()Ljava/lang/String;
-  #869 = Methodref          #861.#185     // org/jetbrains/kotlin/name/FqName."<init>":(Ljava/lang/String;)V
-  #870 = Utf8               ParcelableCodegenExtension.kt
-  #871 = Utf8               Code
-  #872 = Utf8               LineNumberTable
-  #873 = Utf8               LocalVariableTable
-  #874 = Utf8               Deprecated
-  #875 = Utf8               RuntimeVisibleAnnotations
-  #876 = Utf8               RuntimeInvisibleParameterAnnotations
-  #877 = Utf8               StackMapTable
-  #878 = Utf8               Signature
-  #879 = Utf8               RuntimeInvisibleAnnotations
-  #880 = Utf8               InnerClasses
-  #881 = Utf8               SourceFile
-  #882 = Utf8               SourceDebugExtension
+  #256 = Utf8               shortName.asString()
+  #257 = String             #256          // shortName.asString()
+  #258 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
+  #259 = NameAndType        #183:#258     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
+  #260 = Methodref          #225.#259     // kotlin/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
+  #261 = Utf8               shortName
+  #262 = Utf8               Lorg/jetbrains/kotlin/name/Name;
+  #263 = Utf8               containerAsmType
+  #264 = Utf8               Lorg/jetbrains/org/objectweb/asm/Type;
+  #265 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Unit;
+  #266 = Utf8               typeMapper
+  #267 = Utf8               Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;
+  #268 = NameAndType        #266:#267     // typeMapper:Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;
+  #269 = Fieldref           #41.#268      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.typeMapper:Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;
+  #270 = Utf8               this.defaultType
+  #271 = String             #270          // this.defaultType
+  #272 = Utf8               org/jetbrains/kotlin/codegen/state/KotlinTypeMapper
+  #273 = Class              #272          // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper
+  #274 = Utf8               mapType$default
+  #275 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;
+  #276 = NameAndType        #274:#275     // mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;
+  #277 = Methodref          #273.#276     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;
+  #278 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind
+  #279 = Class              #278          // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind
+  #280 = Utf8               WRITE_TO_PARCEL
+  #281 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
+  #282 = NameAndType        #280:#281     // WRITE_TO_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
+  #283 = Fieldref           #279.#282     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.WRITE_TO_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
+  #284 = Utf8               findFunction
+  #285 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
+  #286 = NameAndType        #284:#285     // findFunction:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
+  #287 = Methodref          #2.#286       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.findFunction:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
+  #288 = Utf8               org/jetbrains/kotlin/descriptors/FunctionDescriptor
+  #289 = Class              #288          // org/jetbrains/kotlin/descriptors/FunctionDescriptor
+  #290 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1
+  #291 = Class              #290          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1
+  #292 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/org/objectweb/asm/Type;)V
+  #293 = NameAndType        #183:#292     // "<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/org/objectweb/asm/Type;)V
+  #294 = Methodref          #291.#293     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1."<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/org/objectweb/asm/Type;)V
+  #295 = Utf8               kotlin/jvm/functions/Function1
+  #296 = Class              #295          // kotlin/jvm/functions/Function1
+  #297 = Utf8               write
+  #298 = Utf8               (Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1;)V
+  #299 = NameAndType        #297:#298     // write:(Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1;)V
+  #300 = Methodref          #2.#299       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.write:(Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1;)V
+  #301 = Utf8               kotlin/Unit
+  #302 = Class              #301          // kotlin/Unit
+  #303 = Utf8               INSTANCE
+  #304 = Utf8               Lkotlin/Unit;
+  #305 = NameAndType        #303:#304     // INSTANCE:Lkotlin/Unit;
+  #306 = Fieldref           #302.#305     // kotlin/Unit.INSTANCE:Lkotlin/Unit;
+  #307 = Utf8               $this$writeWriteToParcel
+  #308 = Utf8               properties
+  #309 = Utf8               parcelAsmType
+  #310 = Utf8               org/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor
+  #311 = Class              #310          // org/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor
+  #312 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;)Lkotlin/Unit;
+  #313 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize
+  #314 = Class              #313          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize
+  #315 = Utf8               getType
+  #316 = Utf8               ()Lorg/jetbrains/kotlin/types/KotlinType;
+  #317 = NameAndType        #315:#316     // getType:()Lorg/jetbrains/kotlin/types/KotlinType;
+  #318 = Methodref          #314.#317     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize.getType:()Lorg/jetbrains/kotlin/types/KotlinType;
+  #319 = Utf8               containsFileDescriptor
+  #320 = NameAndType        #319:#104     // containsFileDescriptor:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
+  #321 = Methodref          #2.#320       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.containsFileDescriptor:(Lorg/jetbrains/kotlin/types/KotlinType;)Z
+  #322 = Utf8               DESCRIBE_CONTENTS
+  #323 = NameAndType        #322:#281     // DESCRIBE_CONTENTS:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
+  #324 = Fieldref           #279.#323     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.DESCRIBE_CONTENTS:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
+  #325 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1
+  #326 = Class              #325          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1
+  #327 = Utf8               (Z)V
+  #328 = NameAndType        #183:#327     // "<init>":(Z)V
+  #329 = Methodref          #326.#328     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1."<init>":(Z)V
+  #330 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;
+  #331 = Utf8               $i$a$-any-ParcelableCodegenExtension$writeDescribeContentsFunction$hasFileDescriptorAnywhere$1
+  #332 = Utf8               hasFileDescriptorAnywhere
+  #333 = Utf8               Z
+  #334 = Utf8               $this$writeDescribeContentsFunction
+  #335 = Utf8               getConstructor
+  #336 = Utf8               ()Lorg/jetbrains/kotlin/types/TypeConstructor;
+  #337 = NameAndType        #335:#336     // getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;
+  #338 = Methodref          #72.#337      // org/jetbrains/kotlin/types/KotlinType.getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;
+  #339 = Utf8               org/jetbrains/kotlin/types/TypeConstructor
+  #340 = Class              #339          // org/jetbrains/kotlin/types/TypeConstructor
+  #341 = Utf8               getDeclarationDescriptor
+  #342 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
+  #343 = NameAndType        #341:#342     // getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
+  #344 = InterfaceMethodref #340.#343     // org/jetbrains/kotlin/types/TypeConstructor.getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
+  #345 = Utf8               getFqNameSafe
+  #346 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;
+  #347 = NameAndType        #345:#346     // getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;
+  #348 = Methodref          #164.#347     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;
+  #349 = Utf8               FILE_DESCRIPTOR_FQNAME
+  #350 = Utf8               Lorg/jetbrains/kotlin/name/FqName;
+  #351 = NameAndType        #349:#350     // FILE_DESCRIPTOR_FQNAME:Lorg/jetbrains/kotlin/name/FqName;
+  #352 = Fieldref           #2.#351       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.FILE_DESCRIPTOR_FQNAME:Lorg/jetbrains/kotlin/name/FqName;
+  #353 = Utf8               getArguments
+  #354 = Utf8               ()Ljava/util/List;
+  #355 = NameAndType        #353:#354     // getArguments:()Ljava/util/List;
+  #356 = Methodref          #72.#355      // org/jetbrains/kotlin/types/KotlinType.getArguments:()Ljava/util/List;
+  #357 = Utf8               org/jetbrains/kotlin/types/TypeProjection
+  #358 = Class              #357          // org/jetbrains/kotlin/types/TypeProjection
+  #359 = InterfaceMethodref #358.#317     // org/jetbrains/kotlin/types/TypeProjection.getType:()Lorg/jetbrains/kotlin/types/KotlinType;
+  #360 = Utf8               it.type
+  #361 = String             #360          // it.type
+  #362 = Utf8               Lorg/jetbrains/kotlin/types/TypeProjection;
+  #363 = Utf8               $i$a$-any-ParcelableCodegenExtension$containsFileDescriptor$1
+  #364 = Utf8               declarationDescriptor
+  #365 = Utf8               Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;
+  #366 = Utf8               $this$containsFileDescriptor
+  #367 = Utf8               org/jetbrains/kotlin/descriptors/ClassifierDescriptor
+  #368 = Class              #367          // org/jetbrains/kotlin/descriptors/ClassifierDescriptor
+  #369 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;
+  #370 = Utf8               getKind
+  #371 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassKind;
+  #372 = NameAndType        #370:#371     // getKind:()Lorg/jetbrains/kotlin/descriptors/ClassKind;
+  #373 = InterfaceMethodref #60.#372      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getKind:()Lorg/jetbrains/kotlin/descriptors/ClassKind;
+  #374 = Utf8               org/jetbrains/kotlin/descriptors/ClassKind
+  #375 = Class              #374          // org/jetbrains/kotlin/descriptors/ClassKind
+  #376 = Utf8               CLASS
+  #377 = Utf8               Lorg/jetbrains/kotlin/descriptors/ClassKind;
+  #378 = NameAndType        #376:#377     // CLASS:Lorg/jetbrains/kotlin/descriptors/ClassKind;
+  #379 = Fieldref           #375.#378     // org/jetbrains/kotlin/descriptors/ClassKind.CLASS:Lorg/jetbrains/kotlin/descriptors/ClassKind;
+  #380 = Utf8               kotlin/collections/CollectionsKt
+  #381 = Class              #380          // kotlin/collections/CollectionsKt
+  #382 = Utf8               emptyList
+  #383 = NameAndType        #382:#354     // emptyList:()Ljava/util/List;
+  #384 = Methodref          #381.#383     // kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
+  #385 = Utf8               getConstructors
+  #386 = Utf8               ()Ljava/util/Collection;
+  #387 = NameAndType        #385:#386     // getConstructors:()Ljava/util/Collection;
+  #388 = InterfaceMethodref #60.#387      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getConstructors:()Ljava/util/Collection;
+  #389 = Utf8               parcelableClass.constructors
+  #390 = String             #389          // parcelableClass.constructors
+  #391 = Utf8               org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor
+  #392 = Class              #391          // org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor
+  #393 = Utf8               isPrimary
+  #394 = NameAndType        #393:#35      // isPrimary:()Z
+  #395 = InterfaceMethodref #392.#394     // org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor.isPrimary:()Z
+  #396 = Utf8               getValueParameters
+  #397 = NameAndType        #396:#354     // getValueParameters:()Ljava/util/List;
+  #398 = InterfaceMethodref #392.#397     // org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor.getValueParameters:()Ljava/util/List;
+  #399 = Utf8               constructor.valueParameters
+  #400 = String             #399          // constructor.valueParameters
+  #401 = Utf8               java/util/ArrayList
+  #402 = Class              #401          // java/util/ArrayList
+  #403 = Methodref          #402.#229     // java/util/ArrayList."<init>":()V
+  #404 = Utf8               org/jetbrains/kotlin/descriptors/ValueParameterDescriptor
+  #405 = Class              #404          // org/jetbrains/kotlin/descriptors/ValueParameterDescriptor
+  #406 = Utf8               bindingContext
+  #407 = Utf8               Lorg/jetbrains/kotlin/resolve/BindingContext;
+  #408 = NameAndType        #406:#407     // bindingContext:Lorg/jetbrains/kotlin/resolve/BindingContext;
+  #409 = Fieldref           #41.#408      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.bindingContext:Lorg/jetbrains/kotlin/resolve/BindingContext;
+  #410 = Utf8               org/jetbrains/kotlin/resolve/BindingContext
+  #411 = Class              #410          // org/jetbrains/kotlin/resolve/BindingContext
+  #412 = Utf8               VALUE_PARAMETER_AS_PROPERTY
+  #413 = Utf8               Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
+  #414 = NameAndType        #412:#413     // VALUE_PARAMETER_AS_PROPERTY:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
+  #415 = Fieldref           #411.#414     // org/jetbrains/kotlin/resolve/BindingContext.VALUE_PARAMETER_AS_PROPERTY:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;
+  #416 = Utf8               org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice
+  #417 = Class              #416          // org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice
+  #418 = Utf8               get
+  #419 = Utf8               (Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;
+  #420 = NameAndType        #418:#419     // get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;
+  #421 = InterfaceMethodref #411.#420     // org/jetbrains/kotlin/resolve/BindingContext.get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;
+  #422 = Utf8               org/jetbrains/kotlin/descriptors/PropertyDescriptor
+  #423 = Class              #422          // org/jetbrains/kotlin/descriptors/PropertyDescriptor
+  #424 = Utf8               add
+  #425 = Utf8               (Ljava/lang/Object;)Z
+  #426 = NameAndType        #424:#425     // add:(Ljava/lang/Object;)Z
+  #427 = InterfaceMethodref #84.#426      // java/util/Collection.add:(Ljava/lang/Object;)Z
+  #428 = Utf8               getAnnotations
+  #429 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
+  #430 = NameAndType        #428:#429     // getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
+  #431 = InterfaceMethodref #60.#430      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
+  #432 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt
+  #433 = Class              #432          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt
+  #434 = Utf8               getTypeParcelers
+  #435 = Utf8               (Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;
+  #436 = NameAndType        #434:#435     // getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;
+  #437 = Methodref          #433.#436     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt.getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;
+  #438 = Utf8               collectionSizeOrDefault
+  #439 = Utf8               (Ljava/lang/Iterable;I)I
+  #440 = NameAndType        #438:#439     // collectionSizeOrDefault:(Ljava/lang/Iterable;I)I
+  #441 = Methodref          #381.#440     // kotlin/collections/CollectionsKt.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I
+  #442 = Utf8               (I)V
+  #443 = NameAndType        #183:#442     // "<init>":(I)V
+  #444 = Methodref          #402.#443     // java/util/ArrayList."<init>":(I)V
+  #445 = InterfaceMethodref #423.#220     // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getName:()Lorg/jetbrains/kotlin/name/Name;
+  #446 = Utf8               it.name.asString()
+  #447 = String             #446          // it.name.asString()
+  #448 = InterfaceMethodref #423.#317     // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getType:()Lorg/jetbrains/kotlin/types/KotlinType;
+  #449 = InterfaceMethodref #423.#430     // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;
+  #450 = Utf8               plus
+  #451 = Utf8               (Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
+  #452 = NameAndType        #450:#451     // plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
+  #453 = Methodref          #381.#452     // kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;
+  #454 = Utf8               (Ljava/lang/String;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)V
+  #455 = NameAndType        #183:#454     // "<init>":(Ljava/lang/String;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)V
+  #456 = Methodref          #314.#455     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize."<init>":(Ljava/lang/String;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)V
+  #457 = Utf8               Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;
+  #458 = Utf8               $i$a$-firstOrNull-ParcelableCodegenExtension$getPropertiesToSerialize$constructor$1
+  #459 = Utf8               $this$firstOrNull$iv
+  #460 = Utf8               $i$f$firstOrNull
+  #461 = Utf8               param
+  #462 = Utf8               Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;
+  #463 = Utf8               $i$a$-mapNotNull-ParcelableCodegenExtension$getPropertiesToSerialize$propertiesToSerialize$1
+  #464 = Utf8               it$iv$iv
+  #465 = Utf8               $i$a$-let-CollectionsKt___CollectionsKt$mapNotNullTo$1$1$iv$iv
+  #466 = Utf8               element$iv$iv
+  #467 = Utf8               $i$a$-forEach-CollectionsKt___CollectionsKt$mapNotNullTo$1$iv$iv
+  #468 = Utf8               element$iv$iv$iv
+  #469 = Utf8               $this$forEach$iv$iv$iv
+  #470 = Utf8               $i$f$forEach
+  #471 = Utf8               $this$mapNotNullTo$iv$iv
+  #472 = Utf8               destination$iv$iv
+  #473 = Utf8               Ljava/util/Collection;
+  #474 = Utf8               $i$f$mapNotNullTo
+  #475 = Utf8               $this$mapNotNull$iv
+  #476 = Utf8               $i$f$mapNotNull
+  #477 = Utf8               Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;
+  #478 = Utf8               $i$a$-map-ParcelableCodegenExtension$getPropertiesToSerialize$1
+  #479 = Utf8               item$iv$iv
+  #480 = Utf8               $this$mapTo$iv$iv
+  #481 = Utf8               $i$f$mapTo
+  #482 = Utf8               $this$map$iv
+  #483 = Utf8               $i$f$map
+  #484 = Utf8               classParcelers
+  #485 = Utf8               constructor
+  #486 = Utf8               writeCreateFromParcel
+  #487 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List;)V
+  #488 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;)V
+  #489 = Utf8               mapType
+  #490 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;)Lorg/jetbrains/org/objectweb/asm/Type;
+  #491 = NameAndType        #489:#490     // mapType:(Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;)Lorg/jetbrains/org/objectweb/asm/Type;
+  #492 = Methodref          #273.#491     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.mapType:(Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;)Lorg/jetbrains/org/objectweb/asm/Type;
+  #493 = Utf8               CREATE_FROM_PARCEL
+  #494 = NameAndType        #493:#281     // CREATE_FROM_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
+  #495 = Fieldref           #279.#494     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.CREATE_FROM_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;
+  #496 = Utf8               org/jetbrains/kotlin/descriptors/Modality
+  #497 = Class              #496          // org/jetbrains/kotlin/descriptors/Modality
+  #498 = Utf8               FINAL
+  #499 = Utf8               Lorg/jetbrains/kotlin/descriptors/Modality;
+  #500 = NameAndType        #498:#499     // FINAL:Lorg/jetbrains/kotlin/descriptors/Modality;
+  #501 = Fieldref           #497.#500     // org/jetbrains/kotlin/descriptors/Modality.FINAL:Lorg/jetbrains/kotlin/descriptors/Modality;
+  #502 = Utf8               getBuiltIns
+  #503 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;
+  #504 = NameAndType        #502:#503     // getBuiltIns:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;
+  #505 = Methodref          #164.#504     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getBuiltIns:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;
+  #506 = Utf8               org/jetbrains/kotlin/builtins/KotlinBuiltIns
+  #507 = Class              #506          // org/jetbrains/kotlin/builtins/KotlinBuiltIns
+  #508 = Utf8               getAnyType
+  #509 = NameAndType        #508:#68      // getAnyType:()Lorg/jetbrains/kotlin/types/SimpleType;
+  #510 = Methodref          #507.#509     // org/jetbrains/kotlin/builtins/KotlinBuiltIns.getAnyType:()Lorg/jetbrains/kotlin/types/SimpleType;
+  #511 = Utf8               parcelableClass.builtIns.anyType
+  #512 = String             #511          // parcelableClass.builtIns.anyType
+  #513 = Utf8               in
+  #514 = String             #513          // in
+  #515 = Utf8               kotlin/TuplesKt
+  #516 = Class              #515          // kotlin/TuplesKt
+  #517 = Utf8               to
+  #518 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
+  #519 = NameAndType        #517:#518     // to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
+  #520 = Methodref          #516.#519     // kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
+  #521 = Utf8               createMethod
+  #522 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/types/KotlinType;[Lkotlin/Pair;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
+  #523 = NameAndType        #521:#522     // createMethod:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/types/KotlinType;[Lkotlin/Pair;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
+  #524 = Methodref          #170.#523     // org/jetbrains/kotlin/android/parcel/ParcelableResolveExtension$Companion.createMethod:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/types/KotlinType;[Lkotlin/Pair;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;
+  #525 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1
+  #526 = Class              #525          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1
+  #527 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V
+  #528 = NameAndType        #183:#527     // "<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V
+  #529 = Methodref          #526.#528     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1."<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V
+  #530 = Utf8               creatorAsmType
+  #531 = Utf8               creatorClass
+  #532 = Utf8               Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;
+  #533 = Utf8               android/os/Parcelable$Creator
+  #534 = String             #533          // android/os/Parcelable$Creator
+  #535 = Utf8               v
+  #536 = Utf8               Lorg/jetbrains/kotlin/codegen/ClassBuilder;
+  #537 = NameAndType        #535:#536     // v:Lorg/jetbrains/kotlin/codegen/ClassBuilder;
+  #538 = Fieldref           #41.#537      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.v:Lorg/jetbrains/kotlin/codegen/ClassBuilder;
+  #539 = Utf8               org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin
+  #540 = Class              #539          // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin
+  #541 = Utf8               NO_ORIGIN
+  #542 = Utf8               Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;
+  #543 = NameAndType        #541:#542     // NO_ORIGIN:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;
+  #544 = Fieldref           #540.#543     // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin.NO_ORIGIN:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;
+  #545 = Utf8               CREATOR
+  #546 = String             #545          // CREATOR
+  #547 = Utf8               creatorType
+  #548 = String             #547          // creatorType
+  #549 = Utf8               getDescriptor
+  #550 = NameAndType        #549:#180     // getDescriptor:()Ljava/lang/String;
+  #551 = Methodref          #232.#550     // org/jetbrains/org/objectweb/asm/Type.getDescriptor:()Ljava/lang/String;
+  #552 = Utf8               org/jetbrains/kotlin/codegen/ClassBuilder
+  #553 = Class              #552          // org/jetbrains/kotlin/codegen/ClassBuilder
+  #554 = Utf8               newField
+  #555 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/FieldVisitor;
+  #556 = NameAndType        #554:#555     // newField:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/FieldVisitor;
+  #557 = InterfaceMethodref #553.#556     // org/jetbrains/kotlin/codegen/ClassBuilder.newField:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/FieldVisitor;
+  #558 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;)V
+  #559 = Utf8               parcelableClass.defaultType
+  #560 = String             #559          // parcelableClass.defaultType
+  #561 = Utf8               $Creator
+  #562 = String             #561          // $Creator
+  #563 = Utf8               org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl
+  #564 = Class              #563          // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl
+  #565 = Utf8               Creator
+  #566 = String             #565          // Creator
+  #567 = Utf8               identifier
+  #568 = Utf8               (Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;
+  #569 = NameAndType        #567:#568     // identifier:(Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;
+  #570 = Methodref          #252.#569     // org/jetbrains/kotlin/name/Name.identifier:(Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;
+  #571 = Utf8               getSource
+  #572 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/SourceElement;
+  #573 = NameAndType        #571:#572     // getSource:()Lorg/jetbrains/kotlin/descriptors/SourceElement;
+  #574 = InterfaceMethodref #60.#573      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getSource:()Lorg/jetbrains/kotlin/descriptors/SourceElement;
+  #575 = Utf8               org/jetbrains/kotlin/storage/LockBasedStorageManager
+  #576 = Class              #575          // org/jetbrains/kotlin/storage/LockBasedStorageManager
+  #577 = Utf8               NO_LOCKS
+  #578 = Utf8               Lorg/jetbrains/kotlin/storage/StorageManager;
+  #579 = NameAndType        #577:#578     // NO_LOCKS:Lorg/jetbrains/kotlin/storage/StorageManager;
+  #580 = Fieldref           #576.#579     // org/jetbrains/kotlin/storage/LockBasedStorageManager.NO_LOCKS:Lorg/jetbrains/kotlin/storage/StorageManager;
+  #581 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/descriptors/ClassKind;Ljava/util/Collection;Lorg/jetbrains/kotlin/descriptors/SourceElement;ZLorg/jetbrains/kotlin/storage/StorageManager;)V
+  #582 = NameAndType        #183:#581     // "<init>":(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/descriptors/ClassKind;Ljava/util/Collection;Lorg/jetbrains/kotlin/descriptors/SourceElement;ZLorg/jetbrains/kotlin/storage/StorageManager;)V
+  #583 = Methodref          #564.#582     // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl."<init>":(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/descriptors/ClassKind;Ljava/util/Collection;Lorg/jetbrains/kotlin/descriptors/SourceElement;ZLorg/jetbrains/kotlin/storage/StorageManager;)V
+  #584 = Utf8               org/jetbrains/kotlin/resolve/scopes/MemberScope$Empty
+  #585 = Class              #584          // org/jetbrains/kotlin/resolve/scopes/MemberScope$Empty
+  #586 = Utf8               Lorg/jetbrains/kotlin/resolve/scopes/MemberScope$Empty;
+  #587 = NameAndType        #303:#586     // INSTANCE:Lorg/jetbrains/kotlin/resolve/scopes/MemberScope$Empty;
+  #588 = Fieldref           #585.#587     // org/jetbrains/kotlin/resolve/scopes/MemberScope$Empty.INSTANCE:Lorg/jetbrains/kotlin/resolve/scopes/MemberScope$Empty;
+  #589 = Utf8               org/jetbrains/kotlin/resolve/scopes/MemberScope
+  #590 = Class              #589          // org/jetbrains/kotlin/resolve/scopes/MemberScope
+  #591 = Utf8               kotlin/collections/SetsKt
+  #592 = Class              #591          // kotlin/collections/SetsKt
+  #593 = Utf8               emptySet
+  #594 = Utf8               ()Ljava/util/Set;
+  #595 = NameAndType        #593:#594     // emptySet:()Ljava/util/Set;
+  #596 = Methodref          #592.#595     // kotlin/collections/SetsKt.emptySet:()Ljava/util/Set;
+  #597 = Methodref          #564.#573     // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl.getSource:()Lorg/jetbrains/kotlin/descriptors/SourceElement;
+  #598 = Utf8               org/jetbrains/kotlin/resolve/DescriptorFactory
+  #599 = Class              #598          // org/jetbrains/kotlin/resolve/DescriptorFactory
+  #600 = Utf8               createPrimaryConstructorForObject
+  #601 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/SourceElement;)Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;
+  #602 = NameAndType        #600:#601     // createPrimaryConstructorForObject:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/SourceElement;)Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;
+  #603 = Methodref          #599.#602     // org/jetbrains/kotlin/resolve/DescriptorFactory.createPrimaryConstructorForObject:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/SourceElement;)Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;
+  #604 = Utf8               initialize
+  #605 = Utf8               (Lorg/jetbrains/kotlin/resolve/scopes/MemberScope;Ljava/util/Set;Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;)V
+  #606 = NameAndType        #604:#605     // initialize:(Lorg/jetbrains/kotlin/resolve/scopes/MemberScope;Ljava/util/Set;Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;)V
+  #607 = Methodref          #564.#606     // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl.initialize:(Lorg/jetbrains/kotlin/resolve/scopes/MemberScope;Ljava/util/Set;Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;)V
+  #608 = Utf8               getFactory
+  #609 = Utf8               ()Lorg/jetbrains/kotlin/codegen/ClassFileFactory;
+  #610 = NameAndType        #608:#609     // getFactory:()Lorg/jetbrains/kotlin/codegen/ClassFileFactory;
+  #611 = Methodref          #140.#610     // org/jetbrains/kotlin/codegen/state/GenerationState.getFactory:()Lorg/jetbrains/kotlin/codegen/ClassFileFactory;
+  #612 = Utf8               org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind
+  #613 = Class              #612          // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind
+  #614 = Utf8               OTHER
+  #615 = Utf8               Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;
+  #616 = NameAndType        #614:#615     // OTHER:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;
+  #617 = Fieldref           #613.#616     // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind.OTHER:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;
+  #618 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+  #619 = NameAndType        #183:#618     // "<init>":(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+  #620 = Methodref          #540.#619     // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin."<init>":(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
And more [--- jar:file:///Users/olegstotsky/Desktop/Code/JBSpring2020/dist-compare/compare/dist_gradle/artifacts/ideaPlugin/Kotlin/kotlinc/lib/android-extensions-compiler.jar!/org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.class, +++ jar:file:///Users/olegstotsky/Desktop/Code/JBSpring2020/dist-compare/compare/dist_jps/artifacts/ideaPlugin/Kotlin/kotlinc/lib/android-extensions-compiler.jar!/org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.class, @@ -257,637 +257,639 @@,    #251 = Utf8               org/jetbrains/kotlin/name/Name,    #252 = Class              #251          // org/jetbrains/kotlin/name/Name,    #253 = Utf8               asString,    #254 = NameAndType        #253:#180     // asString:()Ljava/lang/String;,    #255 = Methodref          #252.#254     // org/jetbrains/kotlin/name/Name.asString:()Ljava/lang/String;, -  #256 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V, -  #257 = NameAndType        #183:#256     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V, -  #258 = Methodref          #225.#257     // kotlin/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V, -  #259 = Utf8               shortName, -  #260 = Utf8               Lorg/jetbrains/kotlin/name/Name;, -  #261 = Utf8               containerAsmType, -  #262 = Utf8               Lorg/jetbrains/org/objectweb/asm/Type;, -  #263 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Unit;, -  #264 = Utf8               typeMapper, -  #265 = Utf8               Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;, -  #266 = NameAndType        #264:#265     // typeMapper:Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;, -  #267 = Fieldref           #41.#266      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.typeMapper:Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;, -  #268 = Utf8               this.defaultType, -  #269 = String             #268          // this.defaultType, -  #270 = Utf8               org/jetbrains/kotlin/codegen/state/KotlinTypeMapper, -  #271 = Class              #270          // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper, -  #272 = Utf8               mapType$default, -  #273 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;, -  #274 = NameAndType        #272:#273     // mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;, -  #275 = Methodref          #271.#274     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;, -  #276 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind, -  #277 = Class              #276          // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind, -  #278 = Utf8               WRITE_TO_PARCEL, -  #279 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, -  #280 = NameAndType        #278:#279     // WRITE_TO_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, -  #281 = Fieldref           #277.#280     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.WRITE_TO_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, -  #282 = Utf8               findFunction, -  #283 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, -  #284 = NameAndType        #282:#283     // findFunction:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, -  #285 = Methodref          #2.#284       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.findFunction:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, -  #286 = Utf8               org/jetbrains/kotlin/descriptors/FunctionDescriptor, -  #287 = Class              #286          // org/jetbrains/kotlin/descriptors/FunctionDescriptor, -  #288 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1, -  #289 = Class              #288          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1, -  #290 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #291 = NameAndType        #183:#290     // "<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #292 = Methodref          #289.#291     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1."<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #293 = Utf8               kotlin/jvm/functions/Function1, -  #294 = Class              #293          // kotlin/jvm/functions/Function1, -  #295 = Utf8               write, -  #296 = Utf8               (Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1;)V, -  #297 = NameAndType        #295:#296     // write:(Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1;)V, -  #298 = Methodref          #2.#297       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.write:(Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1;)V, -  #299 = Utf8               kotlin/Unit, -  #300 = Class              #299          // kotlin/Unit, -  #301 = Utf8               INSTANCE, -  #302 = Utf8               Lkotlin/Unit;, -  #303 = NameAndType        #301:#302     // INSTANCE:Lkotlin/Unit;, -  #304 = Fieldref           #300.#303     // kotlin/Unit.INSTANCE:Lkotlin/Unit;, -  #305 = Utf8               $this$writeWriteToParcel, -  #306 = Utf8               properties, -  #307 = Utf8               parcelAsmType, -  #308 = Utf8               org/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor, -  #309 = Class              #308          // org/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor, -  #310 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;)Lkotlin/Unit;, -  #311 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize, -  #312 = Class              #311          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize, -  #313 = Utf8               getType, -  #314 = Utf8               ()Lorg/jetbrains/kotlin/types/KotlinType;, -  #315 = NameAndType        #313:#314     // getType:()Lorg/jetbrains/kotlin/types/KotlinType;, -  #316 = Methodref          #312.#315     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize.getType:()Lorg/jetbrains/kotlin/types/KotlinType;, -  #317 = Utf8               containsFileDescriptor, -  #318 = NameAndType        #317:#104     // containsFileDescriptor:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, -  #319 = Methodref          #2.#318       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.containsFileDescriptor:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, -  #320 = Utf8               DESCRIBE_CONTENTS, -  #321 = NameAndType        #320:#279     // DESCRIBE_CONTENTS:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, -  #322 = Fieldref           #277.#321     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.DESCRIBE_CONTENTS:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, -  #323 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1, -  #324 = Class              #323          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1, -  #325 = Utf8               (Z)V, -  #326 = NameAndType        #183:#325     // "<init>":(Z)V, -  #327 = Methodref          #324.#326     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1."<init>":(Z)V, -  #328 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;, -  #329 = Utf8               $i$a$-any-ParcelableCodegenExtension$writeDescribeContentsFunction$hasFileDescriptorAnywhere$1, -  #330 = Utf8               hasFileDescriptorAnywhere, -  #331 = Utf8               Z, -  #332 = Utf8               $this$writeDescribeContentsFunction, -  #333 = Utf8               getConstructor, -  #334 = Utf8               ()Lorg/jetbrains/kotlin/types/TypeConstructor;, -  #335 = NameAndType        #333:#334     // getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;, -  #336 = Methodref          #72.#335      // org/jetbrains/kotlin/types/KotlinType.getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;, -  #337 = Utf8               org/jetbrains/kotlin/types/TypeConstructor, -  #338 = Class              #337          // org/jetbrains/kotlin/types/TypeConstructor, -  #339 = Utf8               getDeclarationDescriptor, -  #340 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, -  #341 = NameAndType        #339:#340     // getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, -  #342 = InterfaceMethodref #338.#341     // org/jetbrains/kotlin/types/TypeConstructor.getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, -  #343 = Utf8               getFqNameSafe, -  #344 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;, -  #345 = NameAndType        #343:#344     // getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;, -  #346 = Methodref          #164.#345     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;, -  #347 = Utf8               FILE_DESCRIPTOR_FQNAME, -  #348 = Utf8               Lorg/jetbrains/kotlin/name/FqName;, -  #349 = NameAndType        #347:#348     // FILE_DESCRIPTOR_FQNAME:Lorg/jetbrains/kotlin/name/FqName;, -  #350 = Fieldref           #2.#349       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.FILE_DESCRIPTOR_FQNAME:Lorg/jetbrains/kotlin/name/FqName;, -  #351 = Utf8               getArguments, -  #352 = Utf8               ()Ljava/util/List;, -  #353 = NameAndType        #351:#352     // getArguments:()Ljava/util/List;, -  #354 = Methodref          #72.#353      // org/jetbrains/kotlin/types/KotlinType.getArguments:()Ljava/util/List;, -  #355 = Utf8               org/jetbrains/kotlin/types/TypeProjection, -  #356 = Class              #355          // org/jetbrains/kotlin/types/TypeProjection, -  #357 = InterfaceMethodref #356.#315     // org/jetbrains/kotlin/types/TypeProjection.getType:()Lorg/jetbrains/kotlin/types/KotlinType;, -  #358 = Utf8               it.type, -  #359 = String             #358          // it.type, -  #360 = Utf8               Lorg/jetbrains/kotlin/types/TypeProjection;, -  #361 = Utf8               $i$a$-any-ParcelableCodegenExtension$containsFileDescriptor$1, -  #362 = Utf8               declarationDescriptor, -  #363 = Utf8               Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, -  #364 = Utf8               $this$containsFileDescriptor, -  #365 = Utf8               org/jetbrains/kotlin/descriptors/ClassifierDescriptor, -  #366 = Class              #365          // org/jetbrains/kotlin/descriptors/ClassifierDescriptor, -  #367 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;, -  #368 = Utf8               getKind, -  #369 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassKind;, -  #370 = NameAndType        #368:#369     // getKind:()Lorg/jetbrains/kotlin/descriptors/ClassKind;, -  #371 = InterfaceMethodref #60.#370      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getKind:()Lorg/jetbrains/kotlin/descriptors/ClassKind;, -  #372 = Utf8               org/jetbrains/kotlin/descriptors/ClassKind, -  #373 = Class              #372          // org/jetbrains/kotlin/descriptors/ClassKind, -  #374 = Utf8               CLASS, -  #375 = Utf8               Lorg/jetbrains/kotlin/descriptors/ClassKind;, -  #376 = NameAndType        #374:#375     // CLASS:Lorg/jetbrains/kotlin/descriptors/ClassKind;, -  #377 = Fieldref           #373.#376     // org/jetbrains/kotlin/descriptors/ClassKind.CLASS:Lorg/jetbrains/kotlin/descriptors/ClassKind;, -  #378 = Utf8               kotlin/collections/CollectionsKt, -  #379 = Class              #378          // kotlin/collections/CollectionsKt, -  #380 = Utf8               emptyList, -  #381 = NameAndType        #380:#352     // emptyList:()Ljava/util/List;, -  #382 = Methodref          #379.#381     // kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;, -  #383 = Utf8               getConstructors, -  #384 = Utf8               ()Ljava/util/Collection;, -  #385 = NameAndType        #383:#384     // getConstructors:()Ljava/util/Collection;, -  #386 = InterfaceMethodref #60.#385      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getConstructors:()Ljava/util/Collection;, -  #387 = Utf8               parcelableClass.constructors, -  #388 = String             #387          // parcelableClass.constructors, -  #389 = Utf8               org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor, -  #390 = Class              #389          // org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor, -  #391 = Utf8               isPrimary, -  #392 = NameAndType        #391:#35      // isPrimary:()Z, -  #393 = InterfaceMethodref #390.#392     // org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor.isPrimary:()Z, -  #394 = Utf8               getValueParameters, -  #395 = NameAndType        #394:#352     // getValueParameters:()Ljava/util/List;, -  #396 = InterfaceMethodref #390.#395     // org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor.getValueParameters:()Ljava/util/List;, -  #397 = Utf8               constructor.valueParameters, -  #398 = String             #397          // constructor.valueParameters, -  #399 = Utf8               java/util/ArrayList, -  #400 = Class              #399          // java/util/ArrayList, -  #401 = Methodref          #400.#229     // java/util/ArrayList."<init>":()V, -  #402 = Utf8               org/jetbrains/kotlin/descriptors/ValueParameterDescriptor, -  #403 = Class              #402          // org/jetbrains/kotlin/descriptors/ValueParameterDescriptor, -  #404 = Utf8               bindingContext, -  #405 = Utf8               Lorg/jetbrains/kotlin/resolve/BindingContext;, -  #406 = NameAndType        #404:#405     // bindingContext:Lorg/jetbrains/kotlin/resolve/BindingContext;, -  #407 = Fieldref           #41.#406      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.bindingContext:Lorg/jetbrains/kotlin/resolve/BindingContext;, -  #408 = Utf8               org/jetbrains/kotlin/resolve/BindingContext, -  #409 = Class              #408          // org/jetbrains/kotlin/resolve/BindingContext, -  #410 = Utf8               VALUE_PARAMETER_AS_PROPERTY, -  #411 = Utf8               Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, -  #412 = NameAndType        #410:#411     // VALUE_PARAMETER_AS_PROPERTY:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, -  #413 = Fieldref           #409.#412     // org/jetbrains/kotlin/resolve/BindingContext.VALUE_PARAMETER_AS_PROPERTY:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, -  #414 = Utf8               org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice, -  #415 = Class              #414          // org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice, -  #416 = Utf8               get, -  #417 = Utf8               (Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;, -  #418 = NameAndType        #416:#417     // get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;, -  #419 = InterfaceMethodref #409.#418     // org/jetbrains/kotlin/resolve/BindingContext.get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;, -  #420 = Utf8               org/jetbrains/kotlin/descriptors/PropertyDescriptor, -  #421 = Class              #420          // org/jetbrains/kotlin/descriptors/PropertyDescriptor, -  #422 = Utf8               add, -  #423 = Utf8               (Ljava/lang/Object;)Z, -  #424 = NameAndType        #422:#423     // add:(Ljava/lang/Object;)Z, -  #425 = InterfaceMethodref #84.#424      // java/util/Collection.add:(Ljava/lang/Object;)Z, -  #426 = Utf8               getAnnotations, -  #427 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, -  #428 = NameAndType        #426:#427     // getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, -  #429 = InterfaceMethodref #60.#428      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, -  #430 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt, -  #431 = Class              #430          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt, -  #432 = Utf8               getTypeParcelers, -  #433 = Utf8               (Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;, -  #434 = NameAndType        #432:#433     // getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;, -  #435 = Methodref          #431.#434     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt.getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;, -  #436 = Utf8               collectionSizeOrDefault, -  #437 = Utf8               (Ljava/lang/Iterable;I)I, -  #438 = NameAndType        #436:#437     // collectionSizeOrDefault:(Ljava/lang/Iterable;I)I, -  #439 = Methodref          #379.#438     // kotlin/collections/CollectionsKt.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I, -  #440 = Utf8               (I)V, -  #441 = NameAndType        #183:#440     // "<init>":(I)V, -  #442 = Methodref          #400.#441     // java/util/ArrayList."<init>":(I)V, -  #443 = InterfaceMethodref #421.#220     // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getName:()Lorg/jetbrains/kotlin/name/Name;, -  #444 = Utf8               it.name.asString(), -  #445 = String             #444          // it.name.asString(), -  #446 = InterfaceMethodref #421.#315     // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getType:()Lorg/jetbrains/kotlin/types/KotlinType;, -  #447 = InterfaceMethodref #421.#428     // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, -  #448 = Utf8               plus, -  #449 = Utf8               (Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;, -  #450 = NameAndType        #448:#449     // plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;, -  #451 = Methodref          #379.#450     // kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;, -  #452 = Utf8               (Ljava/lang/String;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)V, -  #453 = NameAndType        #183:#452     // "<init>":(Ljava/lang/String;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)V, -  #454 = Methodref          #312.#453     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize."<init>":(Ljava/lang/String;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)V, -  #455 = Utf8               Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;, -  #456 = Utf8               $i$a$-firstOrNull-ParcelableCodegenExtension$getPropertiesToSerialize$constructor$1, -  #457 = Utf8               $this$firstOrNull$iv, -  #458 = Utf8               $i$f$firstOrNull, -  #459 = Utf8               param, -  #460 = Utf8               Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;, -  #461 = Utf8               $i$a$-mapNotNull-ParcelableCodegenExtension$getPropertiesToSerialize$propertiesToSerialize$1, -  #462 = Utf8               it$iv$iv, -  #463 = Utf8               $i$a$-let-CollectionsKt___CollectionsKt$mapNotNullTo$1$1$iv$iv, -  #464 = Utf8               element$iv$iv, -  #465 = Utf8               $i$a$-forEach-CollectionsKt___CollectionsKt$mapNotNullTo$1$iv$iv, -  #466 = Utf8               element$iv$iv$iv, -  #467 = Utf8               $this$forEach$iv$iv$iv, -  #468 = Utf8               $i$f$forEach, -  #469 = Utf8               $this$mapNotNullTo$iv$iv, -  #470 = Utf8               destination$iv$iv, -  #471 = Utf8               Ljava/util/Collection;, -  #472 = Utf8               $i$f$mapNotNullTo, -  #473 = Utf8               $this$mapNotNull$iv, -  #474 = Utf8               $i$f$mapNotNull, -  #475 = Utf8               Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;, -  #476 = Utf8               $i$a$-map-ParcelableCodegenExtension$getPropertiesToSerialize$1, -  #477 = Utf8               item$iv$iv, -  #478 = Utf8               $this$mapTo$iv$iv, -  #479 = Utf8               $i$f$mapTo, -  #480 = Utf8               $this$map$iv, -  #481 = Utf8               $i$f$map, -  #482 = Utf8               classParcelers, -  #483 = Utf8               constructor, -  #484 = Utf8               writeCreateFromParcel, -  #485 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List;)V, -  #486 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;)V, -  #487 = Utf8               mapType, -  #488 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;)Lorg/jetbrains/org/objectweb/asm/Type;, -  #489 = NameAndType        #487:#488     // mapType:(Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;)Lorg/jetbrains/org/objectweb/asm/Type;, -  #490 = Methodref          #271.#489     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.mapType:(Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;)Lorg/jetbrains/org/objectweb/asm/Type;, -  #491 = Utf8               CREATE_FROM_PARCEL, -  #492 = NameAndType        #491:#279     // CREATE_FROM_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, -  #493 = Fieldref           #277.#492     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.CREATE_FROM_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, -  #494 = Utf8               org/jetbrains/kotlin/descriptors/Modality, -  #495 = Class              #494          // org/jetbrains/kotlin/descriptors/Modality, -  #496 = Utf8               FINAL, -  #497 = Utf8               Lorg/jetbrains/kotlin/descriptors/Modality;, -  #498 = NameAndType        #496:#497     // FINAL:Lorg/jetbrains/kotlin/descriptors/Modality;, -  #499 = Fieldref           #495.#498     // org/jetbrains/kotlin/descriptors/Modality.FINAL:Lorg/jetbrains/kotlin/descriptors/Modality;, -  #500 = Utf8               getBuiltIns, -  #501 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;, -  #502 = NameAndType        #500:#501     // getBuiltIns:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;, -  #503 = Methodref          #164.#502     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getBuiltIns:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;, -  #504 = Utf8               org/jetbrains/kotlin/builtins/KotlinBuiltIns, -  #505 = Class              #504          // org/jetbrains/kotlin/builtins/KotlinBuiltIns, -  #506 = Utf8               getAnyType, -  #507 = NameAndType        #506:#68      // getAnyType:()Lorg/jetbrains/kotlin/types/SimpleType;, -  #508 = Methodref          #505.#507     // org/jetbrains/kotlin/builtins/KotlinBuiltIns.getAnyType:()Lorg/jetbrains/kotlin/types/SimpleType;, -  #509 = Utf8               parcelableClass.builtIns.anyType, -  #510 = String             #509          // parcelableClass.builtIns.anyType, -  #511 = Utf8               in, -  #512 = String             #511          // in, -  #513 = Utf8               kotlin/TuplesKt, -  #514 = Class              #513          // kotlin/TuplesKt, -  #515 = Utf8               to, -  #516 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;, -  #517 = NameAndType        #515:#516     // to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;, -  #518 = Methodref          #514.#517     // kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;, -  #519 = Utf8               createMethod, -  #520 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/types/KotlinType;[Lkotlin/Pair;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, -  #521 = NameAndType        #519:#520     // createMethod:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/types/KotlinType;[Lkotlin/Pair;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, -  #522 = Methodref          #170.#521     // org/jetbrains/kotlin/android/parcel/ParcelableResolveExtension$Companion.createMethod:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/types/KotlinType;[Lkotlin/Pair;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, -  #523 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1, -  #524 = Class              #523          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1, -  #525 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #526 = NameAndType        #183:#525     // "<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #527 = Methodref          #524.#526     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1."<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #528 = Utf8               creatorAsmType, -  #529 = Utf8               creatorClass, -  #530 = Utf8               Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;, -  #531 = Utf8               android/os/Parcelable$Creator, -  #532 = String             #531          // android/os/Parcelable$Creator, -  #533 = Utf8               v, -  #534 = Utf8               Lorg/jetbrains/kotlin/codegen/ClassBuilder;, -  #535 = NameAndType        #533:#534     // v:Lorg/jetbrains/kotlin/codegen/ClassBuilder;, -  #536 = Fieldref           #41.#535      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.v:Lorg/jetbrains/kotlin/codegen/ClassBuilder;, -  #537 = Utf8               org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin, -  #538 = Class              #537          // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin, -  #539 = Utf8               NO_ORIGIN, -  #540 = Utf8               Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;, -  #541 = NameAndType        #539:#540     // NO_ORIGIN:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;, -  #542 = Fieldref           #538.#541     // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin.NO_ORIGIN:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;, -  #543 = Utf8               CREATOR, -  #544 = String             #543          // CREATOR, -  #545 = Utf8               creatorType, -  #546 = String             #545          // creatorType, -  #547 = Utf8               getDescriptor, -  #548 = NameAndType        #547:#180     // getDescriptor:()Ljava/lang/String;, -  #549 = Methodref          #232.#548     // org/jetbrains/org/objectweb/asm/Type.getDescriptor:()Ljava/lang/String;, -  #550 = Utf8               org/jetbrains/kotlin/codegen/ClassBuilder, -  #551 = Class              #550          // org/jetbrains/kotlin/codegen/ClassBuilder, -  #552 = Utf8               newField, -  #553 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/FieldVisitor;, -  #554 = NameAndType        #552:#553     // newField:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/FieldVisitor;, -  #555 = InterfaceMethodref #551.#554     // org/jetbrains/kotlin/codegen/ClassBuilder.newField:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/FieldVisitor;, -  #556 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;)V, -  #557 = Utf8               parcelableClass.defaultType, -  #558 = String             #557          // parcelableClass.defaultType, -  #559 = Utf8               $Creator, -  #560 = String             #559          // $Creator, -  #561 = Utf8               org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl, -  #562 = Class              #561          // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl, -  #563 = Utf8               Creator, -  #564 = String             #563          // Creator, -  #565 = Utf8               identifier, -  #566 = Utf8               (Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;, -  #567 = NameAndType        #565:#566     // identifier:(Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;, -  #568 = Methodref          #252.#567     // org/jetbrains/kotlin/name/Name.identifier:(Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;, -  #569 = Utf8               getSource, -  #570 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/SourceElement;, -  #571 = NameAndType        #569:#570     // getSource:()Lorg/jetbrains/kotlin/descriptors/SourceElement;, -  #572 = InterfaceMethodref #60.#571      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getSource:()Lorg/jetbrains/kotlin/descriptors/SourceElement;, -  #573 = Utf8               org/jetbrains/kotlin/storage/LockBasedStorageManager, -  #574 = Class              #573          // org/jetbrains/kotlin/storage/LockBasedStorageManager, -  #575 = Utf8               NO_LOCKS, -  #576 = Utf8               Lorg/jetbrains/kotlin/storage/StorageManager;, -  #577 = NameAndType        #575:#576     // NO_LOCKS:Lorg/jetbrains/kotlin/storage/StorageManager;, -  #578 = Fieldref           #574.#577     // org/jetbrains/kotlin/storage/LockBasedStorageManager.NO_LOCKS:Lorg/jetbrains/kotlin/storage/StorageManager;, -  #579 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/descriptors/ClassKind;Ljava/util/Collection;Lorg/jetbrains/kotlin/descriptors/SourceElement;ZLorg/jetbrains/kotlin/storage/StorageManager;)V, -  #580 = NameAndType        #183:#579     // "<init>":(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/descriptors/ClassKind;Ljava/util/Collection;Lorg/jetbrains/kotlin/descriptors/SourceElement;ZLorg/jetbrains/kotlin/storage/StorageManager;)V, -  #581 = Methodref          #562.#580     // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl."<init>":(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/descriptors/ClassKind;Ljava/util/Collection;Lorg/jetbrains/kotlin/descriptors/SourceElement;ZLorg/jetbrains/kotlin/storage/StorageManager;)V, -  #582 = Utf8               org/jetbrains/kotlin/resolve/scopes/MemberScope$Empty, -  #583 = Class              #582          // org/jetbrains/kotlin/resolve/scopes/MemberScope$Empty, -  #584 = Utf8               Lorg/jetbrains/kotlin/resolve/scopes/MemberScope$Empty;, -  #585 = NameAndType        #301:#584     // INSTANCE:Lorg/jetbrains/kotlin/resolve/scopes/MemberScope$Empty;, -  #586 = Fieldref           #583.#585     // org/jetbrains/kotlin/resolve/scopes/MemberScope$Empty.INSTANCE:Lorg/jetbrains/kotlin/resolve/scopes/MemberScope$Empty;, -  #587 = Utf8               org/jetbrains/kotlin/resolve/scopes/MemberScope, -  #588 = Class              #587          // org/jetbrains/kotlin/resolve/scopes/MemberScope, -  #589 = Utf8               kotlin/collections/SetsKt, -  #590 = Class              #589          // kotlin/collections/SetsKt, -  #591 = Utf8               emptySet, -  #592 = Utf8               ()Ljava/util/Set;, -  #593 = NameAndType        #591:#592     // emptySet:()Ljava/util/Set;, -  #594 = Methodref          #590.#593     // kotlin/collections/SetsKt.emptySet:()Ljava/util/Set;, -  #595 = Methodref          #562.#571     // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl.getSource:()Lorg/jetbrains/kotlin/descriptors/SourceElement;, -  #596 = Utf8               org/jetbrains/kotlin/resolve/DescriptorFactory, -  #597 = Class              #596          // org/jetbrains/kotlin/resolve/DescriptorFactory, -  #598 = Utf8               createPrimaryConstructorForObject, -  #599 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/SourceElement;)Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;, -  #600 = NameAndType        #598:#599     // createPrimaryConstructorForObject:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/SourceElement;)Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;, -  #601 = Methodref          #597.#600     // org/jetbrains/kotlin/resolve/DescriptorFactory.createPrimaryConstructorForObject:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/SourceElement;)Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;, -  #602 = Utf8               initialize, -  #603 = Utf8               (Lorg/jetbrains/kotlin/resolve/scopes/MemberScope;Ljava/util/Set;Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;)V, -  #604 = NameAndType        #602:#603     // initialize:(Lorg/jetbrains/kotlin/resolve/scopes/MemberScope;Ljava/util/Set;Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;)V, -  #605 = Methodref          #562.#604     // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl.initialize:(Lorg/jetbrains/kotlin/resolve/scopes/MemberScope;Ljava/util/Set;Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;)V, -  #606 = Utf8               getFactory, -  #607 = Utf8               ()Lorg/jetbrains/kotlin/codegen/ClassFileFactory;, -  #608 = NameAndType        #606:#607     // getFactory:()Lorg/jetbrains/kotlin/codegen/ClassFileFactory;, -  #609 = Methodref          #140.#608     // org/jetbrains/kotlin/codegen/state/GenerationState.getFactory:()Lorg/jetbrains/kotlin/codegen/ClassFileFactory;, -  #610 = Utf8               org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind, -  #611 = Class              #610          // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind, -  #612 = Utf8               OTHER, -  #613 = Utf8               Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;, -  #614 = NameAndType        #612:#613     // OTHER:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;, -  #615 = Fieldref           #611.#614     // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind.OTHER:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;, -  #616 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V, -  #617 = NameAndType        #183:#616     // "<init>":(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V, -  #618 = Methodref          #538.#617     // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin."<init>":(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V, -  #619 = String             #528          // creatorAsmType, -  #620 = Utf8               myClass, -  #621 = Utf8               Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;, -  #622 = NameAndType        #620:#621     // myClass:Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;, -  #623 = Fieldref           #41.#622      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.myClass:Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;, -  #624 = Utf8               codegen.myClass, -  #625 = String             #624          // codegen.myClass, -  #626 = Utf8               org/jetbrains/kotlin/psi/KtPureClassOrObject, -  #627 = Class              #626          // org/jetbrains/kotlin/psi/KtPureClassOrObject, -  #628 = Utf8               getContainingKtFile, -  #629 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtFile;, -  #630 = NameAndType        #628:#629     // getContainingKtFile:()Lorg/jetbrains/kotlin/psi/KtFile;, -  #631 = InterfaceMethodref #627.#630     // org/jetbrains/kotlin/psi/KtPureClassOrObject.getContainingKtFile:()Lorg/jetbrains/kotlin/psi/KtFile;, -  #632 = Utf8               com/intellij/psi/PsiFile, -  #633 = Class              #632          // com/intellij/psi/PsiFile, -  #634 = Utf8               org/jetbrains/kotlin/codegen/ClassFileFactory, -  #635 = Class              #634          // org/jetbrains/kotlin/codegen/ClassFileFactory, -  #636 = Utf8               newVisitor, -  #637 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/org/objectweb/asm/Type;Lcom/intellij/psi/PsiFile;)Lorg/jetbrains/kotlin/codegen/ClassBuilder;, -  #638 = NameAndType        #636:#637     // newVisitor:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/org/objectweb/asm/Type;Lcom/intellij/psi/PsiFile;)Lorg/jetbrains/kotlin/codegen/ClassBuilder;, -  #639 = Methodref          #635.#638     // org/jetbrains/kotlin/codegen/ClassFileFactory.newVisitor:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/org/objectweb/asm/Type;Lcom/intellij/psi/PsiFile;)Lorg/jetbrains/kotlin/codegen/ClassBuilder;, -  #640 = Utf8               codegen.state.factory.ne…myClass.containingKtFile), -  #641 = String             #640          // codegen.state.factory.ne…myClass.containingKtFile), -  #642 = Utf8               org/jetbrains/kotlin/codegen/context/ClassContext, -  #643 = Class              #642          // org/jetbrains/kotlin/codegen/context/ClassContext, -  #644 = Utf8               org/jetbrains/kotlin/codegen/OwnerKind, -  #645 = Class              #644          // org/jetbrains/kotlin/codegen/OwnerKind, -  #646 = Utf8               IMPLEMENTATION, -  #647 = Utf8               Lorg/jetbrains/kotlin/codegen/OwnerKind;, -  #648 = NameAndType        #646:#647     // IMPLEMENTATION:Lorg/jetbrains/kotlin/codegen/OwnerKind;, -  #649 = Fieldref           #645.#648     // org/jetbrains/kotlin/codegen/OwnerKind.IMPLEMENTATION:Lorg/jetbrains/kotlin/codegen/OwnerKind;, -  #650 = Utf8               getContext, -  #651 = Utf8               ()Lorg/jetbrains/kotlin/codegen/context/FieldOwnerContext;, -  #652 = NameAndType        #650:#651     // getContext:()Lorg/jetbrains/kotlin/codegen/context/FieldOwnerContext;, -  #653 = Methodref          #41.#652      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.getContext:()Lorg/jetbrains/kotlin/codegen/context/FieldOwnerContext;, -  #654 = Utf8               codegen.context, -  #655 = String             #654          // codegen.context, -  #656 = Utf8               org/jetbrains/kotlin/codegen/context/FieldOwnerContext, -  #657 = Class              #656          // org/jetbrains/kotlin/codegen/context/FieldOwnerContext, -  #658 = Utf8               getParentContext, -  #659 = Utf8               ()Lorg/jetbrains/kotlin/codegen/context/CodegenContext;, -  #660 = NameAndType        #658:#659     // getParentContext:()Lorg/jetbrains/kotlin/codegen/context/CodegenContext;, -  #661 = Methodref          #657.#660     // org/jetbrains/kotlin/codegen/context/FieldOwnerContext.getParentContext:()Lorg/jetbrains/kotlin/codegen/context/CodegenContext;, -  #662 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/OwnerKind;Lorg/jetbrains/kotlin/codegen/context/CodegenContext;Lorg/jetbrains/kotlin/codegen/context/LocalLookup;)V, -  #663 = NameAndType        #183:#662     // "<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/OwnerKind;Lorg/jetbrains/kotlin/codegen/context/CodegenContext;Lorg/jetbrains/kotlin/codegen/context/LocalLookup;)V, -  #664 = Methodref          #643.#663     // org/jetbrains/kotlin/codegen/context/ClassContext."<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/OwnerKind;Lorg/jetbrains/kotlin/codegen/context/CodegenContext;Lorg/jetbrains/kotlin/codegen/context/LocalLookup;)V, -  #665 = Utf8               getParentCodegen, -  #666 = Utf8               ()Lorg/jetbrains/kotlin/codegen/MemberCodegen;, -  #667 = NameAndType        #665:#666     // getParentCodegen:()Lorg/jetbrains/kotlin/codegen/MemberCodegen;, -  #668 = Methodref          #41.#667      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.getParentCodegen:()Lorg/jetbrains/kotlin/codegen/MemberCodegen;, -  #669 = Utf8               (Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;Lorg/jetbrains/kotlin/codegen/context/ClassContext;Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;Lorg/jetbrains/kotlin/codegen/MemberCodegen;Z)V, -  #670 = NameAndType        #183:#669     // "<init>":(Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;Lorg/jetbrains/kotlin/codegen/context/ClassContext;Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;Lorg/jetbrains/kotlin/codegen/MemberCodegen;Z)V, -  #671 = Methodref          #41.#670      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen."<init>":(Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;Lorg/jetbrains/kotlin/codegen/context/ClassContext;Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;Lorg/jetbrains/kotlin/codegen/MemberCodegen;Z)V, -  #672 = String             #3            // java/lang/Object, -  #673 = Utf8               java/lang/String, -  #674 = Class              #673          // java/lang/String, -  #675 = Utf8               defineClass, -  #676 = Utf8               (Lcom/intellij/psi/PsiElement;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V, -  #677 = NameAndType        #675:#676     // defineClass:(Lcom/intellij/psi/PsiElement;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V, -  #678 = InterfaceMethodref #551.#677     // org/jetbrains/kotlin/codegen/ClassBuilder.defineClass:(Lcom/intellij/psi/PsiElement;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V, -  #679 = Utf8               visitInnerClass, -  #680 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V, -  #681 = NameAndType        #679:#680     // visitInnerClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V, -  #682 = InterfaceMethodref #551.#681     // org/jetbrains/kotlin/codegen/ClassBuilder.visitInnerClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V, -  #683 = Utf8               codegen.state, -  #684 = String             #683          // codegen.state, -  #685 = Utf8               org/jetbrains/kotlin/codegen/WriteAnnotationUtilKt, -  #686 = Class              #685          // org/jetbrains/kotlin/codegen/WriteAnnotationUtilKt, -  #687 = Utf8               writeSyntheticClassMetadata, -  #688 = Utf8               (Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V, -  #689 = NameAndType        #687:#688     // writeSyntheticClassMetadata:(Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V, -  #690 = Methodref          #686.#689     // org/jetbrains/kotlin/codegen/WriteAnnotationUtilKt.writeSyntheticClassMetadata:(Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V, -  #691 = Utf8               writeCreatorConstructor, -  #692 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #693 = NameAndType        #691:#692     // writeCreatorConstructor:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #694 = Methodref          #2.#693       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.writeCreatorConstructor:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #695 = Utf8               writeNewArrayMethod, -  #696 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)V, -  #697 = NameAndType        #695:#696     // writeNewArrayMethod:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)V, -  #698 = Methodref          #2.#697       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.writeNewArrayMethod:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)V, -  #699 = NameAndType        #484:#485     // writeCreateFromParcel:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List;)V, -  #700 = Methodref          #2.#699       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.writeCreateFromParcel:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List;)V, -  #701 = Utf8               done, -  #702 = NameAndType        #701:#228     // done:()V, -  #703 = InterfaceMethodref #551.#702     // org/jetbrains/kotlin/codegen/ClassBuilder.done:()V, -  #704 = Utf8               codegenForCreator, -  #705 = Utf8               classContextForCreator, -  #706 = Utf8               Lorg/jetbrains/kotlin/codegen/context/ClassContext;, -  #707 = Utf8               classBuilderForCreator, -  #708 = Utf8               org/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl, -  #709 = Class              #708          // org/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl, -  #710 = Utf8               setReturnType, -  #711 = Utf8               (Lorg/jetbrains/kotlin/types/KotlinType;)V, -  #712 = NameAndType        #710:#711     // setReturnType:(Lorg/jetbrains/kotlin/types/KotlinType;)V, -  #713 = Methodref          #709.#712     // org/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl.setReturnType:(Lorg/jetbrains/kotlin/types/KotlinType;)V, -  #714 = Utf8               DescriptorFactory.create…ultType\n                }, -  #715 = String             #714          // DescriptorFactory.create…ultType\n                }, -  #716 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreatorConstructor$2, -  #717 = Class              #716          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreatorConstructor$2, -  #718 = Utf8               (Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #719 = NameAndType        #183:#718     // "<init>":(Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #720 = Methodref          #717.#719     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreatorConstructor$2."<init>":(Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #721 = Utf8               $this$apply, -  #722 = Utf8               Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;, -  #723 = Utf8               $i$a$-apply-ParcelableCodegenExtension$writeCreatorConstructor$1, -  #724 = Utf8               NEW_ARRAY, -  #725 = NameAndType        #724:#279     // NEW_ARRAY:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, -  #726 = Fieldref           #277.#725     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.NEW_ARRAY:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, -  #727 = Utf8               org/jetbrains/kotlin/types/Variance, -  #728 = Class              #727          // org/jetbrains/kotlin/types/Variance, -  #729 = Utf8               INVARIANT, -  #730 = Utf8               Lorg/jetbrains/kotlin/types/Variance;, -  #731 = NameAndType        #729:#730     // INVARIANT:Lorg/jetbrains/kotlin/types/Variance;, -  #732 = Fieldref           #728.#731     // org/jetbrains/kotlin/types/Variance.INVARIANT:Lorg/jetbrains/kotlin/types/Variance;, -  #733 = Utf8               getArrayType, -  #734 = Utf8               (Lorg/jetbrains/kotlin/types/Variance;Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/types/SimpleType;, -  #735 = NameAndType        #733:#734     // getArrayType:(Lorg/jetbrains/kotlin/types/Variance;Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/types/SimpleType;, -  #736 = Methodref          #505.#735     // org/jetbrains/kotlin/builtins/KotlinBuiltIns.getArrayType:(Lorg/jetbrains/kotlin/types/Variance;Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/types/SimpleType;, -  #737 = Utf8               builtIns.getArrayType(Va…ARIANT, builtIns.anyType), -  #738 = String             #737          // builtIns.getArrayType(Va…ARIANT, builtIns.anyType), -  #739 = Utf8               size, -  #740 = String             #739          // size, -  #741 = Utf8               getIntType, -  #742 = NameAndType        #741:#68      // getIntType:()Lorg/jetbrains/kotlin/types/SimpleType;, -  #743 = Methodref          #505.#742     // org/jetbrains/kotlin/builtins/KotlinBuiltIns.getIntType:()Lorg/jetbrains/kotlin/types/SimpleType;, -  #744 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeNewArrayMethod$1, -  #745 = Class              #744          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeNewArrayMethod$1, -  #746 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #747 = NameAndType        #183:#746     // "<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #748 = Methodref          #745.#747     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeNewArrayMethod$1."<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, -  #749 = Utf8               parcelableAsmType, -  #750 = Utf8               builtIns, -  #751 = Utf8               Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;, -  #752 = Utf8               (Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1<-Lorg/jetbrains/kotlin/codegen/ExpressionCodegen;Lkotlin/Unit;>;)V, -  #753 = Utf8               functionCodegen, -  #754 = Utf8               Lorg/jetbrains/kotlin/codegen/FunctionCodegen;, -  #755 = NameAndType        #753:#754     // functionCodegen:Lorg/jetbrains/kotlin/codegen/FunctionCodegen;, -  #756 = Fieldref           #41.#755      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.functionCodegen:Lorg/jetbrains/kotlin/codegen/FunctionCodegen;, -  #757 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$write$1, -  #758 = Class              #757          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$write$1, -  #759 = Utf8               (Lkotlin/jvm/functions/Function1;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V, -  #760 = NameAndType        #183:#759     // "<init>":(Lkotlin/jvm/functions/Function1;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V, -  #761 = Methodref          #758.#760     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$write$1."<init>":(Lkotlin/jvm/functions/Function1;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V, -  #762 = Utf8               org/jetbrains/kotlin/codegen/FunctionGenerationStrategy, -  #763 = Class              #762          // org/jetbrains/kotlin/codegen/FunctionGenerationStrategy, -  #764 = Utf8               org/jetbrains/kotlin/codegen/FunctionCodegen, -  #765 = Class              #764          // org/jetbrains/kotlin/codegen/FunctionCodegen, -  #766 = Utf8               generateMethod, -  #767 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/FunctionGenerationStrategy;)V, -  #768 = NameAndType        #766:#767     // generateMethod:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/FunctionGenerationStrategy;)V, -  #769 = Methodref          #765.#768     // org/jetbrains/kotlin/codegen/FunctionCodegen.generateMethod:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/FunctionGenerationStrategy;)V, -  #770 = Utf8               declarationOrigin, -  #771 = Utf8               $this$write, -  #772 = Utf8               Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;, -  #773 = Utf8               code, -  #774 = Utf8               Lkotlin/jvm/functions/Function1;, -  #775 = Methodref          #4.#229       // java/lang/Object."<init>":()V, -  #776 = Utf8               <clinit>, -  #777 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion;, -  #778 = Utf8               $this$hasCreatorField, -  #779 = String             #778          // $this$hasCreatorField, -  #780 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls, -  #781 = Class              #780          // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls, -  #782 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, -  #783 = NameAndType        #129:#782     // hasCreatorField:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, -  #784 = Methodref          #781.#783     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasCreatorField:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, -  #785 = Utf8               Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;, -  #786 = Utf8               $this$isParcelableClassDescriptor, -  #787 = String             #786          // $this$isParcelableClassDescriptor, -  #788 = NameAndType        #51:#782      // isParcelableClassDescriptor:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, -  #789 = Methodref          #781.#788     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.isParcelableClassDescriptor:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, -  #790 = Utf8               $this$hasSyntheticDescribeContents, -  #791 = String             #790          // $this$hasSyntheticDescribeContents, -  #792 = NameAndType        #107:#782     // hasSyntheticDescribeContents:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, -  #793 = Methodref          #781.#792     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasSyntheticDescribeContents:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, -  #794 = Utf8               $this$hasSyntheticWriteToParcel, -  #795 = String             #794          // $this$hasSyntheticWriteToParcel, -  #796 = NameAndType        #114:#782     // hasSyntheticWriteToParcel:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, -  #797 = Methodref          #781.#796     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasSyntheticWriteToParcel:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, -  #798 = Utf8               Lorg/jetbrains/annotations/Nullable;, -  #799 = Utf8               $this$findFunction, -  #800 = String             #799          // $this$findFunction, -  #801 = Utf8               componentKind, -  #802 = String             #801          // componentKind, -  #803 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, -  #804 = NameAndType        #282:#803     // findFunction:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, -  #805 = Methodref          #781.#804     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.findFunction:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, -  #806 = Utf8               applyFunction, -  #807 = Utf8               (Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, -  #808 = Utf8               (Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall<*>;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, -  #809 = Utf8               receiver, -  #810 = String             #809          // receiver, -  #811 = Utf8               resolvedCall, -  #812 = String             #811          // resolvedCall, -  #813 = Utf8               c, -  #814 = String             #813          // c, -  #815 = Utf8               org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls, -  #816 = Class              #815          // org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls, -  #817 = Utf8               (Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, -  #818 = NameAndType        #806:#817     // applyFunction:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, -  #819 = Methodref          #816.#818     // org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls.applyFunction:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, -  #820 = Utf8               Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;, -  #821 = Utf8               Lorg/jetbrains/kotlin/codegen/StackValue;, -  #822 = Utf8               Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;, -  #823 = Utf8               Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;, -  #824 = Utf8               applyProperty, -  #825 = NameAndType        #824:#817     // applyProperty:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, -  #826 = Methodref          #816.#825     // org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls.applyProperty:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, -  #827 = Utf8               access$getCompanionClassType, -  #828 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Pair;, -  #829 = NameAndType        #215:#216     // getCompanionClassType:(Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Pair;, -  #830 = Methodref          #2.#829       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.getCompanionClassType:(Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Pair;, -  #831 = Utf8               $this, -  #832 = Utf8               Lkotlin/Metadata;, -  #833 = Utf8               mv, -  #834 = Integer            1, -  #835 = Integer            17, -  #836 = Utf8               bv, -  #837 = Integer            0, -  #838 = Integer            3, -  #839 = Utf8               k, -  #840 = Utf8               xi, -  #841 = Integer            2, -  #842 = Utf8               d1, -  #843 = Utf8                r\n\n\n\n\n\n\n\n \n\n \n\n\n\n\n\n \n \n\n\n\n\n\n \n\n\t\n\n \n\n\n\n  22020:23B¢J0\t2\n0HJ$000\r2020HJ002\n020HJ020HJH0\t2\n020202020202 00HJ!0\t2\n0HJ@\"0\t2\n0202020202 00HJ #0\t2\n0202$0HJ*%0\t2\n0202020HJ&0*0HJ-'0\t*0(2\n02)0+0\t0*¢,HJ)-0\t*02\n02.00H¢/J;00\t*02\n02 002020H¢1R08VX¢¨4, -  #844 = Utf8               d2, -  #845 = Utf8               shouldGenerateClassSyntheticPartsInLightClassesMode, -  #846 = Utf8, -  #847 = Utf8               Lkotlin/Pair;, -  #848 = Utf8               Lkotlin/Function1;, -  #849 = Utf8               Lorg/jetbrains/kotlin/codegen/ExpressionCodegen;, -  #850 = Utf8               Lkotlin/ExtensionFunctionType;, -  #851 = Utf8               PropertyToSerialize, -  #852 = Utf8               android-extensions-compiler, -  #853 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion, -  #854 = Class              #853          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion, -  #855 = Utf8               (Lkotlin/jvm/internal/DefaultConstructorMarker;)V, -  #856 = NameAndType        #183:#855     // "<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V, -  #857 = Methodref          #854.#856     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V, -  #858 = NameAndType        #157:#777     // Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion;, -  #859 = Fieldref           #2.#858       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion;, -  #860 = Utf8               org/jetbrains/kotlin/name/FqName, -  #861 = Class              #860          // org/jetbrains/kotlin/name/FqName, -  #862 = Utf8               java/io/FileDescriptor, -  #863 = Class              #862          // java/io/FileDescriptor, -  #864 = Utf8               java/lang/Class, -  #865 = Class              #864          // java/lang/Class, -  #866 = Utf8               getCanonicalName, -  #867 = NameAndType        #866:#180     // getCanonicalName:()Ljava/lang/String;, -  #868 = Methodref          #865.#867     // java/lang/Class.getCanonicalName:()Ljava/lang/String;, -  #869 = Methodref          #861.#185     // org/jetbrains/kotlin/name/FqName."<init>":(Ljava/lang/String;)V, -  #870 = Utf8               ParcelableCodegenExtension.kt, -  #871 = Utf8               Code, -  #872 = Utf8               LineNumberTable, -  #873 = Utf8               LocalVariableTable, -  #874 = Utf8               Deprecated, -  #875 = Utf8               RuntimeVisibleAnnotations, -  #876 = Utf8               RuntimeInvisibleParameterAnnotations, -  #877 = Utf8               StackMapTable, -  #878 = Utf8               Signature, -  #879 = Utf8               RuntimeInvisibleAnnotations, -  #880 = Utf8               InnerClasses, -  #881 = Utf8               SourceFile, -  #882 = Utf8               SourceDebugExtension, +  #256 = Utf8               shortName.asString(), +  #257 = String             #256          // shortName.asString(), +  #258 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V, +  #259 = NameAndType        #183:#258     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V, +  #260 = Methodref          #225.#259     // kotlin/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V, +  #261 = Utf8               shortName, +  #262 = Utf8               Lorg/jetbrains/kotlin/name/Name;, +  #263 = Utf8               containerAsmType, +  #264 = Utf8               Lorg/jetbrains/org/objectweb/asm/Type;, +  #265 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Unit;, +  #266 = Utf8               typeMapper, +  #267 = Utf8               Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;, +  #268 = NameAndType        #266:#267     // typeMapper:Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;, +  #269 = Fieldref           #41.#268      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.typeMapper:Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;, +  #270 = Utf8               this.defaultType, +  #271 = String             #270          // this.defaultType, +  #272 = Utf8               org/jetbrains/kotlin/codegen/state/KotlinTypeMapper, +  #273 = Class              #272          // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper, +  #274 = Utf8               mapType$default, +  #275 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;, +  #276 = NameAndType        #274:#275     // mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;, +  #277 = Methodref          #273.#276     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.mapType$default:(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/codegen/signature/JvmSignatureWriter;Lorg/jetbrains/kotlin/load/kotlin/TypeMappingMode;ILjava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/Type;, +  #278 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind, +  #279 = Class              #278          // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind, +  #280 = Utf8               WRITE_TO_PARCEL, +  #281 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, +  #282 = NameAndType        #280:#281     // WRITE_TO_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, +  #283 = Fieldref           #279.#282     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.WRITE_TO_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, +  #284 = Utf8               findFunction, +  #285 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, +  #286 = NameAndType        #284:#285     // findFunction:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, +  #287 = Methodref          #2.#286       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.findFunction:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, +  #288 = Utf8               org/jetbrains/kotlin/descriptors/FunctionDescriptor, +  #289 = Class              #288          // org/jetbrains/kotlin/descriptors/FunctionDescriptor, +  #290 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1, +  #291 = Class              #290          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1, +  #292 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #293 = NameAndType        #183:#292     // "<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #294 = Methodref          #291.#293     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1."<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #295 = Utf8               kotlin/jvm/functions/Function1, +  #296 = Class              #295          // kotlin/jvm/functions/Function1, +  #297 = Utf8               write, +  #298 = Utf8               (Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1;)V, +  #299 = NameAndType        #297:#298     // write:(Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1;)V, +  #300 = Methodref          #2.#299       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.write:(Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1;)V, +  #301 = Utf8               kotlin/Unit, +  #302 = Class              #301          // kotlin/Unit, +  #303 = Utf8               INSTANCE, +  #304 = Utf8               Lkotlin/Unit;, +  #305 = NameAndType        #303:#304     // INSTANCE:Lkotlin/Unit;, +  #306 = Fieldref           #302.#305     // kotlin/Unit.INSTANCE:Lkotlin/Unit;, +  #307 = Utf8               $this$writeWriteToParcel, +  #308 = Utf8               properties, +  #309 = Utf8               parcelAsmType, +  #310 = Utf8               org/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor, +  #311 = Class              #310          // org/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor, +  #312 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;)Lkotlin/Unit;, +  #313 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize, +  #314 = Class              #313          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize, +  #315 = Utf8               getType, +  #316 = Utf8               ()Lorg/jetbrains/kotlin/types/KotlinType;, +  #317 = NameAndType        #315:#316     // getType:()Lorg/jetbrains/kotlin/types/KotlinType;, +  #318 = Methodref          #314.#317     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize.getType:()Lorg/jetbrains/kotlin/types/KotlinType;, +  #319 = Utf8               containsFileDescriptor, +  #320 = NameAndType        #319:#104     // containsFileDescriptor:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, +  #321 = Methodref          #2.#320       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.containsFileDescriptor:(Lorg/jetbrains/kotlin/types/KotlinType;)Z, +  #322 = Utf8               DESCRIBE_CONTENTS, +  #323 = NameAndType        #322:#281     // DESCRIBE_CONTENTS:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, +  #324 = Fieldref           #279.#323     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.DESCRIBE_CONTENTS:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, +  #325 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1, +  #326 = Class              #325          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1, +  #327 = Utf8               (Z)V, +  #328 = NameAndType        #183:#327     // "<init>":(Z)V, +  #329 = Methodref          #326.#328     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1."<init>":(Z)V, +  #330 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;, +  #331 = Utf8               $i$a$-any-ParcelableCodegenExtension$writeDescribeContentsFunction$hasFileDescriptorAnywhere$1, +  #332 = Utf8               hasFileDescriptorAnywhere, +  #333 = Utf8               Z, +  #334 = Utf8               $this$writeDescribeContentsFunction, +  #335 = Utf8               getConstructor, +  #336 = Utf8               ()Lorg/jetbrains/kotlin/types/TypeConstructor;, +  #337 = NameAndType        #335:#336     // getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;, +  #338 = Methodref          #72.#337      // org/jetbrains/kotlin/types/KotlinType.getConstructor:()Lorg/jetbrains/kotlin/types/TypeConstructor;, +  #339 = Utf8               org/jetbrains/kotlin/types/TypeConstructor, +  #340 = Class              #339          // org/jetbrains/kotlin/types/TypeConstructor, +  #341 = Utf8               getDeclarationDescriptor, +  #342 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, +  #343 = NameAndType        #341:#342     // getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, +  #344 = InterfaceMethodref #340.#343     // org/jetbrains/kotlin/types/TypeConstructor.getDeclarationDescriptor:()Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, +  #345 = Utf8               getFqNameSafe, +  #346 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;, +  #347 = NameAndType        #345:#346     // getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;, +  #348 = Methodref          #164.#347     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getFqNameSafe:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/name/FqName;, +  #349 = Utf8               FILE_DESCRIPTOR_FQNAME, +  #350 = Utf8               Lorg/jetbrains/kotlin/name/FqName;, +  #351 = NameAndType        #349:#350     // FILE_DESCRIPTOR_FQNAME:Lorg/jetbrains/kotlin/name/FqName;, +  #352 = Fieldref           #2.#351       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.FILE_DESCRIPTOR_FQNAME:Lorg/jetbrains/kotlin/name/FqName;, +  #353 = Utf8               getArguments, +  #354 = Utf8               ()Ljava/util/List;, +  #355 = NameAndType        #353:#354     // getArguments:()Ljava/util/List;, +  #356 = Methodref          #72.#355      // org/jetbrains/kotlin/types/KotlinType.getArguments:()Ljava/util/List;, +  #357 = Utf8               org/jetbrains/kotlin/types/TypeProjection, +  #358 = Class              #357          // org/jetbrains/kotlin/types/TypeProjection, +  #359 = InterfaceMethodref #358.#317     // org/jetbrains/kotlin/types/TypeProjection.getType:()Lorg/jetbrains/kotlin/types/KotlinType;, +  #360 = Utf8               it.type, +  #361 = String             #360          // it.type, +  #362 = Utf8               Lorg/jetbrains/kotlin/types/TypeProjection;, +  #363 = Utf8               $i$a$-any-ParcelableCodegenExtension$containsFileDescriptor$1, +  #364 = Utf8               declarationDescriptor, +  #365 = Utf8               Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;, +  #366 = Utf8               $this$containsFileDescriptor, +  #367 = Utf8               org/jetbrains/kotlin/descriptors/ClassifierDescriptor, +  #368 = Class              #367          // org/jetbrains/kotlin/descriptors/ClassifierDescriptor, +  #369 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;, +  #370 = Utf8               getKind, +  #371 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/ClassKind;, +  #372 = NameAndType        #370:#371     // getKind:()Lorg/jetbrains/kotlin/descriptors/ClassKind;, +  #373 = InterfaceMethodref #60.#372      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getKind:()Lorg/jetbrains/kotlin/descriptors/ClassKind;, +  #374 = Utf8               org/jetbrains/kotlin/descriptors/ClassKind, +  #375 = Class              #374          // org/jetbrains/kotlin/descriptors/ClassKind, +  #376 = Utf8               CLASS, +  #377 = Utf8               Lorg/jetbrains/kotlin/descriptors/ClassKind;, +  #378 = NameAndType        #376:#377     // CLASS:Lorg/jetbrains/kotlin/descriptors/ClassKind;, +  #379 = Fieldref           #375.#378     // org/jetbrains/kotlin/descriptors/ClassKind.CLASS:Lorg/jetbrains/kotlin/descriptors/ClassKind;, +  #380 = Utf8               kotlin/collections/CollectionsKt, +  #381 = Class              #380          // kotlin/collections/CollectionsKt, +  #382 = Utf8               emptyList, +  #383 = NameAndType        #382:#354     // emptyList:()Ljava/util/List;, +  #384 = Methodref          #381.#383     // kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;, +  #385 = Utf8               getConstructors, +  #386 = Utf8               ()Ljava/util/Collection;, +  #387 = NameAndType        #385:#386     // getConstructors:()Ljava/util/Collection;, +  #388 = InterfaceMethodref #60.#387      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getConstructors:()Ljava/util/Collection;, +  #389 = Utf8               parcelableClass.constructors, +  #390 = String             #389          // parcelableClass.constructors, +  #391 = Utf8               org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor, +  #392 = Class              #391          // org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor, +  #393 = Utf8               isPrimary, +  #394 = NameAndType        #393:#35      // isPrimary:()Z, +  #395 = InterfaceMethodref #392.#394     // org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor.isPrimary:()Z, +  #396 = Utf8               getValueParameters, +  #397 = NameAndType        #396:#354     // getValueParameters:()Ljava/util/List;, +  #398 = InterfaceMethodref #392.#397     // org/jetbrains/kotlin/descriptors/ClassConstructorDescriptor.getValueParameters:()Ljava/util/List;, +  #399 = Utf8               constructor.valueParameters, +  #400 = String             #399          // constructor.valueParameters, +  #401 = Utf8               java/util/ArrayList, +  #402 = Class              #401          // java/util/ArrayList, +  #403 = Methodref          #402.#229     // java/util/ArrayList."<init>":()V, +  #404 = Utf8               org/jetbrains/kotlin/descriptors/ValueParameterDescriptor, +  #405 = Class              #404          // org/jetbrains/kotlin/descriptors/ValueParameterDescriptor, +  #406 = Utf8               bindingContext, +  #407 = Utf8               Lorg/jetbrains/kotlin/resolve/BindingContext;, +  #408 = NameAndType        #406:#407     // bindingContext:Lorg/jetbrains/kotlin/resolve/BindingContext;, +  #409 = Fieldref           #41.#408      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.bindingContext:Lorg/jetbrains/kotlin/resolve/BindingContext;, +  #410 = Utf8               org/jetbrains/kotlin/resolve/BindingContext, +  #411 = Class              #410          // org/jetbrains/kotlin/resolve/BindingContext, +  #412 = Utf8               VALUE_PARAMETER_AS_PROPERTY, +  #413 = Utf8               Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, +  #414 = NameAndType        #412:#413     // VALUE_PARAMETER_AS_PROPERTY:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, +  #415 = Fieldref           #411.#414     // org/jetbrains/kotlin/resolve/BindingContext.VALUE_PARAMETER_AS_PROPERTY:Lorg/jetbrains/kotlin/util/slicedMap/WritableSlice;, +  #416 = Utf8               org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice, +  #417 = Class              #416          // org/jetbrains/kotlin/util/slicedMap/ReadOnlySlice, +  #418 = Utf8               get, +  #419 = Utf8               (Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;, +  #420 = NameAndType        #418:#419     // get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;, +  #421 = InterfaceMethodref #411.#420     // org/jetbrains/kotlin/resolve/BindingContext.get:(Lorg/jetbrains/kotlin/util/slicedMap/ReadOnlySlice;Ljava/lang/Object;)Ljava/lang/Object;, +  #422 = Utf8               org/jetbrains/kotlin/descriptors/PropertyDescriptor, +  #423 = Class              #422          // org/jetbrains/kotlin/descriptors/PropertyDescriptor, +  #424 = Utf8               add, +  #425 = Utf8               (Ljava/lang/Object;)Z, +  #426 = NameAndType        #424:#425     // add:(Ljava/lang/Object;)Z, +  #427 = InterfaceMethodref #84.#426      // java/util/Collection.add:(Ljava/lang/Object;)Z, +  #428 = Utf8               getAnnotations, +  #429 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, +  #430 = NameAndType        #428:#429     // getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, +  #431 = InterfaceMethodref #60.#430      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, +  #432 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt, +  #433 = Class              #432          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt, +  #434 = Utf8               getTypeParcelers, +  #435 = Utf8               (Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;, +  #436 = NameAndType        #434:#435     // getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;, +  #437 = Methodref          #433.#436     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtensionKt.getTypeParcelers:(Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;)Ljava/util/List;, +  #438 = Utf8               collectionSizeOrDefault, +  #439 = Utf8               (Ljava/lang/Iterable;I)I, +  #440 = NameAndType        #438:#439     // collectionSizeOrDefault:(Ljava/lang/Iterable;I)I, +  #441 = Methodref          #381.#440     // kotlin/collections/CollectionsKt.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I, +  #442 = Utf8               (I)V, +  #443 = NameAndType        #183:#442     // "<init>":(I)V, +  #444 = Methodref          #402.#443     // java/util/ArrayList."<init>":(I)V, +  #445 = InterfaceMethodref #423.#220     // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getName:()Lorg/jetbrains/kotlin/name/Name;, +  #446 = Utf8               it.name.asString(), +  #447 = String             #446          // it.name.asString(), +  #448 = InterfaceMethodref #423.#317     // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getType:()Lorg/jetbrains/kotlin/types/KotlinType;, +  #449 = InterfaceMethodref #423.#430     // org/jetbrains/kotlin/descriptors/PropertyDescriptor.getAnnotations:()Lorg/jetbrains/kotlin/descriptors/annotations/Annotations;, +  #450 = Utf8               plus, +  #451 = Utf8               (Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;, +  #452 = NameAndType        #450:#451     // plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;, +  #453 = Methodref          #381.#452     // kotlin/collections/CollectionsKt.plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;, +  #454 = Utf8               (Ljava/lang/String;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)V, +  #455 = NameAndType        #183:#454     // "<init>":(Ljava/lang/String;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)V, +  #456 = Methodref          #314.#455     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize."<init>":(Ljava/lang/String;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)V, +  #457 = Utf8               Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;, +  #458 = Utf8               $i$a$-firstOrNull-ParcelableCodegenExtension$getPropertiesToSerialize$constructor$1, +  #459 = Utf8               $this$firstOrNull$iv, +  #460 = Utf8               $i$f$firstOrNull, +  #461 = Utf8               param, +  #462 = Utf8               Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;, +  #463 = Utf8               $i$a$-mapNotNull-ParcelableCodegenExtension$getPropertiesToSerialize$propertiesToSerialize$1, +  #464 = Utf8               it$iv$iv, +  #465 = Utf8               $i$a$-let-CollectionsKt___CollectionsKt$mapNotNullTo$1$1$iv$iv, +  #466 = Utf8               element$iv$iv, +  #467 = Utf8               $i$a$-forEach-CollectionsKt___CollectionsKt$mapNotNullTo$1$iv$iv, +  #468 = Utf8               element$iv$iv$iv, +  #469 = Utf8               $this$forEach$iv$iv$iv, +  #470 = Utf8               $i$f$forEach, +  #471 = Utf8               $this$mapNotNullTo$iv$iv, +  #472 = Utf8               destination$iv$iv, +  #473 = Utf8               Ljava/util/Collection;, +  #474 = Utf8               $i$f$mapNotNullTo, +  #475 = Utf8               $this$mapNotNull$iv, +  #476 = Utf8               $i$f$mapNotNull, +  #477 = Utf8               Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;, +  #478 = Utf8               $i$a$-map-ParcelableCodegenExtension$getPropertiesToSerialize$1, +  #479 = Utf8               item$iv$iv, +  #480 = Utf8               $this$mapTo$iv$iv, +  #481 = Utf8               $i$f$mapTo, +  #482 = Utf8               $this$map$iv, +  #483 = Utf8               $i$f$map, +  #484 = Utf8               classParcelers, +  #485 = Utf8               constructor, +  #486 = Utf8               writeCreateFromParcel, +  #487 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List;)V, +  #488 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;)V, +  #489 = Utf8               mapType, +  #490 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;)Lorg/jetbrains/org/objectweb/asm/Type;, +  #491 = NameAndType        #489:#490     // mapType:(Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;)Lorg/jetbrains/org/objectweb/asm/Type;, +  #492 = Methodref          #273.#491     // org/jetbrains/kotlin/codegen/state/KotlinTypeMapper.mapType:(Lorg/jetbrains/kotlin/descriptors/ClassifierDescriptor;)Lorg/jetbrains/org/objectweb/asm/Type;, +  #493 = Utf8               CREATE_FROM_PARCEL, +  #494 = NameAndType        #493:#281     // CREATE_FROM_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, +  #495 = Fieldref           #279.#494     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.CREATE_FROM_PARCEL:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, +  #496 = Utf8               org/jetbrains/kotlin/descriptors/Modality, +  #497 = Class              #496          // org/jetbrains/kotlin/descriptors/Modality, +  #498 = Utf8               FINAL, +  #499 = Utf8               Lorg/jetbrains/kotlin/descriptors/Modality;, +  #500 = NameAndType        #498:#499     // FINAL:Lorg/jetbrains/kotlin/descriptors/Modality;, +  #501 = Fieldref           #497.#500     // org/jetbrains/kotlin/descriptors/Modality.FINAL:Lorg/jetbrains/kotlin/descriptors/Modality;, +  #502 = Utf8               getBuiltIns, +  #503 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;, +  #504 = NameAndType        #502:#503     // getBuiltIns:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;, +  #505 = Methodref          #164.#504     // org/jetbrains/kotlin/resolve/descriptorUtil/DescriptorUtilsKt.getBuiltIns:(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;, +  #506 = Utf8               org/jetbrains/kotlin/builtins/KotlinBuiltIns, +  #507 = Class              #506          // org/jetbrains/kotlin/builtins/KotlinBuiltIns, +  #508 = Utf8               getAnyType, +  #509 = NameAndType        #508:#68      // getAnyType:()Lorg/jetbrains/kotlin/types/SimpleType;, +  #510 = Methodref          #507.#509     // org/jetbrains/kotlin/builtins/KotlinBuiltIns.getAnyType:()Lorg/jetbrains/kotlin/types/SimpleType;, +  #511 = Utf8               parcelableClass.builtIns.anyType, +  #512 = String             #511          // parcelableClass.builtIns.anyType, +  #513 = Utf8               in, +  #514 = String             #513          // in, +  #515 = Utf8               kotlin/TuplesKt, +  #516 = Class              #515          // kotlin/TuplesKt, +  #517 = Utf8               to, +  #518 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;, +  #519 = NameAndType        #517:#518     // to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;, +  #520 = Methodref          #516.#519     // kotlin/TuplesKt.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;, +  #521 = Utf8               createMethod, +  #522 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/types/KotlinType;[Lkotlin/Pair;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, +  #523 = NameAndType        #521:#522     // createMethod:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/types/KotlinType;[Lkotlin/Pair;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, +  #524 = Methodref          #170.#523     // org/jetbrains/kotlin/android/parcel/ParcelableResolveExtension$Companion.createMethod:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/types/KotlinType;[Lkotlin/Pair;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, +  #525 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1, +  #526 = Class              #525          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1, +  #527 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #528 = NameAndType        #183:#527     // "<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #529 = Methodref          #526.#528     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1."<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #530 = Utf8               creatorAsmType, +  #531 = Utf8               creatorClass, +  #532 = Utf8               Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;, +  #533 = Utf8               android/os/Parcelable$Creator, +  #534 = String             #533          // android/os/Parcelable$Creator, +  #535 = Utf8               v, +  #536 = Utf8               Lorg/jetbrains/kotlin/codegen/ClassBuilder;, +  #537 = NameAndType        #535:#536     // v:Lorg/jetbrains/kotlin/codegen/ClassBuilder;, +  #538 = Fieldref           #41.#537      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.v:Lorg/jetbrains/kotlin/codegen/ClassBuilder;, +  #539 = Utf8               org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin, +  #540 = Class              #539          // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin, +  #541 = Utf8               NO_ORIGIN, +  #542 = Utf8               Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;, +  #543 = NameAndType        #541:#542     // NO_ORIGIN:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;, +  #544 = Fieldref           #540.#543     // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin.NO_ORIGIN:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;, +  #545 = Utf8               CREATOR, +  #546 = String             #545          // CREATOR, +  #547 = Utf8               creatorType, +  #548 = String             #547          // creatorType, +  #549 = Utf8               getDescriptor, +  #550 = NameAndType        #549:#180     // getDescriptor:()Ljava/lang/String;, +  #551 = Methodref          #232.#550     // org/jetbrains/org/objectweb/asm/Type.getDescriptor:()Ljava/lang/String;, +  #552 = Utf8               org/jetbrains/kotlin/codegen/ClassBuilder, +  #553 = Class              #552          // org/jetbrains/kotlin/codegen/ClassBuilder, +  #554 = Utf8               newField, +  #555 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/FieldVisitor;, +  #556 = NameAndType        #554:#555     // newField:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/FieldVisitor;, +  #557 = InterfaceMethodref #553.#556     // org/jetbrains/kotlin/codegen/ClassBuilder.newField:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/jetbrains/org/objectweb/asm/FieldVisitor;, +  #558 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List<Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize;>;)V, +  #559 = Utf8               parcelableClass.defaultType, +  #560 = String             #559          // parcelableClass.defaultType, +  #561 = Utf8               $Creator, +  #562 = String             #561          // $Creator, +  #563 = Utf8               org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl, +  #564 = Class              #563          // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl, +  #565 = Utf8               Creator, +  #566 = String             #565          // Creator, +  #567 = Utf8               identifier, +  #568 = Utf8               (Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;, +  #569 = NameAndType        #567:#568     // identifier:(Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;, +  #570 = Methodref          #252.#569     // org/jetbrains/kotlin/name/Name.identifier:(Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;, +  #571 = Utf8               getSource, +  #572 = Utf8               ()Lorg/jetbrains/kotlin/descriptors/SourceElement;, +  #573 = NameAndType        #571:#572     // getSource:()Lorg/jetbrains/kotlin/descriptors/SourceElement;, +  #574 = InterfaceMethodref #60.#573      // org/jetbrains/kotlin/descriptors/ClassDescriptor.getSource:()Lorg/jetbrains/kotlin/descriptors/SourceElement;, +  #575 = Utf8               org/jetbrains/kotlin/storage/LockBasedStorageManager, +  #576 = Class              #575          // org/jetbrains/kotlin/storage/LockBasedStorageManager, +  #577 = Utf8               NO_LOCKS, +  #578 = Utf8               Lorg/jetbrains/kotlin/storage/StorageManager;, +  #579 = NameAndType        #577:#578     // NO_LOCKS:Lorg/jetbrains/kotlin/storage/StorageManager;, +  #580 = Fieldref           #576.#579     // org/jetbrains/kotlin/storage/LockBasedStorageManager.NO_LOCKS:Lorg/jetbrains/kotlin/storage/StorageManager;, +  #581 = Utf8               (Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/descriptors/ClassKind;Ljava/util/Collection;Lorg/jetbrains/kotlin/descriptors/SourceElement;ZLorg/jetbrains/kotlin/storage/StorageManager;)V, +  #582 = NameAndType        #183:#581     // "<init>":(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/descriptors/ClassKind;Ljava/util/Collection;Lorg/jetbrains/kotlin/descriptors/SourceElement;ZLorg/jetbrains/kotlin/storage/StorageManager;)V, +  #583 = Methodref          #564.#582     // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl."<init>":(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/name/Name;Lorg/jetbrains/kotlin/descriptors/Modality;Lorg/jetbrains/kotlin/descriptors/ClassKind;Ljava/util/Collection;Lorg/jetbrains/kotlin/descriptors/SourceElement;ZLorg/jetbrains/kotlin/storage/StorageManager;)V, +  #584 = Utf8               org/jetbrains/kotlin/resolve/scopes/MemberScope$Empty, +  #585 = Class              #584          // org/jetbrains/kotlin/resolve/scopes/MemberScope$Empty, +  #586 = Utf8               Lorg/jetbrains/kotlin/resolve/scopes/MemberScope$Empty;, +  #587 = NameAndType        #303:#586     // INSTANCE:Lorg/jetbrains/kotlin/resolve/scopes/MemberScope$Empty;, +  #588 = Fieldref           #585.#587     // org/jetbrains/kotlin/resolve/scopes/MemberScope$Empty.INSTANCE:Lorg/jetbrains/kotlin/resolve/scopes/MemberScope$Empty;, +  #589 = Utf8               org/jetbrains/kotlin/resolve/scopes/MemberScope, +  #590 = Class              #589          // org/jetbrains/kotlin/resolve/scopes/MemberScope, +  #591 = Utf8               kotlin/collections/SetsKt, +  #592 = Class              #591          // kotlin/collections/SetsKt, +  #593 = Utf8               emptySet, +  #594 = Utf8               ()Ljava/util/Set;, +  #595 = NameAndType        #593:#594     // emptySet:()Ljava/util/Set;, +  #596 = Methodref          #592.#595     // kotlin/collections/SetsKt.emptySet:()Ljava/util/Set;, +  #597 = Methodref          #564.#573     // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl.getSource:()Lorg/jetbrains/kotlin/descriptors/SourceElement;, +  #598 = Utf8               org/jetbrains/kotlin/resolve/DescriptorFactory, +  #599 = Class              #598          // org/jetbrains/kotlin/resolve/DescriptorFactory, +  #600 = Utf8               createPrimaryConstructorForObject, +  #601 = Utf8               (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/SourceElement;)Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;, +  #602 = NameAndType        #600:#601     // createPrimaryConstructorForObject:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/SourceElement;)Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;, +  #603 = Methodref          #599.#602     // org/jetbrains/kotlin/resolve/DescriptorFactory.createPrimaryConstructorForObject:(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/SourceElement;)Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;, +  #604 = Utf8               initialize, +  #605 = Utf8               (Lorg/jetbrains/kotlin/resolve/scopes/MemberScope;Ljava/util/Set;Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;)V, +  #606 = NameAndType        #604:#605     // initialize:(Lorg/jetbrains/kotlin/resolve/scopes/MemberScope;Ljava/util/Set;Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;)V, +  #607 = Methodref          #564.#606     // org/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl.initialize:(Lorg/jetbrains/kotlin/resolve/scopes/MemberScope;Ljava/util/Set;Lorg/jetbrains/kotlin/descriptors/ClassConstructorDescriptor;)V, +  #608 = Utf8               getFactory, +  #609 = Utf8               ()Lorg/jetbrains/kotlin/codegen/ClassFileFactory;, +  #610 = NameAndType        #608:#609     // getFactory:()Lorg/jetbrains/kotlin/codegen/ClassFileFactory;, +  #611 = Methodref          #140.#610     // org/jetbrains/kotlin/codegen/state/GenerationState.getFactory:()Lorg/jetbrains/kotlin/codegen/ClassFileFactory;, +  #612 = Utf8               org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind, +  #613 = Class              #612          // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind, +  #614 = Utf8               OTHER, +  #615 = Utf8               Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;, +  #616 = NameAndType        #614:#615     // OTHER:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;, +  #617 = Fieldref           #613.#616     // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind.OTHER:Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;, +  #618 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V, +  #619 = NameAndType        #183:#618     // "<init>":(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V, +  #620 = Methodref          #540.#619     // org/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin."<init>":(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOriginKind;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V, +  #621 = String             #530          // creatorAsmType, +  #622 = Utf8               myClass, +  #623 = Utf8               Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;, +  #624 = NameAndType        #622:#623     // myClass:Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;, +  #625 = Fieldref           #41.#624      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.myClass:Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;, +  #626 = Utf8               codegen.myClass, +  #627 = String             #626          // codegen.myClass, +  #628 = Utf8               org/jetbrains/kotlin/psi/KtPureClassOrObject, +  #629 = Class              #628          // org/jetbrains/kotlin/psi/KtPureClassOrObject, +  #630 = Utf8               getContainingKtFile, +  #631 = Utf8               ()Lorg/jetbrains/kotlin/psi/KtFile;, +  #632 = NameAndType        #630:#631     // getContainingKtFile:()Lorg/jetbrains/kotlin/psi/KtFile;, +  #633 = InterfaceMethodref #629.#632     // org/jetbrains/kotlin/psi/KtPureClassOrObject.getContainingKtFile:()Lorg/jetbrains/kotlin/psi/KtFile;, +  #634 = Utf8               com/intellij/psi/PsiFile, +  #635 = Class              #634          // com/intellij/psi/PsiFile, +  #636 = Utf8               org/jetbrains/kotlin/codegen/ClassFileFactory, +  #637 = Class              #636          // org/jetbrains/kotlin/codegen/ClassFileFactory, +  #638 = Utf8               newVisitor, +  #639 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/org/objectweb/asm/Type;Lcom/intellij/psi/PsiFile;)Lorg/jetbrains/kotlin/codegen/ClassBuilder;, +  #640 = NameAndType        #638:#639     // newVisitor:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/org/objectweb/asm/Type;Lcom/intellij/psi/PsiFile;)Lorg/jetbrains/kotlin/codegen/ClassBuilder;, +  #641 = Methodref          #637.#640     // org/jetbrains/kotlin/codegen/ClassFileFactory.newVisitor:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/org/objectweb/asm/Type;Lcom/intellij/psi/PsiFile;)Lorg/jetbrains/kotlin/codegen/ClassBuilder;, +  #642 = Utf8               codegen.state.factory.ne…myClass.containingKtFile), +  #643 = String             #642          // codegen.state.factory.ne…myClass.containingKtFile), +  #644 = Utf8               org/jetbrains/kotlin/codegen/context/ClassContext, +  #645 = Class              #644          // org/jetbrains/kotlin/codegen/context/ClassContext, +  #646 = Utf8               org/jetbrains/kotlin/codegen/OwnerKind, +  #647 = Class              #646          // org/jetbrains/kotlin/codegen/OwnerKind, +  #648 = Utf8               IMPLEMENTATION, +  #649 = Utf8               Lorg/jetbrains/kotlin/codegen/OwnerKind;, +  #650 = NameAndType        #648:#649     // IMPLEMENTATION:Lorg/jetbrains/kotlin/codegen/OwnerKind;, +  #651 = Fieldref           #647.#650     // org/jetbrains/kotlin/codegen/OwnerKind.IMPLEMENTATION:Lorg/jetbrains/kotlin/codegen/OwnerKind;, +  #652 = Utf8               getContext, +  #653 = Utf8               ()Lorg/jetbrains/kotlin/codegen/context/FieldOwnerContext;, +  #654 = NameAndType        #652:#653     // getContext:()Lorg/jetbrains/kotlin/codegen/context/FieldOwnerContext;, +  #655 = Methodref          #41.#654      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.getContext:()Lorg/jetbrains/kotlin/codegen/context/FieldOwnerContext;, +  #656 = Utf8               codegen.context, +  #657 = String             #656          // codegen.context, +  #658 = Utf8               org/jetbrains/kotlin/codegen/context/FieldOwnerContext, +  #659 = Class              #658          // org/jetbrains/kotlin/codegen/context/FieldOwnerContext, +  #660 = Utf8               getParentContext, +  #661 = Utf8               ()Lorg/jetbrains/kotlin/codegen/context/CodegenContext;, +  #662 = NameAndType        #660:#661     // getParentContext:()Lorg/jetbrains/kotlin/codegen/context/CodegenContext;, +  #663 = Methodref          #659.#662     // org/jetbrains/kotlin/codegen/context/FieldOwnerContext.getParentContext:()Lorg/jetbrains/kotlin/codegen/context/CodegenContext;, +  #664 = Utf8               (Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/OwnerKind;Lorg/jetbrains/kotlin/codegen/context/CodegenContext;Lorg/jetbrains/kotlin/codegen/context/LocalLookup;)V, +  #665 = NameAndType        #183:#664     // "<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/OwnerKind;Lorg/jetbrains/kotlin/codegen/context/CodegenContext;Lorg/jetbrains/kotlin/codegen/context/LocalLookup;)V, +  #666 = Methodref          #645.#665     // org/jetbrains/kotlin/codegen/context/ClassContext."<init>":(Lorg/jetbrains/kotlin/codegen/state/KotlinTypeMapper;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/OwnerKind;Lorg/jetbrains/kotlin/codegen/context/CodegenContext;Lorg/jetbrains/kotlin/codegen/context/LocalLookup;)V, +  #667 = Utf8               getParentCodegen, +  #668 = Utf8               ()Lorg/jetbrains/kotlin/codegen/MemberCodegen;, +  #669 = NameAndType        #667:#668     // getParentCodegen:()Lorg/jetbrains/kotlin/codegen/MemberCodegen;, +  #670 = Methodref          #41.#669      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.getParentCodegen:()Lorg/jetbrains/kotlin/codegen/MemberCodegen;, +  #671 = Utf8               (Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;Lorg/jetbrains/kotlin/codegen/context/ClassContext;Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;Lorg/jetbrains/kotlin/codegen/MemberCodegen;Z)V, +  #672 = NameAndType        #183:#671     // "<init>":(Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;Lorg/jetbrains/kotlin/codegen/context/ClassContext;Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;Lorg/jetbrains/kotlin/codegen/MemberCodegen;Z)V, +  #673 = Methodref          #41.#672      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen."<init>":(Lorg/jetbrains/kotlin/psi/KtPureClassOrObject;Lorg/jetbrains/kotlin/codegen/context/ClassContext;Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;Lorg/jetbrains/kotlin/codegen/MemberCodegen;Z)V, +  #674 = String             #3            // java/lang/Object, +  #675 = Utf8               java/lang/String, +  #676 = Class              #675          // java/lang/String, +  #677 = Utf8               defineClass, +  #678 = Utf8               (Lcom/intellij/psi/PsiElement;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V, +  #679 = NameAndType        #677:#678     // defineClass:(Lcom/intellij/psi/PsiElement;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V, +  #680 = InterfaceMethodref #553.#679     // org/jetbrains/kotlin/codegen/ClassBuilder.defineClass:(Lcom/intellij/psi/PsiElement;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V, +  #681 = Utf8               visitInnerClass, +  #682 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V, +  #683 = NameAndType        #681:#682     // visitInnerClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V, +  #684 = InterfaceMethodref #553.#683     // org/jetbrains/kotlin/codegen/ClassBuilder.visitInnerClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V, +  #685 = Utf8               codegen.state, +  #686 = String             #685          // codegen.state, +  #687 = Utf8               org/jetbrains/kotlin/codegen/WriteAnnotationUtilKt, +  #688 = Class              #687          // org/jetbrains/kotlin/codegen/WriteAnnotationUtilKt, +  #689 = Utf8               writeSyntheticClassMetadata, +  #690 = Utf8               (Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V, +  #691 = NameAndType        #689:#690     // writeSyntheticClassMetadata:(Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V, +  #692 = Methodref          #688.#691     // org/jetbrains/kotlin/codegen/WriteAnnotationUtilKt.writeSyntheticClassMetadata:(Lorg/jetbrains/kotlin/codegen/ClassBuilder;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V, +  #693 = Utf8               writeCreatorConstructor, +  #694 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #695 = NameAndType        #693:#694     // writeCreatorConstructor:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #696 = Methodref          #2.#695       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.writeCreatorConstructor:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #697 = Utf8               writeNewArrayMethod, +  #698 = Utf8               (Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)V, +  #699 = NameAndType        #697:#698     // writeNewArrayMethod:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)V, +  #700 = Methodref          #2.#699       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.writeNewArrayMethod:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)V, +  #701 = NameAndType        #486:#487     // writeCreateFromParcel:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List;)V, +  #702 = Methodref          #2.#701       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.writeCreateFromParcel:(Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/descriptors/impl/ClassDescriptorImpl;Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Ljava/util/List;)V, +  #703 = Utf8               done, +  #704 = NameAndType        #703:#228     // done:()V, +  #705 = InterfaceMethodref #553.#704     // org/jetbrains/kotlin/codegen/ClassBuilder.done:()V, +  #706 = Utf8               codegenForCreator, +  #707 = Utf8               classContextForCreator, +  #708 = Utf8               Lorg/jetbrains/kotlin/codegen/context/ClassContext;, +  #709 = Utf8               classBuilderForCreator, +  #710 = Utf8               org/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl, +  #711 = Class              #710          // org/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl, +  #712 = Utf8               setReturnType, +  #713 = Utf8               (Lorg/jetbrains/kotlin/types/KotlinType;)V, +  #714 = NameAndType        #712:#713     // setReturnType:(Lorg/jetbrains/kotlin/types/KotlinType;)V, +  #715 = Methodref          #711.#714     // org/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl.setReturnType:(Lorg/jetbrains/kotlin/types/KotlinType;)V, +  #716 = Utf8               DescriptorFactory.create…ultType\n                }, +  #717 = String             #716          // DescriptorFactory.create…ultType\n                }, +  #718 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreatorConstructor$2, +  #719 = Class              #718          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreatorConstructor$2, +  #720 = Utf8               (Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #721 = NameAndType        #183:#720     // "<init>":(Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #722 = Methodref          #719.#721     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreatorConstructor$2."<init>":(Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #723 = Utf8               $this$apply, +  #724 = Utf8               Lorg/jetbrains/kotlin/descriptors/impl/ClassConstructorDescriptorImpl;, +  #725 = Utf8               $i$a$-apply-ParcelableCodegenExtension$writeCreatorConstructor$1, +  #726 = Utf8               NEW_ARRAY, +  #727 = NameAndType        #726:#281     // NEW_ARRAY:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, +  #728 = Fieldref           #279.#727     // org/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind.NEW_ARRAY:Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;, +  #729 = Utf8               org/jetbrains/kotlin/types/Variance, +  #730 = Class              #729          // org/jetbrains/kotlin/types/Variance, +  #731 = Utf8               INVARIANT, +  #732 = Utf8               Lorg/jetbrains/kotlin/types/Variance;, +  #733 = NameAndType        #731:#732     // INVARIANT:Lorg/jetbrains/kotlin/types/Variance;, +  #734 = Fieldref           #730.#733     // org/jetbrains/kotlin/types/Variance.INVARIANT:Lorg/jetbrains/kotlin/types/Variance;, +  #735 = Utf8               getArrayType, +  #736 = Utf8               (Lorg/jetbrains/kotlin/types/Variance;Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/types/SimpleType;, +  #737 = NameAndType        #735:#736     // getArrayType:(Lorg/jetbrains/kotlin/types/Variance;Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/types/SimpleType;, +  #738 = Methodref          #507.#737     // org/jetbrains/kotlin/builtins/KotlinBuiltIns.getArrayType:(Lorg/jetbrains/kotlin/types/Variance;Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/types/SimpleType;, +  #739 = Utf8               builtIns.getArrayType(Va…ARIANT, builtIns.anyType), +  #740 = String             #739          // builtIns.getArrayType(Va…ARIANT, builtIns.anyType), +  #741 = Utf8               size, +  #742 = String             #741          // size, +  #743 = Utf8               getIntType, +  #744 = NameAndType        #743:#68      // getIntType:()Lorg/jetbrains/kotlin/types/SimpleType;, +  #745 = Methodref          #507.#744     // org/jetbrains/kotlin/builtins/KotlinBuiltIns.getIntType:()Lorg/jetbrains/kotlin/types/SimpleType;, +  #746 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeNewArrayMethod$1, +  #747 = Class              #746          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeNewArrayMethod$1, +  #748 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #749 = NameAndType        #183:#748     // "<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #750 = Methodref          #747.#749     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeNewArrayMethod$1."<init>":(Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/org/objectweb/asm/Type;)V, +  #751 = Utf8               parcelableAsmType, +  #752 = Utf8               builtIns, +  #753 = Utf8               Lorg/jetbrains/kotlin/builtins/KotlinBuiltIns;, +  #754 = Utf8               (Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lkotlin/jvm/functions/Function1<-Lorg/jetbrains/kotlin/codegen/ExpressionCodegen;Lkotlin/Unit;>;)V, +  #755 = Utf8               functionCodegen, +  #756 = Utf8               Lorg/jetbrains/kotlin/codegen/FunctionCodegen;, +  #757 = NameAndType        #755:#756     // functionCodegen:Lorg/jetbrains/kotlin/codegen/FunctionCodegen;, +  #758 = Fieldref           #41.#757      // org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.functionCodegen:Lorg/jetbrains/kotlin/codegen/FunctionCodegen;, +  #759 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$write$1, +  #760 = Class              #759          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$write$1, +  #761 = Utf8               (Lkotlin/jvm/functions/Function1;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V, +  #762 = NameAndType        #183:#761     // "<init>":(Lkotlin/jvm/functions/Function1;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V, +  #763 = Methodref          #760.#762     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$write$1."<init>":(Lkotlin/jvm/functions/Function1;Lorg/jetbrains/kotlin/codegen/ImplementationBodyCodegen;Lorg/jetbrains/kotlin/codegen/state/GenerationState;)V, +  #764 = Utf8               org/jetbrains/kotlin/codegen/FunctionGenerationStrategy, +  #765 = Class              #764          // org/jetbrains/kotlin/codegen/FunctionGenerationStrategy, +  #766 = Utf8               org/jetbrains/kotlin/codegen/FunctionCodegen, +  #767 = Class              #766          // org/jetbrains/kotlin/codegen/FunctionCodegen, +  #768 = Utf8               generateMethod, +  #769 = Utf8               (Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/FunctionGenerationStrategy;)V, +  #770 = NameAndType        #768:#769     // generateMethod:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/FunctionGenerationStrategy;)V, +  #771 = Methodref          #767.#770     // org/jetbrains/kotlin/codegen/FunctionCodegen.generateMethod:(Lorg/jetbrains/kotlin/resolve/jvm/diagnostics/JvmDeclarationOrigin;Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;Lorg/jetbrains/kotlin/codegen/FunctionGenerationStrategy;)V, +  #772 = Utf8               declarationOrigin, +  #773 = Utf8               $this$write, +  #774 = Utf8               Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;, +  #775 = Utf8               code, +  #776 = Utf8               Lkotlin/jvm/functions/Function1;, +  #777 = Methodref          #4.#229       // java/lang/Object."<init>":()V, +  #778 = Utf8               <clinit>, +  #779 = Utf8               Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion;, +  #780 = Utf8               $this$hasCreatorField, +  #781 = String             #780          // $this$hasCreatorField, +  #782 = Utf8               org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls, +  #783 = Class              #782          // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls, +  #784 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +  #785 = NameAndType        #129:#784     // hasCreatorField:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +  #786 = Methodref          #783.#785     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasCreatorField:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +  #787 = Utf8               Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;, +  #788 = Utf8               $this$isParcelableClassDescriptor, +  #789 = String             #788          // $this$isParcelableClassDescriptor, +  #790 = NameAndType        #51:#784      // isParcelableClassDescriptor:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +  #791 = Methodref          #783.#790     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.isParcelableClassDescriptor:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +  #792 = Utf8               $this$hasSyntheticDescribeContents, +  #793 = String             #792          // $this$hasSyntheticDescribeContents, +  #794 = NameAndType        #107:#784     // hasSyntheticDescribeContents:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +  #795 = Methodref          #783.#794     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasSyntheticDescribeContents:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +  #796 = Utf8               $this$hasSyntheticWriteToParcel, +  #797 = String             #796          // $this$hasSyntheticWriteToParcel, +  #798 = NameAndType        #114:#784     // hasSyntheticWriteToParcel:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +  #799 = Methodref          #783.#798     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasSyntheticWriteToParcel:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +  #800 = Utf8               Lorg/jetbrains/annotations/Nullable;, +  #801 = Utf8               $this$findFunction, +  #802 = String             #801          // $this$findFunction, +  #803 = Utf8               componentKind, +  #804 = String             #803          // componentKind, +  #805 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, +  #806 = NameAndType        #284:#805     // findFunction:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, +  #807 = Methodref          #783.#806     // org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.findFunction:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, +  #808 = Utf8               applyFunction, +  #809 = Utf8               (Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, +  #810 = Utf8               (Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall<*>;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, +  #811 = Utf8               receiver, +  #812 = String             #811          // receiver, +  #813 = Utf8               resolvedCall, +  #814 = String             #813          // resolvedCall, +  #815 = Utf8               c, +  #816 = String             #815          // c, +  #817 = Utf8               org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls, +  #818 = Class              #817          // org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls, +  #819 = Utf8               (Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, +  #820 = NameAndType        #808:#819     // applyFunction:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, +  #821 = Methodref          #818.#820     // org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls.applyFunction:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, +  #822 = Utf8               Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;, +  #823 = Utf8               Lorg/jetbrains/kotlin/codegen/StackValue;, +  #824 = Utf8               Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;, +  #825 = Utf8               Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;, +  #826 = Utf8               applyProperty, +  #827 = NameAndType        #826:#819     // applyProperty:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, +  #828 = Methodref          #818.#827     // org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls.applyProperty:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, +  #829 = Utf8               access$getCompanionClassType, +  #830 = Utf8               (Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Pair;, +  #831 = NameAndType        #215:#216     // getCompanionClassType:(Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Pair;, +  #832 = Methodref          #2.#831       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.getCompanionClassType:(Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Pair;, +  #833 = Utf8               $this, +  #834 = Utf8               Lkotlin/Metadata;, +  #835 = Utf8               mv, +  #836 = Integer            1, +  #837 = Integer            4, +  #838 = Integer            0, +  #839 = Utf8               bv, +  #840 = Integer            3, +  #841 = Utf8               k, +  #842 = Utf8               xi, +  #843 = Integer            2, +  #844 = Utf8               d1, +  #845 = Utf8                r\n\n\n\n\n\n\n\n \n\n \n\n\n\n\n\n \n \n\n\n\n\n\n \n\n\t\n\n \n\n\n\n  22020:23B¢J0\t2\n0HJ$000\r2020HJ002\n020HJ020HJH0\t2\n020202020202 00HJ!0\t2\n0HJ@\"0\t2\n0202020202 00HJ #0\t2\n0202$0HJ*%0\t2\n0202020HJ&0*0HJ-'0\t*0(2\n02)0+0\t0*¢,HJ)-0\t*02\n02.00H¢/J;00\t*02\n02 002020H¢1R08VX¢¨4, +  #846 = Utf8               d2, +  #847 = Utf8               shouldGenerateClassSyntheticPartsInLightClassesMode, +  #848 = Utf8, +  #849 = Utf8               Lkotlin/Pair;, +  #850 = Utf8               Lkotlin/Function1;, +  #851 = Utf8               Lorg/jetbrains/kotlin/codegen/ExpressionCodegen;, +  #852 = Utf8               Lkotlin/ExtensionFunctionType;, +  #853 = Utf8               PropertyToSerialize, +  #854 = Utf8               android-extensions-compiler, +  #855 = Utf8               org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion, +  #856 = Class              #855          // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion, +  #857 = Utf8               (Lkotlin/jvm/internal/DefaultConstructorMarker;)V, +  #858 = NameAndType        #183:#857     // "<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V, +  #859 = Methodref          #856.#858     // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V, +  #860 = NameAndType        #157:#779     // Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion;, +  #861 = Fieldref           #2.#860       // org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension.Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion;, +  #862 = Utf8               org/jetbrains/kotlin/name/FqName, +  #863 = Class              #862          // org/jetbrains/kotlin/name/FqName, +  #864 = Utf8               java/io/FileDescriptor, +  #865 = Class              #864          // java/io/FileDescriptor, +  #866 = Utf8               java/lang/Class, +  #867 = Class              #866          // java/lang/Class, +  #868 = Utf8               getCanonicalName, +  #869 = NameAndType        #868:#180     // getCanonicalName:()Ljava/lang/String;, +  #870 = Methodref          #867.#869     // java/lang/Class.getCanonicalName:()Ljava/lang/String;, +  #871 = Methodref          #863.#185     // org/jetbrains/kotlin/name/FqName."<init>":(Ljava/lang/String;)V, +  #872 = Utf8               ParcelableCodegenExtension.kt, +  #873 = Utf8               Code, +  #874 = Utf8               LineNumberTable, +  #875 = Utf8               LocalVariableTable, +  #876 = Utf8               Deprecated, +  #877 = Utf8               RuntimeVisibleAnnotations, +  #878 = Utf8               RuntimeInvisibleParameterAnnotations, +  #879 = Utf8               StackMapTable, +  #880 = Utf8               Signature, +  #881 = Utf8               RuntimeInvisibleAnnotations, +  #882 = Utf8               InnerClasses, +  #883 = Utf8               SourceFile, +  #884 = Utf8               SourceDebugExtension,  {,    public static final org.jetbrains.kotlin.android.parcel.ParcelableCodegenExtension$Companion Companion;,      descriptor: Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion;,      flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL,  , @@ -1143,19 +1145,21 @@,        LineNumberTable:,          line 64: 6,          line 66: 17,          line 68: 26,          line 70: 33, +        line 65100: 55,          line 71: 58,          line 395: 91,          line 396: 116,          line 71: 154,          line 397: 172,          line 71: 173,          line 70: 174,          line 70: 188,          line 74: 190, +        line 65100: 199,          line 75: 202,          line 76: 211,          line 79: 220,          line 80: 229,          line 83: 249, @@ -1175,12 +1179,12 @@,            144      28    13 element$iv   Ljava/lang/Object;,             88      85    10 $this$any$iv   Ljava/lang/Iterable;,             91      82    11 $i$f$any   I,             55     119     8    it   Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;,             58     116     9 $i$a$-takeIf-ParcelableCodegenExtension$generateClassSyntheticParts$parcelerObject$1   I, -          199      64     7 $this$with   Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;, -          202      61     8 $i$a$-with-ParcelableCodegenExtension$generateClassSyntheticParts$1   I, +          199      65     7 $this$with   Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;, +          202      62     8 $i$a$-with-ParcelableCodegenExtension$generateClassSyntheticParts$1   I,            329      23     5 parcelClassType   Lorg/jetbrains/kotlin/types/SimpleType;,            190     163     4 parcelerObject   Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;,             33     320     3 propertiesToSerialize   Ljava/util/List;,             17     336     2 parcelableClass   Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;,              0     353     0  this   Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;, @@ -1193,11 +1197,11 @@,      descriptor: ()V,      flags: ACC_PUBLIC,      Code:,        stack=1, locals=1, args_size=1,           0: aload_0, -         1: invokespecial #775                // Method java/lang/Object."<init>":()V, +         1: invokespecial #777                // Method java/lang/Object."<init>":()V,           4: return,        LineNumberTable:,          line 46: 0,        LocalVariableTable:,          Start  Length  Slot  Name   Signature, @@ -1206,36 +1210,36 @@,    static {};,      descriptor: ()V,      flags: ACC_STATIC,      Code:,        stack=3, locals=0, args_size=0, -         0: new           #854                // class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion, +         0: new           #856                // class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion,           3: dup,           4: aconst_null, -         5: invokespecial #857                // Method org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V, -         8: putstatic     #859                // Field Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion;, -        11: new           #861                // class org/jetbrains/kotlin/name/FqName, +         5: invokespecial #859                // Method org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V, +         8: putstatic     #861                // Field Companion:Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion;, +        11: new           #863                // class org/jetbrains/kotlin/name/FqName,          14: dup, -        15: ldc_w         #863                // class java/io/FileDescriptor, -        18: invokevirtual #868                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;, -        21: invokespecial #869                // Method org/jetbrains/kotlin/name/FqName."<init>":(Ljava/lang/String;)V, -        24: putstatic     #350                // Field FILE_DESCRIPTOR_FQNAME:Lorg/jetbrains/kotlin/name/FqName;, +        15: ldc_w         #865                // class java/io/FileDescriptor, +        18: invokevirtual #870                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;, +        21: invokespecial #871                // Method org/jetbrains/kotlin/name/FqName."<init>":(Ljava/lang/String;)V, +        24: putstatic     #352                // Field FILE_DESCRIPTOR_FQNAME:Lorg/jetbrains/kotlin/name/FqName;,          27: return,        LineNumberTable:,          line 49: 11,  ,    public boolean hasCreatorField(org.jetbrains.kotlin.descriptors.ClassDescriptor);,      descriptor: (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z,      flags: ACC_PUBLIC,      Code:,        stack=2, locals=2, args_size=2,           0: aload_1, -         1: ldc_w         #779                // String $this$hasCreatorField, +         1: ldc_w         #781                // String $this$hasCreatorField,           4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V,           7: aload_0,           8: aload_1, -         9: invokestatic  #784                // Method org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasCreatorField:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +         9: invokestatic  #786                // Method org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasCreatorField:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z,          12: ireturn,        LineNumberTable:,          line 46: 7,        LocalVariableTable:,          Start  Length  Slot  Name   Signature, @@ -1249,15 +1253,15 @@,      descriptor: (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z,      flags: ACC_PUBLIC,      Code:,        stack=2, locals=2, args_size=2,           0: aload_1, -         1: ldc_w         #787                // String $this$isParcelableClassDescriptor, +         1: ldc_w         #789                // String $this$isParcelableClassDescriptor,           4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V,           7: aload_0,           8: aload_1, -         9: invokestatic  #789                // Method org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.isParcelableClassDescriptor:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +         9: invokestatic  #791                // Method org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.isParcelableClassDescriptor:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z,          12: ireturn,        LineNumberTable:,          line 46: 7,        LocalVariableTable:,          Start  Length  Slot  Name   Signature, @@ -1271,15 +1275,15 @@,      descriptor: (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z,      flags: ACC_PUBLIC,      Code:,        stack=2, locals=2, args_size=2,           0: aload_1, -         1: ldc_w         #791                // String $this$hasSyntheticDescribeContents, +         1: ldc_w         #793                // String $this$hasSyntheticDescribeContents,           4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V,           7: aload_0,           8: aload_1, -         9: invokestatic  #793                // Method org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasSyntheticDescribeContents:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +         9: invokestatic  #795                // Method org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasSyntheticDescribeContents:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z,          12: ireturn,        LineNumberTable:,          line 46: 7,        LocalVariableTable:,          Start  Length  Slot  Name   Signature, @@ -1293,15 +1297,15 @@,      descriptor: (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z,      flags: ACC_PUBLIC,      Code:,        stack=2, locals=2, args_size=2,           0: aload_1, -         1: ldc_w         #795                // String $this$hasSyntheticWriteToParcel, +         1: ldc_w         #797                // String $this$hasSyntheticWriteToParcel,           4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V,           7: aload_0,           8: aload_1, -         9: invokestatic  #797                // Method org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasSyntheticWriteToParcel:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z, +         9: invokestatic  #799                // Method org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.hasSyntheticWriteToParcel:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Z,          12: ireturn,        LineNumberTable:,          line 46: 7,        LocalVariableTable:,          Start  Length  Slot  Name   Signature, @@ -1315,29 +1319,29 @@,      descriptor: (Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;,      flags: ACC_PUBLIC,      Code:,        stack=3, locals=3, args_size=3,           0: aload_1, -         1: ldc_w         #800                // String $this$findFunction, +         1: ldc_w         #802                // String $this$findFunction,           4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V,           7: aload_2, -         8: ldc_w         #802                // String componentKind, +         8: ldc_w         #804                // String componentKind,          11: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V,          14: aload_0,          15: aload_1,          16: aload_2, -        17: invokestatic  #805                // Method org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.findFunction:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;, +        17: invokestatic  #807                // Method org/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase$DefaultImpls.findFunction:(Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;)Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;,          20: areturn,        LineNumberTable:,          line 46: 14,        LocalVariableTable:,          Start  Length  Slot  Name   Signature,              0      21     0  this   Lorg/jetbrains/kotlin/android/parcel/serializers/ParcelableExtensionBase;,              0      21     1 $this$findFunction   Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;,              0      21     2 componentKind   Lorg/jetbrains/kotlin/android/parcel/ParcelableSyntheticComponent$ComponentKind;,      RuntimeInvisibleAnnotations:, -      0: #798(), +      0: #800(),      RuntimeInvisibleParameterAnnotations:,        0:,          0: #22(),        1:,          0: #22(), @@ -1346,35 +1350,35 @@,      descriptor: (Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;,      flags: ACC_PUBLIC,      Code:,        stack=4, locals=4, args_size=4,           0: aload_1, -         1: ldc_w         #810                // String receiver, +         1: ldc_w         #812                // String receiver,           4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V,           7: aload_2, -         8: ldc_w         #812                // String resolvedCall, +         8: ldc_w         #814                // String resolvedCall,          11: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V,          14: aload_3, -        15: ldc_w         #814                // String c, +        15: ldc_w         #816                // String c,          18: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V,          21: aload_0,          22: aload_1,          23: aload_2,          24: aload_3, -        25: invokestatic  #819                // Method org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls.applyFunction:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, +        25: invokestatic  #821                // Method org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls.applyFunction:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;,          28: areturn,        LineNumberTable:,          line 46: 21,        LocalVariableTable:,          Start  Length  Slot  Name   Signature,              0      29     0  this   Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;,              0      29     1 receiver   Lorg/jetbrains/kotlin/codegen/StackValue;,              0      29     2 resolvedCall   Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;,              0      29     3     c   Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;, -    Signature: #808                         // (Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall<*>;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, +    Signature: #810                         // (Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall<*>;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;,      RuntimeInvisibleAnnotations:, -      0: #798(), +      0: #800(),      RuntimeInvisibleParameterAnnotations:,        0:,          0: #22(),        1:,          0: #22(), @@ -1385,35 +1389,35 @@,      descriptor: (Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;,      flags: ACC_PUBLIC,      Code:,        stack=4, locals=4, args_size=4,           0: aload_1, -         1: ldc_w         #810                // String receiver, +         1: ldc_w         #812                // String receiver,           4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V,           7: aload_2, -         8: ldc_w         #812                // String resolvedCall, +         8: ldc_w         #814                // String resolvedCall,          11: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V,          14: aload_3, -        15: ldc_w         #814                // String c, +        15: ldc_w         #816                // String c,          18: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V,          21: aload_0,          22: aload_1,          23: aload_2,          24: aload_3, -        25: invokestatic  #826                // Method org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls.applyProperty:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, +        25: invokestatic  #828                // Method org/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$DefaultImpls.applyProperty:(Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;,          28: areturn,        LineNumberTable:,          line 46: 21,        LocalVariableTable:,          Start  Length  Slot  Name   Signature,              0      29     0  this   Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension;,              0      29     1 receiver   Lorg/jetbrains/kotlin/codegen/StackValue;,              0      29     2 resolvedCall   Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall;,              0      29     3     c   Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;, -    Signature: #808                         // (Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall<*>;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;, +    Signature: #810                         // (Lorg/jetbrains/kotlin/codegen/StackValue;Lorg/jetbrains/kotlin/resolve/calls/model/ResolvedCall<*>;Lorg/jetbrains/kotlin/codegen/extensions/ExpressionCodegenExtension$Context;)Lorg/jetbrains/kotlin/codegen/StackValue;,      RuntimeInvisibleAnnotations:, -      0: #798(), +      0: #800(),      RuntimeInvisibleParameterAnnotations:,        0:,          0: #22(),        1:,          0: #22(), @@ -1426,29 +1430,29 @@,      Code:,        stack=3, locals=3, args_size=3,           0: aload_0,           1: aload_1,           2: aload_2, -         3: invokespecial #830                // Method getCompanionClassType:(Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Pair;, +         3: invokespecial #832                // Method getCompanionClassType:(Lorg/jetbrains/org/objectweb/asm/Type;Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;)Lkotlin/Pair;,           6: areturn,        LineNumberTable:,          line 46: 0,        LocalVariableTable:,          Start  Length  Slot  Name   Signature,              0       7     0 $this   Lorg/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension;,              0       7     1 containerAsmType   Lorg/jetbrains/org/objectweb/asm/Type;,              0       7     2 parcelerObject   Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;,  },  InnerClasses:, -     public static final #851= #312 of #2; //PropertyToSerialize=class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize of class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension, -     static final #289; //class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1, -     static final #324; //class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1, -     static final #524; //class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1, -     static final #717; //class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreatorConstructor$2, -     static final #745; //class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeNewArrayMethod$1, -     public static final #758; //class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$write$1, -     public static final #157= #854 of #2; //Companion=class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion of class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension, +     public static final #853= #314 of #2; //PropertyToSerialize=class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$PropertyToSerialize of class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension, +     static final #291; //class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeWriteToParcel$1, +     static final #326; //class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeDescribeContentsFunction$1, +     static final #526; //class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreateFromParcel$1, +     static final #719; //class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeCreatorConstructor$2, +     static final #747; //class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$writeNewArrayMethod$1, +     public static final #760; //class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$write$1, +     public static final #157= #856 of #2; //Companion=class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension$Companion of class org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension,  SourceFile: "ParcelableCodegenExtension.kt",  SourceDebugExtension:,    SMAP,    ParcelableCodegenExtension.kt,    Kotlin, @@ -1458,16 +1462,16 @@,    org/jetbrains/kotlin/android/parcel/ParcelableCodegenExtension,    + 2 _Collections.kt,    kotlin/collections/CollectionsKt___CollectionsKt,    *L,    1#1,394:1, -  1552#2,3:395, -  1552#2,3:398, -  1552#2,3:401, +  1550#2,3:395, +  1550#2,3:398, +  1550#2,3:401,    250#2,2:404,    1412#2,9:406, -  1644#2,2:415, +  1642#2,2:415,    1421#2:417,    1360#2:418,    1429#2,3:419,    *E,    *S KotlinDebug, @@ -1484,7 +1488,7 @@,    195#1:417,    201#1:418,    201#1,3:419,    *E,  RuntimeVisibleAnnotations:, -  0: #832(#833=[I#834,I#834,I#835],#836=[I#834,I#837,I#838],#839=I#834,#840=I#841,#842=[s#843],#844=[s#32,s#785,s#820,s#228,s#845,s#846,s#34,s#35,s#36,s#846,s#38,s#210,s#215,s#847,s#262,s#846,s#261,s#206,s#43,s#55,s#846,s#328,s#209,s#9,s#23,s#33,s#484,s#529,s#530,s#204,s#193,s#307,s#306,s#132,s#189,s#691,s#528,s#695,s#317,s#295,s#772,s#773,s#848,s#849,s#850,s#110,s#207,s#111,s#125,s#126,s#157,s#851,s#852]), +  0: #834(#835=[I#836,I#837,I#838],#839=[I#836,I#838,I#840],#841=I#836,#842=I#843,#844=[s#845],#846=[s#32,s#787,s#822,s#228,s#847,s#848,s#34,s#35,s#36,s#848,s#38,s#210,s#215,s#849,s#264,s#848,s#263,s#206,s#43,s#55,s#848,s#330,s#209,s#9,s#23,s#33,s#486,s#531,s#532,s#204,s#193,s#309,s#308,s#132,s#189,s#693,s#530,s#697,s#319,s#297,s#774,s#775,s#850,s#851,s#852,s#110,s#207,s#111,s#125,s#126,s#157,s#853,s#854]),  ]...
